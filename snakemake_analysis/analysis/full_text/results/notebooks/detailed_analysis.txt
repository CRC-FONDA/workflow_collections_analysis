ktmeaton/plague-phylogeography, 1 (no dag) (no notebook)
    ('workflow/Snakefile', 36, 'notebooks_dir = os.path.join(pipeline_dir, "workflow", "notebooks")')
no further mentions of notebooks in the snakefile


ktmeaton/ncov-phylogeography, 1 (dag file, but seems corrupted) (no notebook)
    ('workflow/Snakefile', 37, 'notebooks_dir = os.path.join(pipeline_dir, "workflow", "notebooks")')
no further mentions of notebooks in the snakefile


mardzix/bcd_nano_CUTnTag, 1 (no dag) (1 notebook)
    ('workflow/Snakefile_single_modality.smk', 61, "        notebook   =  workflow_dir + \\'/notebooks/single_modality/{modality}_rename_clusters.Rmd\\',")
NOTEWORTHY!:
    notebook only mentioned as input file
    the notebook rule has a shell keyword that runs an R command that seems to render(print) the output of the notebook into stdout
        it refers to a notebook input file
there is no notebook-keyword in the snakefile
the notebook mostly seems to plot things unsing R's DimPlot


Noble-Lab/ppx-workflow, 2 (no dag) (2 notebooks)
    ('workflow/Snakefile', 49, '    notebook:')
    ('workflow/Snakefile', 65, '    notebook:')
both notebooks occur in seperate rules. Only difference is that one is mentioned as log, so changes are saved
    why that difference regarding the log mention exists would be an interesting question - no answer yet
other than that both rules directly feed into the all rule, the output is just the png of the plot
notebook rules rune no further code
exemplary snakemake notebook use


akhanf/tract-fconn-smk, 2 (no dag) (1 notebook)
    ('workflow/Snakefile', 54, "        notebook = \\'results/notebooks/seed_conn/seed_conn_sub-{subject}_task-{task}_seed-{seed}.py.ipynb\\'")
    ('workflow/Snakefile', 55, '    notebook:')
standard notebook key word usage with log that feeds into al rules
notebook rule runs no further code
exemplary snakemake notebook use


jbloomlab/SARS-CoV-2-RBD_DMS_variants, 2 (no dag) (2 notebooks)
    ('Snakefile', 138, '    notebook: "Epistatic-Shifts-Interactive-Visualization.ipynb"')
    ('Snakefile', 150, '    notebook: "RBD-Heatmaps-Interactive-Visualization.ipynb"')
exemplary snakemake notebook use - noticed nothing to note
    except that notebooks are saved in the docs/_includes folder which is a strange location and are saved as .html

MGXlab/pvogs_function, 2 (no dag) (2 notebooks)
    ('workflow/Snakefile', 75, '    notebook:')
    ('workflow/Snakefile', 145, '    notebook:')
first notebook: "notebooks/analysis.py.ipynb" in checkpoint rule random_forest
    the notebook does a lot: it trains ml models, searches for hyperparameters
    NOTEWORTHY USE OF CHECKPOINT!
    notebook is used without log keyword here, so it's not meant to be changed and saved?
second notebook: "notebooks/annotation_stats.py.ipynb" more standard use case in normal rule that only feeds into all rule
    the notebook accumulates results and plots them


jbloomlab/SARS-CoV-2-RBD_DMS_Omicron, 2 (no dag) (2 notebooks)
    ('Snakefile', 130, '    notebook: "Epistatic-Shifts-Interactive-Visualization.ipynb"')
    ('Snakefile', 142, '    notebook: "RBD-Heatmaps-Interactive-Visualization.ipynb"')
looks like standard visualisation use case
    judged by the rule names the plots in the notebook appear to be interactive, which would explain the notebook usage


BodenmillerGroup/ImcSegmentationSnakemake, 4 (no dag) (2 notebooks)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
NOTEWORTHY: notebook rules are in nested if else blocks in the snakefile; i.e. only included under certain dontitions
The first notebook rule seems to deef into the second notebook rule (if it exists; otherwise a dummy rule just copys some results)
NOTEWORTHY: This is a skip interaction we are interested in! But no interactivity in notebook, instead if else blocks in snakefile


yplakaka/imcsegmentation, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
this just seems to ba a copy of the immediately above mentioned part of the workflow BodenmillerGroup/ImcSegmentationSnakemake
    hmm .. for now I will count these as independent instances


jdossgollin/2021-TXtreme, 4 (has complex dag, apparently not all notebook rules appear in it) (4 notebooks)
    ('Snakefile', 157, '    notebook: scriptdir("hdd_idf.ipynb")')
    ('Snakefile', 168, '    notebook: scriptdir("historic_extremes.ipynb")')
    ('Snakefile', 181, '    notebook: scriptdir("local_return_period.ipynb")')
    ('Snakefile', 186, '    notebook: scriptdir("time_series.ipynb")\'')
seems to be a standard use case


jwdebelius/avengers-assemble, 4 (no dag) (4 notebooks)
    ('Snakefile', 984, '    notebook:')
    ('Snakefile', 1006, '    notebook:')
    ('Snakefile', 1018, '    notebook:')
    ('Snakefile', 1029, '    notebook:')
seems to be a standard use case, but names in github repo and snakefile in that repo only partially match, probably some inconsistent update


CarolinaPB/single-cell-data-processing, 4 (no dag) (2 notebooks)
    ('Snakefile', 355, '        notebook = "3_QC/processed_notebook_{samples}.ipynb"')
    ('Snakefile', 364, '    notebook:')
    ('Snakefile', 378, '        notebook = "4_Doublets/processed_notebook_{samples}.ipynb"')
    ('Snakefile', 384, '    notebook:')
the first notebook feeds into the second and the second is directly requested by the all rule
NOTEWORTHY: both notebook rules are marked as local rules, that don't need to be executed in the cluster


yplakaka/imc, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


Masteryuanli/snakerTest, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


apoire27/BodennmillerPipeline, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


troy-layouni/CellSegTest, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


Roett/ImcSegmentationSnakemake, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


Zhanmengtao/ImcSegmentationSnakemake, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


Masteryuanli/snaktest, 4 (no dag)
    ('workflow/Snakefile', 492, '                notebook="logs/compensation/imc_generatespillmat_long.r.ipynb",')
    ('workflow/Snakefile', 493, '            notebook:')
    ('workflow/Snakefile', 519, '            notebook="logs/compensation/imc_adaptsm_{stack}.r.ipynb",')
    ('workflow/Snakefile', 520, '        notebook:')
another copy of BodenmillerGroup/ImcSegmentationSnakemake


nesi/papermill_demo, 4 (has simple dag) (2 notebooks)
    ('Snakefile', 12, '        notebook="notebooks/preprocessing.ipynb"')
    ('Snakefile', 14, '        notebook="results_wf/preprocessing.ipynb",')
    ('Snakefile', 23, '        notebook="notebooks/model_fitting.ipynb",')
    ('Snakefile', 27, '        notebook="results_wf/model_fitting_{run}.ipynb"')
NOTEWORTHY: this appears to be a demo of the papermill command line tool
    this tool allows one to execute a specified notebook and save the result into another notebook


bayraktar1/RPCA, 6 (no dag) (3 notebooks)
    ('workflow/Snakefile', 812, '        notebook = OUTDIR / "QC_notebook_graphs" / "processed_venndiagrams.ipynb"')
    ('workflow/Snakefile', 813, '    notebook:')
    ('workflow/Snakefile', 832, '        notebook = OUTDIR / "QC_notebook_graphs" / "processed_align_stats.ipynb"')
    ('workflow/Snakefile', 833, '    notebook:')
    ('workflow/Snakefile', 855, '        notebook = OUTDIR / "QC_notebook_graphs" / "processed_count_stats.ipynb"')
    ('workflow/Snakefile', 856, '    notebook:')
line numbers here and in the currect github repo are slightly different, around 5 lines deleted; relative distances are the same
other than that these appear to be standard use cases


euronion/trace, 13 (no dag) (7 notebooks)
    ('rules/esc_construction.smk', 28, '    notebook:')
    ('rules/esc_construction.smk', 49, '        notebook="logs/{scenario}/{year}/{esc}/{from}-{to}/create_network.ipynb",')
    ('rules/esc_construction.smk', 50, '    notebook:')
    ('rules/esc_construction.smk', 77, '        notebook=(')
    ('rules/esc_construction.smk', 80, '    notebook:')
    ('rules/esc_construction.smk', 119, '        notebook="logs/{scenario}/{year}/{esc}/{from}-{to}/attach_supply.ipynb",')
    ('rules/esc_construction.smk', 120, '    notebook:')
    ('rules/solving.smk', 38, '        notebook="logs/{scenario}/{year}/{esc}/{from}-{to}/solve_network.ipynb",')
    ('rules/solving.smk', 39, '    notebook:')
    ('rules/results.smk', 30, '        notebook="logs/combine_results.ipynb",')
    ('rules/results.smk', 31, '    notebook:')
    ('rules/results.smk', 45, '        notebook=(')
    ('rules/results.smk', 48, '    notebook:')
NOTEWORTHY: notebook rules are spread around different snakefiles
NOTEWORTHY: each notebook seems to define a sigle self-contained action that can the be called in the workflow
NOTEWORTHY: unusual use case; the workflow is simulating a network with different components?























