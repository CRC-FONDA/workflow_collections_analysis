operator, total count, category (0=domain specific, 1=control flow, 2=file content handling, 3=file handling, 4=code execution (e.g. conda, python, rscript ..), 5=data handling (e.g. wget), 6=misc, 7=noise, 8=under 10 count)
{log}, 3186, 9
, 3183, 7
{output}, 2282, 9
samtools, 1290, 0
echo, 1241, 6
shell:, 1059, 7
python, 839, 4
mkdir, 811, 3
&1, 770, 7
rm, 706, 3
bcftools, 678, 0
mv, 621, 3
cut, 613, 2
set, 590, 4
cat, 579, 2
sed, 533, 2
awk, 480, 2
if, 474, 1
2, 471, 7
fi, 396, 1
grep, 394, 2
Rscript, 392, 4
cp, 368, 3
cd, 367, 3
bedtools, 361, 0
{input}, 313, 9
touch, 301, 3
gzip, 288, 5
qiime, 262, 0
wget, 257, 5
{output};, 257, 9
gatk, 253, 0
sort, 245, 2
&, 239, 7
for, 238, 1
else, 236, 1
conda, 218, 4
done, 217, 1
bgzip, 210, 5
export, 207, 4
rbt, 200, 6
fastqc, 198, 0
python3, 190, 4
zcat, 188, 5
ln, 183, 3
{params.conda_activate}, 180, 9
gunzip, 179, 5
perl, 179, 4
bwa, 170, 0
bedextract, 167, 0
{params.program}, 164, 9
tr, 152, 2
r, 150, 6
tabix, 143, 0
&2, 143, 7
curl, 141, 5
{log.stderr}, 133, 9
multiqc, 129, 0
wc, 125, 2
pigz, 117, 5
1, 115, 7
head, 111, 2
do, 106, 1
uniq, 101, 2
{log.stdout}, 101, 9
{log};, 99, 9
picard, 99, 0
{output[0]}, 99, 9
tail, 97, 2
STAR, 87, 6
paste, 86, 2
module, 86, 4
tar, 82, 5
source, 81, 4
exec, 79, 2
[, 77, 7
vcftools, 75, 0
R, 72, 6
{output.stats}, 70, 9
java, 70, 4
while, 70, 1
minimap2, 64, 0
tee, 64, 2
then, 62, 1
seqtk, 61, 0
bash, 60, 6
{output.bed}, 60, 9
/dev/null, 60, 6
&&, 60, 7
{PROFILING}, 60, 9
trim_galore, 56, 0
date, 56, 7
read_GC.py, 55, 6
bowtie2, 54, 0
exit, 54, 6
{params.extra}, 52, 9
pygna, 52, 6
salmon, 51, 0
featureCounts, 50, 0
varlociraptor, 49, 0
{{, 49, 9
kmc_tools, 47, 0
{output.bam}, 46, 9
elif, 46, 1
kallisto, 46, 0
merfishtools, 46, 0
/, 45, 1
imctools, 45, 0
true, 44, 6
ls, 43, 6
dot, 43, 6
{params.PERL5LIB}, 42, 9
+, 41, 7
{input.script}, 40, 9
cutadapt, 40, 0
{input.bam}, 36, 9
git, 36, 6
augur, 36, 0
{input.bed}, 35, 9
{log[0]}, 34, 9
{output.est}, 34, 9
bowtie2-build, 33, 0
checkm, 33, 0
hisat2, 33, 0
bamCoverage, 33, 0
seqkit, 31, 0
xargs, 30, 6
printf, 30, 6
{output.vcf}, 30, 9
umi_tools, 30, 0
{run_r}, 30, 9
{output.slides}, 30, 9
snakemake, 29, 4
stringtie, 28, 0
fastp, 28, 0
;, 28, 7
find, 27, 2
$len;, 27, 7
plink, 27, 6
mmseqs, 27, 0
{log.error}, 27, 9
md5sum, 26, 6
unzip, 26, 5
trimmomatic, 26, 0
gffread, 25, 0
macs2, 25, 0
., 25, 7
{output.metadata}, 25, 9
blastn, 24, 0
{input.vcf}, 24, 9
rev, 24, 2
{input.fq1}, 24, 9
mothur, 24, 0
{params.bcftools}, 24, 9
{log.output}, 24, 9
sh, 23, 6
{input.ref}, 23, 9
{params.grass}, 23, 9
{params.additional_params}, 23, 9
{input.fasta}, 22, 9
bismark_methylation_extractor, 22, 0
gsutil, 22, 6
}}, 22, 7
{params.script}, 22, 9
{log[1]}, 22, 9
{log.LOG_local_stderr}, 21, 9
singularity, 21, 6
{output.tsv}, 20, 9
diamond, 20, 6
sourmash, 20, 0
bedGraphToBigWig, 19, 6
infer_experiment.py, 19, 6
qualimap, 19, 0
{params.params}, 19, 9
{output[1]}, 19, 9
{log.err}, 19, 9
abricate, 19, 0
{log.outfile}, 19, 9
dcraw, 19, 6
config[VENV_DIR], 19, 6
{params.cmd}, 18, 9
bam_stat.py, 18, 0
read_distribution.py, 18, 6
{params}, 18, 9
/ilastik-release/bin/python, 18, 7
get_species_taxids.sh, 18, 0
pushd, 18, 3
cpan, 18, 6
{VIEWBS}, 18, 9
{output.fasta}, 17, 9
gffcompare, 17, 0
kraken2, 17, 0
hisat2-build, 17, 0
{output.log}, 17, 9
{params.plink}, 17, 9
{SINGULARITY}, 17, 9
done;, 17, 1
{output.fname_bam}, 17, 9
=, 16, 7
bowtie, 16, 0
inner_distance.py, 16, 6
read_duplication.py, 16, 6
0, 16, 7
megahit, 16, 0
{log.LOG_local_stdout}, 16, 9
/bin/rm, 16, 3
{input.fastq}, 16, 9
sleep, 16, 1
$basename, 16, 7
{output.fname_reference}, 16, 9
{output.fa}, 15, 9
junction_saturation.py, 15, 6
{output.fastq}, 15, 9
INPUT={input}, 15, 6
log, 15, 6
egrep, 15, 2
plotHeatmap, 15, 6
biom, 15, 0
{input[0]}, 15, 9
g, 15, 7
{output.cmd}, 15, 9
rio, 15, 6
{config[python]}, 15, 9
{input.filtered}, 14, 9
junction_annotation.py, 14, 6
sambamba, 14, 0
metabat2, 14, 0
{params.index}, 14, 9
vsearch, 14, 0
pore_c, 14, 0
env, 14, 6
jupyter, 14, 4
{output.counts}, 13, 9
{params.url}, 13, 9
fi;, 13, 1
emapper.py, 13, 6
contigtax, 13, 6
computeMatrix, 13, 6
prodigal, 13, 0
rgi, 13, 0
chmod, 13, 6
[[, 13, 7
histogram, 13, 6
busco, 13, 6
neato, 13, 6
rb, 13, 8
:, 12, 7
csvtk, 12, 6
{params.prefix}, 12, 9
INPUT={input.bam}, 12, 7
I={input}, 12, 7
bc, 12, 6
reformat.sh, 12, 6
bismark, 12, 0
multiBamSummary, 12, 0
{input[1]}, 12, 9
{input.r1}, 12, 9
{params.root:q}/{log.err:q}, 12, 9
rsync, 12, 3
NanoPlot, 12, 0
zip, 12, 5
smc++, 12, 6
gatk3, 12, 0
split, 12, 6
python2, 12, 4
hamronize, 12, 6
^.*/, 12, 7
L=$less, 12, 7
cnvkit.py, 12, 6
{output.txt}, 12, 9
Trinotate, 12, 0
{wildcards.amplitude_orientation_type}, 12, 9
{params.nice}, 12, 9
BamClipOverlap, 12, 0
], 12, 7
{input.raw}, 12, 9
{input.unique}, 12, 9
{params.fasta}, 12, 9
bwa-mem2, 11, 0
kmc, 11, 0
make, 11, 6
isoseq3, 11, 0
OUTPUT={output.bam}, 11, 7
LC_ALL=C, 11, 7
gtdbtk, 11, 0
hmmpress, 11, 0
jgi_summarize_bam_contig_depths, 11, 0
metaphlan, 11, 6
zgrep, 11, 5
makeblastdb, 11, 6
{runR}, 11, 9
{output[0]};, 11, 9
$CAT, 11, 6
print, 11, 6
2.0, 11, 7
{{output}}, 11, 9
results/data_retrieval/trimmed/{wildcards.accession}*.fastq, 11, 8
{log.errfile}, 11, 9
{input.metadata}, 11, 9
{swenv}, 11, 9
{log.LOG_local_log};, 11, 9
chrM, 10, 6
freebayes, 10, 0
bedToBigBed, 10, 8
{output.flagstat}, 10, 9
wd=$pwd, 10, 8
blobtools, 10, 0
lines=$wc, 10, 8
{params.setting}, 10, 9
{input.R1}, 10, 9
parallel, 10, 6
{params.list}, 10, 9
&1;, 10, 7
mafft, 10, 0
{config[java][command]}, 10, 9
docker, 10, 4
spades.py, 10, 6
snpEff, 10, 0
fsampleID=$echo, 10, 8
name=$echo, 10, 8
N=$less, 10, 8
test, 10, 6
NanoStat, 10, 6
RepeatMasker, 9, 8
blastdbcmd, 9, 8
{input.gtf}, 9, 9
{params.python_exec}, 9, 9
gdal_calc.py, 9, 8
cooler, 9, 8
scp, 9, 8
papermill, 9, 8
eval, 9, 8
concoct, 9, 8
bins=$wc, 9, 8
gawk, 9, 8
vamb, 9, 8
{output.report}, 9, 9
mosdepth, 9, 8
add_descriptions.py, 9, 8
set_counts, 9, 8
bzcat, 9, 8
xvfb-run, 9, 8
{params.basename}, 9, 9
{output.csv}, 9, 9
I={input.bam}, 9, 8
porechop, 9, 8
30.0, 9, 8
groot, 9, 8
antsApplyTransforms, 9, 8
OUTPUT={output}, 9, 8
{log.std}, 9, 9
cnvpytor, 9, 8
parts=${{tmp//@/, 9, 8
alleyoop, 9, 8
{output}.tmp, 8, 9
coverm, 8, 8
bbduk.sh, 8, 8
{output.agg}, 8, 9
{output.gtf}, 8, 9
sniffles, 8, 8
metawrap, 8, 0
logs/validate_bed_file/bedtools_merge.log;, 8, 8
!, 8, 8
\t, 8, 8
exitcode=$?, 8, 8
ktImportTaxonomy, 8, 8
{input.GATK}, 8, 9
SURVIVOR, 8, 8
O={output}, 8, 8
iqtree, 8, 8
{log:q}, 8, 9
fastq-dump, 8, 8
{params.options}, 8, 9
{{if, 8, 9
{{c+=length$0;}}, 8, 9
{output[2]}, 8, 9
{input.forward}, 8, 9
yes, 8, 8
ktImportText, 8, 8
{{log}}, 8, 9
{micromamba_env}, 8, 9
parallel_cmd=, 8, 8
parallel_cmd=parallel, 8, 8
fawk, 8, 8
local, 8, 8
;;, 8, 8
scripts/gtfParser, 8, 8
var=$echo, 8, 8
g;, 8, 8
ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS={threads}, 8, 8
{sing_image}, 8, 9
tmpdir=qc/fastqc/{wildcards.patient}-{wildcards.sample_type}.tmp, 8, 8
{params.workdir}/{log}, 8, 9
{params.other}, 8, 9
workflow/scripts/expression_analysis/extractFromBAM_RegionBed_WPS_Cov.py, 8, 8
GENOME.fasta, 8, 8
scripts/join_tables.py, 8, 8
tmp={wildcards.seq_mode_param}, 8, 8
source=${{parts[0]}}, 8, 8
subsample_frac=${{parts[1]}}, 8, 8
89.6/, 8, 8
89.6, 8, 8
HXB2/, 8, 8
HXB2, 8, 8
JRCSF/, 8, 8
JRCSF, 8, 8
NL43/, 8, 8
NL43, 8, 8
YU2/, 8, 8
YU2, 8, 8
{output.fname_fasta}, 8, 9
{output.dname_work}/SRR961514_1.fastq.gz, 8, 9
tmpfile={output.dname_work}/tmp.bam, 8, 8
UNFINISHED_GENOME, 8, 8
{output}.unsorted;, 8, 9
{input.input_file}, 8, 9
{output.popmap}, 8, 9
chr_exl=$samtools, 7, 8
sickle, 7, 8
call, 7, 8
vembrane, 7, 8
{output.merged}, 7, 9
{input.fai}, 7, 9
nanopolish, 7, 8
join, 7, 8
{output.tmp}, 7, 9
mawk, 7, 8
sortBed, 7, 8
{output.R1}, 7, 9
{output.R2}, 7, 9
rmdir, 7, 8
hmmscan, 7, 8
Trinity, 7, 8
fasterq-dump, 7, 8
HiC-Pro, 7, 8
plotCorrelation, 7, 8
d=$echo, 7, 8
g=$echo, 7, 8
merge_metaphlan_tables.py, 7, 8
R={input.ref}, 7, 8
CREATE_INDEX=true, 7, 8
O={output.bam}, 7, 8
M={output.metrics}, 7, 8
{log.out}, 7, 9
shuf, 7, 8
{wildcards.ss_file}/running.log;, 7, 9
header.html;, 7, 8
{input.genome}, 7, 9
{output.table}, 7, 9
{output}.log, 7, 9
{output.fq1}, 7, 9
flye, 7, 8
{input.fq}, 7, 9
params=$[[, 7, 8
f, 7, 8
canu, 7, 8
{params.bcftools_bin}, 7, 9
samblaster, 7, 8
{output.txt_fasta}, 7, 9
bismark_genome_preparation, 7, 8
fpython3, 7, 8
{params.out_dir}, 7, 9
wb_command, 7, 8
NR==1, 7, 8
{output.aln}, 7, 9
expIslDir={params.isl_dir}/{wildcards.accession}/{params.organism}, 7, 8
{output.fq}, 7, 9
{input.mothur}, 7, 9
set.diroutput={params.outdir};, 7, 8
{params.gatk}, 7, 9
glsearch36, 7, 8
!seen[$1,$2]++, 7, 8
{output.tsv:q}, 7, 9
results_report={params.resultsreport}, 7, 8
.format**config, 7, 8
{wildcards.batch_size}, 7, 9
{params.df_filter_str}{params.vis_field}, 7, 9
1000, 7, 8
scripts/tomat.py, 7, 8
sequenza-utils, 7, 8
{input.data_dir}, 7, 9
FILES=$echo, 7, 8
{input.gff}, 6, 9
SnpSift, 6, 8
{params.opts}, 6, 9
{output.sam}, 6, 9
{params.log}, 6, 9
{input.fa}, 6, 9
glnexus_cli, 6, 8
bustools, 6, 8
{output.vcf};, 6, 9
{output.r2}, 6, 9
{params.checkm}, 6, 9
crimson, 6, 8
prokka, 6, 8
{output.html}, 6, 9
songbird, 6, 8
tRNAscan-SE, 6, 8
extract_fasta_bins.py, 6, 8
TMP_DIR={resources.tmpdir}, 6, 8
Attribute, 6, 8
{DATETIME}, 6, 9
{log.time}, 6, 9
cellranger, 6, 8
//g, 6, 8
reads={params.reads}, 6, 8
gtf2bed, 6, 8
$0, 6, 8
{input.seq}, 6, 9
fasttree, 6, 8
{output.fq2}, 6, 9
spumoni, 6, 8
art_illumina, 6, 8
htseq-count, 6, 8
{output:q}, 6, 9
quast, 6, 8
parallel_cmd=$[[, 6, 8
{GIT_ROOT}/bxtools/bin/bxtools, 6, 9
function, 6, 8
vep, 6, 8
{input.transcriptome}, 6, 9
mash, 6, 8
40.0, 6, 8
=NF;i++if$i, 6, 8
mm=$i;print, 6, 8
bioconda-utils, 6, 8
recipes, 6, 8
../{output}, 6, 8
CAT=cat;, 6, 8
{params.extend_reads}, 6, 9
{params.sam_keep}, 6, 9
../../{output.vcf}, 6, 8
pangolin, 6, 8
input_spec=-fastq, 6, 8
DAS_Tool, 6, 8
contacts, 6, 8
{output.parsed_gtf}, 6, 9
ionice, 6, 8
{params.nnunet_env_cmd}, 6, 9
{wildcards.mesh}, 6, 9
organism=$get_organism_from_condensed_sdrf, 6, 8
gff_file=$, 6, 8
check_tsv_data_file_not_empty_of_data, 6, 8
nextclade, 6, 8
octopus, 6, 8
{input.sqlite}, 6, 9
fslmaths, 6, 8
sudo, 6, 8
$readlink, 6, 8
{output.fq_gz}, 6, 9
{output.fastq_gz}, 6, 9
{params.trimmomatic_params}, 6, 9
{input.fq_gz}, 6, 9
{log.other}, 6, 9
{log.graph}, 6, 9
{config[STRELKA_DIR]}bin/configureStrelkaGermlineWorkflow.py, 6, 9
{params.out_dir}{params.sample}/strelka/runWorkflow.py, 6, 9
{config[ANNOTSV_DIR]}bin/AnnotSV, 6, 9
fio, 6, 8
matlab, 6, 8
addpathgenpath{params.matlabPyrTools_path};, 6, 8
freeman_windows{wildcards.scaling},, 6, 8
{input.oxford}, 6, 9
dname=$dirname, 6, 8
https://raw.githubusercontent.com/yukiteruono/pbsim2/master/data/P6C4.model, 6, 8
f{{wildcards.model}}, 6, 8
smorfer.sh, 6, 8
{input.main_data_dir}, 6, 9
6_viewBS/inputfiles.txt, 6, 8
{output.sqlitedb}, 6, 9
{params.counts}, 6, 9
threads={threads}, 5, 8
HEADER=$gunzip, 5, 8
{output.bg}, 5, 9
{output.taxlist}, 5, 9
{output.gff}, 5, 9
bowtie-build, 5, 8
{output.out}, 5, 9
{params.param}, 5, 9
clustalo, 5, 8
fgbio, 5, 8
cuteSV, 5, 8
{output.tbl}, 5, 9
pbmm2, 5, 8
{params.custom}, 5, 9
gtfToGenePred, 5, 8
genePredToBed, 5, 8
{input.sites_with_pas}, 5, 9
{output.sites_filtered}, 5, 9
prefetch, 5, 8
sample=$echo, 5, 8
{params.workDir}/glnexus_cli, 5, 9
{output.gz};, 5, 9
{params.extra_args}, 5, 9
{params.ref}, 5, 9
mutyper, 5, 8
{input.bcf}, 5, 9
run_MaxBin.pl, 5, 8
model=-B, 5, 8
model=-A, 5, 8
{params.indir}/$g.fa, 5, 9
{params.input_string}, 5, 9
{log.out:q}, 5, 9
{log.err:q}, 5, 9
20, 5, 8
len=${{#sample[@]}}, 5, 8
mysql, 5, 8
blastp, 5, 8
mcl, 5, 8
{output.VCF}, 5, 9
=NF;X++{{OUT=OUT, 5, 8
Scripts/init_sample_dmx_SE.sh, 5, 8
{config[Rscript][command]}, 5, 9
{config[biom][command]}, 5, 9
swarm, 5, 8
phyloFlash.pl, 5, 8
{output.fasta};, 5, 9
plot-vcfstats, 5, 8
in={input}, 5, 8
tail_start=1, 5, 8
{output.assn_fn}, 5, 9
tail_start=2, 5, 8
DIRNAME=$mktemp, 5, 8
WC1=$zcat, 5, 8
WC2=$zcat, 5, 8
ulimit, 5, 8
REMOVE_DUPLICATES=true, 5, 8
{workflow.basedir}/scripts/getGeneDescriptionFromGFF.py, 5, 9
prefix={params.output_dir}, 5, 8
quast.py, 5, 8
/data/bin/cellranger-atac, 5, 8
{params.picardloc}, 5, 9
snippy, 5, 8
3.0, 5, 8
60.0, 5, 8
200.0, 5, 8
bamtools, 5, 8
{output.wchr}, 5, 9
refgenie, 5, 8
v1.10.0/bio/cooltools/genome/gc, 5, 8
ivar, 5, 8
RNAfold, 5, 8
alignments, 5, 8
data/tmp, 5, 8
NR, 5, 8
sampleID=$echo, 5, 8
samp=$echo, 5, 8
models, 5, 8
2]//, 5, 8
sbatch, 5, 8
kreport2mpa.py, 5, 8
geneNameFile=$, 5, 8
amm, 5, 8
$decoratedFile.swp, 5, 8
decoratedFileLength=$wc, 5, 8
decorate_if_exists, 5, 8
{PROBer}, 5, 9
{log.sort}, 5, 9
{log.call}, 5, 9
hmmsearch, 5, 8
rtg, 5, 8
blank.+, 5, 8
{input.data}, 5, 9
{output.pmf}, 5, 9
\tgatk, 5, 8
TransDecoder.Predict, 5, 8
{input.pandora_exec}, 5, 9
iter={config[interval.iter]}, 5, 8
samp={config[interval.samp]}, 5, 8
bpen={config[bpen]}, 5, 8
popd, 5, 8
{params.samtools}, 5, 9
{wildcards.sample}, 5, 9
VALIDATION_STRINGENCY=LENIENT, 5, 8
julia, 5, 8
{output.lut}, 5, 9
Fasta_to_Scaffolds2Bin.sh, 5, 8
annotation={params[0]}, 5, 8
annotation={params[2]}, 5, 8
{params.logging}, 5, 9
coverage2cytosine, 5, 8
deeparg, 5, 8
{wildcards.dataset}, 5, 9
f{{wildcards.dataset}}, 5, 8
add_to_queries, 5, 8
VALIDATION_STRINGENCY=SILENT, 5, 8
$1, 4, 8
whatshap, 4, 8
LC_CTYPE=C, 4, 8
$dirname, 4, 8
mergeBed, 4, 8
chrsSelected=, 4, 8
chrsSelected=--chrs_selected={params.chrs_selected}, 4, 8
$chrsSelected, 4, 8
mapDamage, 4, 8
METRICS_FILE={output.metrics}, 4, 8
OUTPUT={output.metrics}, 4, 8
R={params.genome}, 4, 8
parsort, 4, 8
{log.bwa}, 4, 9
{log.samtools}, 4, 9
temp.gtf;, 4, 8
{output.r1}, 4, 9
repair.sh, 4, 8
{params.checkm2}, 4, 9
{input.fwd}, 4, 9
${{TMPDIR}}/merged.bed, 4, 8
taxmapper, 4, 8
{log.py}, 4, 9
check_directory, 4, 8
{params.genome_index_manifest}, 4, 9
findMotifsGenome.pl, 4, 8
{output.version}, 4, 9
n=$basename, 4, 8
fastANI, 4, 8
single=, 4, 8
metaspades.py, 4, 8
$f, 4, 8
{params.file_list}, 4, 9
geneBody_coverage.py, 4, 8
mem_per_job=$expr, 4, 8
bbsplit.sh, 4, 8
../workflow/scripts/rm_orphan_pe_bam.py, 4, 8
INTERLEAVE=true, 4, 8
SO=coordinate, 4, 8
run_gubbins.py, 4, 8
!DOCTYPE, 4, 8
{params.trimmer}, 4, 9
{{print, 4, 9
hisat2_extract_exons.py, 4, 8
{input.fastq1}, 4, 9
{output.fastq1}, 4, 9
{output.fastq2}, 4, 9
temp.html;, 4, 8
geneid={params.geneid}, 4, 8
annotation={input.annotation}, 4, 8
bam={input.bam}, 4, 8
countmatrices={output.countmatrices}, 4, 8
len=${{#bam[@]}}, 4, 8
delly, 4, 8
continue, 4, 8
nseq=$wc, 4, 8
{output.raw}, 4, 9
{output.length_trim}, 4, 9
megalodon, 4, 8
lra, 4, 8
{params.active_signatures}, 4, 9
//, 4, 8
0{{print, 4, 8
{config[qiime][path]}make_phylogeny.py, 4, 9
{config[wkhtmltopdf_command]}, 4, 9
dump, 4, 8
pbsim, 4, 8
{output[0]}.raw, 4, 9
across_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/{wildcards.op}/dataset_{wildcards.num}_pivot_{wildcards.op}_group, 4, 8
{params.fastqc}, 4, 9
{params.trimming}, 4, 9
VcfFilter, 4, 8
VcfSort, 4, 8
{params.multiqc}, 4, 9
{params.multiqc_in}, 4, 9
cd-hit, 4, 8
scripts/summarize-table.py, 4, 8
pbcromwell, 4, 8
{params.gvcfs}, 4, 9
{params.recal}, 4, 9
\tsmc++, 4, 8
{params.input_dir}, 4, 9
cargo, 4, 8
./{input.bin}, 4, 8
numactl, 4, 8
{input.reference}, 4, 9
vt, 4, 8
temp=$mktemp, 4, 8
{input.unpaired_fq1}, 4, 9
psql, 4, 8
input_accessions={input.accessions}, 4, 8
{get_missing_accessions}, 4, 9
{log.bqsr}, 4, 9
{output.fragments};, 4, 9
multiBigwigSummary, 4, 8
sys.path[0], 4, 8
MarkDuplicates, 4, 8
{output.nchr}, 4, 9
FastTree, 4, 8
{output.corpus}, 4, 9
{params.out_prefix}, 4, 9
callpeak, 4, 8
^:,, 4, 8
results/SIMresults/aggregatepsd.txt, 4, 8
stdbuf, 4, 8
{params.ilastik_loc}, 4, 9
{input.image}, 4, 9
fcoolpup.py, 4, 8
init_template, 4, 8
reg_to_template, 4, 8
update_template, 4, 8
src/aggregate_previous_sctensor.sh, 4, 8
src/aggregate_sctensor.sh, 4, 8
src/plot_auc.sh, 4, 8
src/plot_aucpr.sh, 4, 8
src/plot_f.sh, 4, 8
src/plot_mcc.sh, 4, 8
src/plot_fpr.sh, 4, 8
src/plot_fnr.sh, 4, 8
src/plot_pr.sh, 4, 8
src/plot_time.sh, 4, 8
src/plot_memory.sh, 4, 8
src/plot_LR.sh, 4, 8
{params.cells_option}, 4, 9
$1\, 4, 8
pdflatex, 4, 8
true;, 4, 8
{output.depth}, 4, 9
{input.binary}, 4, 9
exogap=$pwd, 4, 8
rename, 4, 8
summarise_alg_shelltetrad_rfci, 4, 8
summarise_alg_shellbidag_order_mcmc, 4, 8
TPMCalculator, 4, 8
cleanr, 4, 8
{output.bam_stat}, 4, 9
IFS=$\, 4, 8
{output.ambig_pos_dep}, 4, 9
freyja, 4, 8
{params.use_slurm}, 4, 9
msisensor-pro, 4, 8
OUTFMT=$OUTFMT, 4, 8
{params.exe}, 4, 9
{output.concatenated_out}, 4, 9
0.05, 4, 8
SiriusAdapter, 4, 8
{log.mpileup}, 4, 9
tdir=$mktemp, 4, 8
{output[4]}, 4, 9
fastq_to_fasta, 4, 8
{log.bowtie}, 4, 9
{input.bams}, 4, 9
SVL12K_DF, 4, 8
{params.discrim_preds}, 4, 9
list.seqslist={input.list}, 4, 8
Minimum, 4, 8
{input:q}, 4, 9
0.5, 4, 8
SORT_ORDER=queryname, 4, 8
{input.hmm}, 4, 9
EMBL_dat_to_Trinotate_sqlite_resourceDB.pl, 4, 8
{output.hmm}, 4, 9
{log.f1}, 4, 9
\tmkdir, 4, 8
salmon_results=os.path.joinRESULTS_FOLDER,, 4, 8
out_folder, 4, 8
./src/454/bin/sffinfo, 4, 8
xvf, 4, 8
{params.tarball}, 4, 9
`#-B, 4, 8
`#-j, 4, 8
`#-z, 4, 8
`#-E, 4, 8
`#-c, 4, 8
out/FinalOutput/out.clean, 4, 8
{output.bed_gz}, 4, 9
{output.bam_cov}, 4, 9
vase, 4, 8
{params.out_dir}/{wildcards.sample}.fasta, 4, 9
HRIBO/scripts/generate_excel_overview.py, 4, 8
Genrich, 4, 8
fastq-sort, 4, 8
twoBitToFa, 4, 8
lofreq, 4, 8
ExpansionHunter, 4, 8
{params.samblaster}, 4, 9
variantcalling={params[0]}, 4, 8
debug={params[2]}, 4, 8
annotation={params[1]}, 4, 8
SV={params[0]}, 4, 8
MEI={params[1]}, 4, 8
{mixcr}, 4, 9
{output.usage_txt}, 4, 9
../{log}, 4, 8
{output.header}, 4, 9
{output.outFile}, 4, 9
{assemble1}, 4, 9
{export}, 4, 9
{output.stat}, 4, 9
flair.py, 4, 8
{log}.format, 4, 9
script, 4, 8
./{input.rbt_bin}, 4, 8
{input.read1}, 4, 9
{input.kreport}, 4, 9
taxon_nametreads, 4, 8
{input.txt}, 4, 9
scripts/area_plot.py, 4, 8
scripts/KrakenTools/kreport2krona.py, 4, 8
est_abundance.py, 4, 8
{input.bracken}, 4, 9
{config[r]}, 4, 9
rsem-calculate-expression, 4, 8
$import_versions, 4, 8
genome=$echo, 4, 8
{gatkDir}/gatk, 4, 9
{params.scripts_dir}/Make_labels.sh, 4, 9
{params.min_aln_len}, 4, 9
{output.liftover_tbl}, 4, 9
{wildcards.ref}.fasta, 4, 9
{output.single_temp}, 4, 9
ann_solo, 4, 8
{params.tmp}/{config[library]}, 4, 9
fpython, 4, 8
{output.strand_counts}, 4, 9
macs3, 3, 8
NUM_COL=$gunzip, 3, 8
HEADER=${{HEADER}}t{params.annotation_names}, 3, 8
masking=-taxidlist, 3, 8
masking=, 3, 8
{input.chain}, 3, 9
trf, 3, 8
{output.dat}, 3, 9
{params.arguments}, 3, 9
GetSampleName, 3, 8
{output.indel}, 3, 9
{output.vcf_fil};, 3, 9
quicKmer2, 3, 8
AdapterRemoval, 3, 8
list_lb_stats=$echo, 3, 8
bam={output.bam}, 3, 8
run_clair3.sh, 3, 8
{params.MAP_PARAMS}, 3, 9
{params.known_sites}, 3, 9
O={output.out}, 3, 8
alfred, 3, 8
ashleys, 3, 8
fastx_renamer, 3, 8
{output.sample_fa}, 3, 9
{output.valid_reads}, 3, 9
{output.seqs}, 3, 9
{output.sorted_bed}, 3, 9
{input.chr_sizes}, 3, 9
{output.cmseq};done, 3, 9
{input.cram}, 3, 9
{params.chromosome}, 3, 9
{params.tailor_command}, 3, 9
${{TMPDIR}}/sorted.bed, 3, 8
${{TMPDIR}}/minus.bed, 3, 8
${{TMPDIR}}/plus.bed, 3, 8
${{TMPDIR}}/overlaps.bed, 3, 8
${{TMPDIR}}/subtracted.bed, 3, 8
{params.min_region_size}, 3, 9
{params.R1}, 3, 9
{params.R2}, 3, 9
{params.R1_ids}, 3, 9
{params.R2_ids}, 3, 9
base=$basename, 3, 8
$TMPDIR/fasta/db.fasta, 3, 8
bbmap.sh, 3, 8
configureStrelkaGermlineWorkflow.py, 3, 8
flash, 3, 8
plotCoverage, 3, 8
crypt4gh, 3, 8
pizzly, 3, 8
{output.chrom_sizes}, 3, 9
{output.spectra}, 3, 9
concoct_coverage_table.py, 3, 8
cut_up_fasta.py, 3, 8
merge_cutup_clustering.py, 3, 8
cov_lines=$wc, 3, 8
barrnap, 3, 8
al=$samtools, 3, 8
flagstat, 3, 8
{params.header}, 3, 9
{log.build}, 3, 9
centrifuge, 3, 8
{input.f}, 3, 9
sortmerna, 3, 8
{log.R1log}, 3, 9
clumpify.sh, 3, 8
varscan, 3, 8
fastq_screen, 3, 8
download-db.sh, 3, 8
]/, 3, 8
{params.root:q}/{log.out:q}, 3, 9
amrfinder, 3, 8
?xml, 3, 8
Query, 3, 8
Dataset, 3, 8
Filter, 3, 8
/Dataset, 3, 8
/Query, 3, 8
PairSeq.py, 3, 8
ParseHeaders.py, 3, 8
palin_mode=$grep, 3, 8
velocyto, 3, 8
working, 3, 8
estimate_degree, 3, 8
estimate_degree_vs_true, 3, 8
hisat2_extract_splice_sites.py, 3, 8
{params.hashedfeatureids}, 3, 9
{params.classifyparams};, 3, 9
sample_trimmed={input.sample_trimmed}, 3, 8
len=${{#sample_trimmed[@]}}, 3, 8
flag=0, 3, 8
sample={input.sample}, 3, 8
sample_trimmed={output.sample_trimmed}, 3, 8
sample_untrimmed={output.sample_untrimmed}, 3, 8
alevin-fry, 3, 8
CTG_PREFIX=$basename, 3, 8
biotype_1020, 3, 8
display_label_1074, 3, 8
{output.blast}, 3, 9
{output.sequences}, 3, 9
comm, 3, 8
ntaxids=$cut, 3, 8
dereps=$grep, 3, 8
highN=$, 3, 8
{input.unfiltered}, 3, 9
{params.conda_bin}/python, 3, 9
{output.file}, 3, 9
lastdb, 3, 8
lastal, 3, 8
MODE={params.mode}, 3, 8
TAXON_LEVELS=2, 3, 8
{params.out_dir}/tmp.tsv, 3, 9
picrust2_pipeline.py, 3, 8
=d,?=d//g, 3, 8
ver=$python, 3, 8
path1=$echo, 3, 8
{config[HMMALIGN]}, 3, 9
FQ1=`echo, 3, 8
{config[fastQC][command]}, 3, 9
{config[qiime][path]}extract_barcodes.py, 3, 9
{config[ext_bc][bc_length]}, 3, 9
Unassigned, 3, 8
{config[qiime][path]}filter_fasta.py, 3, 9
/p;2~4p, 3, 8
1{{print, 3, 8
{config[qiime][path]}summarize_taxa.py, 3, 9
{config[biom][headerKey]}, 3, 9
intersection_results_type_4/k_{wildcards.k}/pivot_{wildcards.pivot_num}/pivot_{wildcards.pivot_num}_intersect_dataset_{wildcards.num}, 3, 8
revcomp_/, 3, 8
ri-buildfasta, 3, 8
ri-align, 3, 8
{base_dir}/{output}, 3, 9
$file, 3, 8
exp6_intersection_results/k_{wildcards.k}/{wildcards.read_type}/pivot_{wildcards.pivot_num}/pivot_{wildcards.pivot_num}_intersect_dataset_{wildcards.num}, 3, 8
temp.txt, 3, 8
1{{print}}, 3, 8
vcffilter, 3, 8
HLA-LA.pl, 3, 8
microphaser, 3, 8
qchist={output}, 3, 8
{output.merge}, 3, 9
{output.final}, 3, 9
outf=assembly/{wildcards.sample}_wtdbg, 3, 8
{params.splitter}, 3, 9
{PRUNE_THRESHOLD}, 3, 9
base64, 3, 8
slang=$egrep, 3, 8
header=$head, 3, 8
{output.tmx}, 3, 9
mix_files=, 3, 8
nolines=$cat, 3, 8
mix_files=-m, 3, 8
{BIROAMER_OMIT}, 3, 9
{output.vcb1}, 3, 9
{output.vcb2}, 3, 9
nextflow, 3, 8
{input.smc_out}, 3, 9
{params.github_opt}, 3, 9
maxThreads={threads}, 3, 8
useGrid=false, 3, 8
{SAMTOOLS}, 3, 9
a=$basename, 3, 8
./, 3, 8
{wildcards.region}/, 3, 9
shell:\t, 3, 8
{PYSCENIC_PATH}, 3, 9
O={output.metrics}, 3, 8
~/bin/SEACR/SEACR_1.3.sh, 3, 8
{output.overlap}, 3, 9
{output.all_bcd}, 3, 9
NanoFilt, 3, 8
{params.keep_singleton}, 3, 9
HaplotypeCaller, 3, 8
%$//g, 3, 8
{output.mingg}, 3, 9
{output.maxgg}, 3, 9
$4, 3, 8
maxVal, 3, 8
{output.o1}, 3, 9
GTDBTK_DATA_PATH={GTDBTK_DATA_PATH}, 3, 8
{params.samtools_path}, 3, 9
M={log}, 3, 8
{params.methyldackel_path}, 3, 9
{params.genome}, 3, 9
tantan, 3, 8
{output.idxstat}, 3, 9
plotPCA, 3, 8
{input.genome_fa}, 3, 9
tracy, 3, 8
{output.png}, 3, 9
blastx, 3, 8
vcf-annotate, 3, 8
src/plot_auc_eachcci.sh, 3, 8
src/plot_auc_merge.sh, 3, 8
src/plot_aucpr_eachcci.sh, 3, 8
src/plot_aucpr_merge.sh, 3, 8
src/plot_f_eachcci.sh, 3, 8
src/plot_f_merge.sh, 3, 8
src/plot_mcc_eachcci.sh, 3, 8
src/plot_mcc_merge.sh, 3, 8
src/plot_fpr_eachcci.sh, 3, 8
src/plot_fpr_merge.sh, 3, 8
src/plot_fnr_eachcci.sh, 3, 8
src/plot_fnr_merge.sh, 3, 8
src/plot_pr_eachcci.sh, 3, 8
src/plot_pr_merge.sh, 3, 8
src/plot_time_merge.sh, 3, 8
src/plot_memory_merge.sh, 3, 8
./seg_len_analyzer, 3, 8
hisat2_index, 3, 8
cd-hit-est, 3, 8
blat, 3, 8
{log.log1}, 3, 9
src/scripts/Fasta_to_Scaffolds2Bin.sh, 3, 8
{output.summary}, 3, 9
bracken, 3, 8
{output.alignment}, 3, 9
{params.acc}, 3, 9
more, 3, 8
{output.protein_set_with_redundance}, 3, 9
input=$realpath, 3, 8
$vcf_text, 3, 8
alg_shellparallelDG, 3, 8
summarise_alg_shellcausaldag_gsp, 3, 8
summarise_alg_shellgcastle_notears, 3, 8
summarise_alg_shellgcastle_pc, 3, 8
summarise_alg_shellgcastle_anm, 3, 8
summarise_alg_shellgcastle_direct_lingam, 3, 8
summarise_alg_shellgcastle_ica_lingam, 3, 8
summarise_alg_shellgcastle_notears_nonlinear, 3, 8
summarise_alg_shellgcastle_notears_low_rank, 3, 8
summarise_alg_shellgcastle_golem, 3, 8
summarise_alg_shellgcastle_grandag, 3, 8
summarise_alg_shellgcastle_mcsl, 3, 8
summarise_alg_shellgcastle_gae, 3, 8
summarise_alg_shellgcastle_rl, 3, 8
summarise_alg_shellgcastle_corl, 3, 8
summarise_alg_shellsklearn_glasso, 3, 8
summarise_alg_shellnotears, 3, 8
summarise_alg_shellbnlearn_hc, 3, 8
summarise_alg_shellbnlearn_interiamb, 3, 8
summarise_alg_shellbnlearn_gs, 3, 8
summarise_alg_shellbnlearn_pcstable, 3, 8
summarise_alg_shellbnlearn_iamb, 3, 8
summarise_alg_shellbnlearn_fastiamb, 3, 8
summarise_alg_shellbnlearn_iambfdr, 3, 8
summarise_alg_shellbnlearn_mmpc, 3, 8
summarise_alg_shellbnlearn_sihitonpc, 3, 8
summarise_alg_shellbnlearn_hpc, 3, 8
summarise_alg_shellbnlearn_h2pc, 3, 8
summarise_alg_shellrblip_asobs, 3, 8
summarise_alg_shellbidag_itsearch, 3, 8
summarise_alg_shellpcalg_pc, 3, 8
summarise_alg_shelldualpc, 3, 8
summarise_alg_shellgobnilp, 3, 8
summarise_alg_shelltetrad_fges, 3, 8
summarise_alg_shelltetrad_fci, 3, 8
summarise_alg_shelltetrad_gfci, 3, 8
summarise_alg_shellgg99_singlepair, 3, 8
summarise_alg_shelltetrad_fofc, 3, 8
summarise_alg_shelltetrad_fas, 3, 8
summarise_alg_shelltetrad_fask, 3, 8
summarise_alg_shelltetrad_pc-all, 3, 8
summarise_alg_shelltetrad_lingam, 3, 8
summarise_alg_shelltetrad_imgscont, 3, 8
t_coffee, 3, 8
idvar=$echo, 3, 8
grid, 3, 8
$echo, 3, 8
clean, 3, 8
{output.index}, 3, 9
OUTFMT=6, 3, 8
PREFIX=`echo, 3, 8
{input.blst}, 3, 9
AverageImages, 3, 8
combine_mpa.py, 3, 8
humann_join_tables, 3, 8
humann_renorm_table, 3, 8
humann_split_stratified_table, 3, 8
humann_rename_table, 3, 8
.05, 3, 8
{wildcards.maf}, 3, 9
CENT=0, 3, 8
CENT=$grep, 3, 8
{input.classes}, 3, 9
{output.viterbi}, 3, 9
{output.snp_locations}, 3, 9
{output.pos_map}, 3, 9
{ADMIXTURE}, 3, 9
cmake, 3, 8
{mpi_command}, 3, 9
../bcmap, 3, 8
prot_exp_type=experimentType=proteomics_baseline, 3, 8
organism=$perl, 3, 8
DIR=$line, 3, 8
organism_check=$echo, 3, 8
organism=$organism_check, 3, 8
analyticsFile={wildcards.accession}-analytics.tsv, 3, 8
expType={params.exp_type}, 3, 8
PATH=$PATH:{workflow.basedir}/atlas-analysis/differential, 3, 8
mktemp_dir, 3, 8
idf_filename=$perl, 3, 8
{script_path}/genome_to_transcript_set, 3, 9
{log.unmapped}, 3, 9
{log.mapped}, 3, 9
{output.temp_dir}/{wildcards.sample}.R1.trimmed.filtered.fastq.gz, 3, 9
{output.temp_dir}/{wildcards.sample}.R2.trimmed.filtered.fastq.gz, 3, 9
configureStrelkaSomaticWorkflow.py, 3, 8
{params.all_records}, 3, 9
{output.mia}, 3, 9
pilon, 3, 8
comparem, 3, 8
nreads=$samtools, 3, 8
rate=$echo, 3, 8
{params.genbank_accession}, 3, 9
ngmlr, 3, 8
../workflow/scripts/gtf2bed, 3, 8
LOAD_swissprot_blastp, 3, 8
LOAD_pfam, 3, 8
{input.pfam}, 3, 9
LOAD_swissprot_blastx, 3, 8
TransDecoder.LongOrfs, 3, 8
ILLUMINACLIP:{config[trimmomatic][ILLUMINACLIP]}, 3, 8
LEADING:{config[trimmomatic][LEADING]}, 3, 8
TRAILING:{config[trimmomatic][TRAILING]}, 3, 8
basta, 3, 8
{input.prg}, 3, 9
scripts_dir+/prc.py, 3, 8
$F[$r];}}, 3, 8
{wdir}/structure/faststructure.{K}.meanQ, 3, 9
eff_size=$awk, 3, 8
nbatch=$ls, 3, 8
bpen{bpen}.res_noheader.txt, 3, 8
grass, 3, 8
{params.sambamba}, 3, 9
{output.dates};, 3, 9
gatk-framework, 3, 8
{output.ref_parent}, 3, 9
{output.src_parent}, 3, 9
{output.tree:q}, 3, 9
ALIGNER={params.aligner}, 3, 8
{REF}, 3, 9
{output.coverage_table}, 3, 9
{output.host}, 3, 9
metaquast.py, 3, 8
{output.scaffolds2bin}, 3, 9
../../../{log.std}, 3, 8
configManta.py, 3, 8
{input.scrpt}, 3, 9
debug={params[1]}, 3, 8
format={params[0]}, 3, 8
paired={params[2]}, 3, 8
{output.variant_results_file_filtered}, 3, 9
{params.temp_bed}, 3, 9
{params.sorted_bed}, 3, 9
STR={params[0]}, 3, 8
genotype={params[1]}, 3, 8
sha256sum, 3, 8
{input.scaffolds_fasta}, 3, 9
CAT, 3, 8
{params.working_dir}, 3, 9
{params.plugin_args}, 3, 9
preprocessed_{wildcards.run}_{wildcards.task};, 3, 8
tools/rename_multifasta_prefix.py, 3, 8
{input.reads}, 3, 9
{output.cnt}, 3, 9
{output.rpkm}, 3, 9
segments=--segments, 3, 8
deduplicate_bismark, 3, 8
rnaspades.py, 3, 8
{log.norm}, 3, 9
=NF;i++, 3, 8
humann2_join_tables, 3, 8
{wildcards.model}, 3, 9
{wildcards.drug}, 3, 9
ribotricer, 3, 8
{output.idxstats}, 3, 9
hhblits, 3, 8
{params.bt2_preset}, 3, 9
scripts/phispy/PhiSpy.py, 3, 8
{input.liftover_tbl}, 3, 9
SORT_ORDER=coordinate, 3, 8
O={output.stats}, 3, 8
slamdunk, 3, 8
{params.tmp}/empty.mgf, 3, 9
{BISMARK_GENOME_PREPARATION}, 3, 9
{BISMARK_METHYLATION_EXTRACTOR}, 3, 9
/biodata/irg/grp_stich/Hv-DRR-pop/bin/bismark_v0.20.0/Bismark/bismark2summary, 3, 8
dbotu3.py, 3, 8
{params.dist}, 3, 9
clustercolumn={params.dist},, 3, 8
method=opti,, 3, 8
precision={params.precision}, 3, 8
chr_list=$samtools, 3, 8
alignmentSieve, 2, 8
/ORG-Data/scripts/deinterleave_fastq.sh, 2, 8
{input.il}, 2, 9
rqcfilter2.sh, 2, 8
in1={input.in1}, 2, 8
in2={input.in2}, 2, 8
path={output.file_path}, 2, 8
outribo={output.file_path_rna}, 2, 8
rna=t, 2, 8
maq=10, 2, 8
removehuman=t, 2, 8
khist=t, 2, 8
clumpify=t, 2, 8
{input.sam}, 2, 9
LAST_COL=$NUM_COL+4, 2, 8
HEADER=${{HEADER}}t{params.dist}, 2, 8
HAP, 2, 8
{input.otus}, 2, 9
cyrcular, 2, 8
graph, 2, 8
datavzrd, 2, 8
{output.annotation}, 2, 9
{output.annotation_bgzip}, 2, 9
plot, 2, 8
@{input}, 2, 8
{input.kmersGWAS_bin}/kmers_add_strand_information, 2, 9
s, 2, 8
{input.kmersGWAS_bin}/list_kmers_found_in_multiple_samples, 2, 9
segments={input.segments}, 2, 8
singlecellsegments={input.scsegments}, 2, 8
strand={input.strand}, 2, 8
complex={input.complex_calls}, 2, 8
groups={input.grouptrack}, 2, 8
calls={input.calls}, 2, 8
{input.counts}, 2, 9
{wildcards.chrom}, 2, 9
=10, 2, 8
{input.bin}, 2, 9
liftOver, 2, 8
{output.unmapped}, 2, 9
count, 2, 8
{output.extra}, 2, 9
windowmasker, 2, 8
STAR_lane1_map1_logfile.log, 2, 8
Mutect2, 2, 8
subseqfa, 2, 8
bamToBed, 2, 8
{params.samp}, 2, 9
fastq, 2, 8
fq, 2, 8
rustybam, 2, 8
cram, 2, 8
sam, 2, 8
mrsfast, 2, 8
{input.mask}, 2, 9
{output.zipped}, 2, 9
{params.GATK}, 2, 9
{output.R};, 2, 9
params=$echo, 2, 8
{output.mapped}, 2, 9
nth_line=1;, 2, 8
nth_line=$, 2, 8
{output.cuteSV_ref}, 2, 9
svim, 2, 8
{output.methyl}, 2, 9
{output.sorted_bam}, 2, 9
{input.split_ref}, 2, 9
{input.aln}, 2, 9
{input.fai}:{wildcards.W}, 2, 9
ccs, 2, 8
{params.barcodes}, 2, 9
bamstats04, 2, 8
PER_TARGET_COVERAGE={output.target}, 2, 8
HISTOGRAM_FILE={output.histogram}, 2, 8
CollectGcBiasMetrics, 2, 8
CHART={output.chart}, 2, 8
S={output.summary}, 2, 8
r-R, 2, 8
$6, 2, 8
D, 2, 8
$zcat, 2, 8
umi_1, 2, 8
5, 2, 8
chrMT, 2, 8
chr/, 2, 8
OUTPUT=$dirname, 2, 8
bismark2report, 2, 8
bismark2summary, 2, 8
filter_non_conversion, 2, 8
{output.genome}, 2, 9
{output.clean}, 2, 9
{output.nuc_trimmed}, 2, 9
{input.in_fa}, 2, 9
{input.no_3p_adapter}, 2, 9
{output.unique_bed}, 2, 9
{params.exclude_chr}, 2, 9
{input.unique_bed}, 2, 9
{output.end_sites}, 2, 9
{params.ds_patterns}, 2, 9
{input.seqs}, 2, 9
{output.ip_assigned}, 2, 9
{input.files}, 2, 9
{output.pooled_sites}, 2, 9
{input.table_filtered}, 2, 9
{output.primary_clusters}, 2, 9
{input.primary_clusters}, 2, 9
{output.merged_clusters}, 2, 9
{input.ucsc_bed}, 2, 9
{output.bigWig}, 2, 9
real=$realpath, 2, 8
scripts/rename_multifasta_prefix.py, 2, 8
{input.index}, 2, 9
{input.rev}, 2, 9
{params.tmp}, 2, 9
{log.bt2}, 2, 9
{params.temp_bam}, 2, 9
{params.tmpids}, 2, 9
{params.tmp_in}, 2, 9
gmst.pl, 2, 8
download_eggnog_data.py, 2, 8
$TMPDIR/fasta/taxonmap, 2, 8
transabyss, 2, 8
transabyss-merge, 2, 8
max_mem=${params.cpumem}, 2, 8
riana, 2, 8
{log.blst}, 2, 9
run_dbcan.py, 2, 8
{output.parsed}, 2, 9
/opt/deepvariant/bin/run_deepvariant, 2, 8
dv_make_examples.py, 2, 8
dv_call_variants.py, 2, 8
dv_postprocess_variants.py, 2, 8
scripts/prepend_labels.sh, 2, 8
{params.v};, 2, 9
{input.bedFile}.gz;, 2, 9
{params.runDir}/runWorkflow.py, 2, 9
{params.genome_index_dir}, 2, 9
{output.flagstats_out}, 2, 9
/usr/local/bin/HiC-Pro_3.1.0/bin/utils/sparseToDense.py, 2, 8
{input.matrix}, 2, 9
{output.homer_bed}, 2, 9
{output.ARS_fa}, 2, 9
{output.ref}, 2, 9
{output.bcf}, 2, 9
pfam_scan.pl, 2, 8
{params.faa}, 2, 9
k=bac, 2, 8
k=arc, 2, 8
{params.outdir}/out, 2, 9
{output.idmap}, 2, 9
single=-s, 2, 8
R1=$cat, 2, 8
R2=$cat, 2, 8
paired=-1, 2, 8
paired=, 2, 8
se=$cat, 2, 8
single=-r, 2, 8
{params.additional_settings}, 2, 9
kraken2-build, 2, 8
ktUpdateTaxonomy.sh, 2, 8
unmerge-paired-reads.sh, 2, 8
{params.trim_string}, 2, 9
{params.extra_params}, 2, 9
{params.R1_intmp}, 2, 9
{params.R2_intmp}, 2, 9
fastuniq, 2, 8
Saccharomyces_cerevisiae.R64-1-1.ncrna.fa, 2, 8
{params.bams}, 2, 9
{params.truth_sensitivity_tranches}, 2, 9
funannotate, 2, 8
F={output}, 2, 8
UNMAPPED={input.unmapped}, 2, 8
ALIGNED={input.mapped}, 2, 8
ALIGNER_PROPER_PAIR_FLAGS=true, 2, 8
MAX_GAPS=-1, 2, 8
ORIENTATIONS=FR, 2, 8
{output.seqs:q}, 2, 9
{log.log:q}, 2, 9
nextalign, 2, 8
bamCompare, 2, 8
bamPEFragmentSize, 2, 8
filename={wildcards.ss_file};, 2, 8
from_build=$echo, 2, 8
select=$[$wc, 2, 8
{input.in_ss}];, 2, 9
{wildcards.ss_file}/10percent.{wildcards.chromosome}.merged;, 2, 9
{params.repo_path}/harmoniser/cat_chroms.sh, 2, 9
convert, 2, 8
{config[vina][path]}, 2, 9
ibd2degree, 2, 8
beaglew, 2, 8
={wildcards.maf}, 2, 8
={params.maf_upper}, 2, 8
{input.fastq2}, 2, 9
temp;, 2, 8
{output.alnfasta};, 2, 9
data/genome.fa, 2, 8
{params.a_path}, 2, 9
input={input.ref}, 2, 8
output={params.index}, 2, 8
input=${{input%.*}}, 2, 8
index={params.index}, 2, 8
sam={params.sam}, 2, 8
${{bam[$flag]}}, 2, 8
flag=$${{flag}}+1, 2, 8
${{bam[$i]}}, 2, 8
{params.qual}, 2, 9
tiddit, 2, 8
genefuse, 2, 8
demuxlet, 2, 8
kmer_count_pairs, 2, 8
{output.output};, 2, 9
{output.unclassified}, 2, 9
{output.id_table}, 2, 9
{output.seqids}, 2, 9
blastdb_aliastool, 2, 8
{output.primer_hist}, 2, 9
{output.barcode_hist}, 2, 9
{output.size_hist}, 2, 9
{output.missing_no_deets}, 2, 9
{output.missing}, 2, 9
cctyper, 2, 8
medaka_consensus, 2, 8
{params.screener}, 2, 9
./bwa-0.7.17/bwa, 2, 8
faToTwoBit, 2, 8
$3, 2, 8
{output.regions}, 2, 9
log/{wildcards.sample}_minimap_hpv.err, 2, 8
log/{wildcards.sample}_minimap_sort_hpv.err, 2, 8
log/{wildcards.sample}_minimap_index_hpv.err, 2, 8
{bind}, 2, 9
{pepper}/pepper_deepvariant_r0.4.sif, 2, 9
run_pepper_margin_deepvariant, 2, 8
log/{wildcards.sample}_minimap.err, 2, 8
log/{wildcards.sample}_minimap_sort.err, 2, 8
log/{wildcards.sample}_minimap_index.err, 2, 8
{run}log/{wildcards.sample}_snpeff2.err, 2, 9
catfishq, 2, 8
log/{wildcards.sample}_depth_hpv.err, 2, 8
vcfsort, 2, 8
bgziptabix, 2, 8
log/{wildcards.sample}_qc_hpv.err, 2, 8
log/{wildcards.sample}_depth.err, 2, 8
log/{wildcards.sample}_qc.err, 2, 8
{run}log/{wildcards.sample}_snpeff.err, 2, 9
./make-lineage-csv.py, 2, 8
{output.taxonomy}, 2, 9
$2\, 2, 8
REMOVE_DUPLICATES=TRUE, 2, 8
H={output.histogram}, 2, 8
FQ2=`echo, 2, 8
{config[qiime][path]}validate_mapping_file.py, 2, 9
Unassigned_[0-9]*, 2, 8
Unass^, 2, 8
{{seq=seq+1;print, 2, 9
{wildcards.sample}_seq, 2, 9
=NF;, 2, 8
Scripts/stampa_merge.py, 2, 8
{config[qiime][path]}filter_otus_from_otu_table.py, 2, 9
accuracies_type_4/accuracy_values.csv, 2, 8
within_dataset_results_type3/{wildcards.read_type}/pivot_{wildcards.pivot_num}/k_{wildcards.k}/dataset_{wildcards.num}/intersect/dataset_{wildcards.num}_pivot_intersect_group, 2, 8
genome_sets_type3/pivot/{wildcards.read_type}/k_{wildcards.k}/dataset_{wildcards.pivot_num}/pivot_{wildcards.pivot_num}.transformed, 2, 8
within_databases_type_2/rest_of_set/k_{wildcards.k}/dataset_{wildcards.num}/dataset_{wildcards.num}.transformed.combined, 2, 8
within_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/{wildcards.op}/dataset_{wildcards.num}_pivot_{wildcards.op}_group, 2, 8
across_databases_type_2/k_{wildcards.k}/pivot_{wildcards.num}/all_datasets_pivot_{wildcards.num}.transformed.combined.transformed.combined, 2, 8
{output.blastx};, 2, 9
analyze_blastPlus_topHit_coverage.pl, 2, 8
time, 2, 8
qualimap_v2.2.1/qualimap, 2, 8
fold, 2, 8
{input.forward_reads}, 2, 9
xsv, 2, 8
{params.rseqc}, 2, 9
{params.star}, 2, 9
{params.kallisto}, 2, 9
dipdiff.py, 2, 8
pycoQC, 2, 8
{output}\t, 2, 9
wtpoa-cns, 2, 8
tombo, 2, 8
{output.bedgraph}, 2, 9
rmats.py, 2, 8
{input.rank1}, 2, 9
URL=$python3, 2, 8
e,, 2, 8
printurl, 2, 8
exite, 2, 8
$DIRNAME/my-crawler-beans.cxml, 2, 8
RUNTIME=0, 2, 8
RUNTIME=$RUNTIME+5, 2, 8
{params.tokeniser}, 2, 9
{params.folder}/{params.trg_emb_name}, 2, 9
docjoin, 2, 8
{params.training_corpus}, 2, 9
BERGSTROEM2020/{wildcards.population}/{wildcards.individual}_mt.sam, 2, 8
{run}log/{wildcards.sample}_cyto.err, 2, 9
cellranger-dna, 2, 8
{run}log/{wildcards.sample}_reanalysis.err, 2, 9
hifiasm, 2, 8
$2_hap1\, 2, 8
which, 2, 8
{SDIR}/scripts/phasing_by_lengths.py, 2, 9
{output.unmapped_bam}, 2, 9
{GIT_ROOT}/contig_length_filter.py, 2, 9
{GIT_ROOT}/bamtofastq, 2, 9
{LONGRANGER}, 2, 9
return, 2, 8
{QUAST}, 2, 9
{output.contigs}, 2, 9
{input.second}, 2, 9
{input.first}, 2, 9
{params.snpeff_jar}, 2, 9
{params.shapeit}, 2, 9
if$3, 2, 8
outdir=$dirname, 2, 8
coco, 2, 8
{input.bam_file}, 2, 9
{output.out_file}, 2, 9
{params.filter}, 2, 9
{params.ref_prefix}, 2, 9
bonito, 2, 8
log/{wildcards.sample}_basecall.err, 2, 8
{output.accessions}, 2, 9
{output.baseline_accessions}, 2, 9
gunc, 2, 8
{output[1]};, 2, 9
{input.prms_exe}, 2, 9
{log.dedup}, 2, 9
{output.gvcf}, 2, 9
{output.R1_OUT}, 2, 9
{output.R2_OUT}, 2, 9
plotFingerprint, 2, 8
{output.bed};, 2, 9
nanoQC, 2, 8
PYTHONPATH={INDIC_NLP}, 2, 8
filename=`basename, 2, 8
snippy-core, 2, 8
{input.snippy_pairwise_dir}, 2, 9
{output.log};, 2, 9
snp-sites, 2, 8
exitcode=$?;, 2, 8
GenomicsDBImport, 2, 8
GatherVcfsCloud, 2, 8
IndexFeatureFile, 2, 8
INPUT={input.ubam}, 2, 8
FASTQ=/dev/stdout, 2, 8
NON_PF=true, 2, 8
MergeBamAlignment, 2, 8
SortSam, 2, 8
SetNmMdAndUqTags, 2, 8
bamcov, 2, 8
input_name=$basename, 2, 8
https://api.anaconda.org/package/bioconda/{wildcards.package}, 2, 8
cairosvg, 2, 8
{params.vecalign_dir}, 2, 9
mix_files=$mktemp, 2, 8
$mix_files, 2, 8
nolines_txt=$$CAT, 2, 8
total_nolines=$echo, 2, 8
Check, 2, 8
{params.bwameth_path}, 2, 9
{params.fastqc_path}, 2, 9
{params.control_param}, 2, 9
{params.macs2_format}, 2, 9
bedops, 2, 8
{output.narrow}, 2, 9
%, 2, 8
{output.broad}, 2, 9
preseq, 2, 8
{params.paired}, 2, 9
nanoq, 2, 8
vulcan, 2, 8
faSize, 2, 8
transeq, 2, 8
scripts/tmhmm.sh, 2, 8
scripts/parallel_gmap.sh, 2, 8
TEMPDIR=$mktemp, 2, 8
results/SIMresults/aggregatedoseresponse.txt, 2, 8
aMGSIM, 2, 8
{log.select}, 2, 9
{config[Genrich_path]}, 2, 9
impute2, 2, 8
{output.imputed_fixed};, 2, 9
src/groundtruth.sh, 2, 8
src/plot_groundtruth.sh, 2, 8
src/previous_sctensor.sh, 2, 8
src/sctensor.sh, 2, 8
src/roc_auc_bin_f.sh, 2, 8
src/plot_roc_auc_f.sh, 2, 8
src/plot_prc_aucpr_mcc.sh, 2, 8
src/plot_tr.sh, 2, 8
ISEXCEL={params.isExcel}, 2, 8
1{{print$5,$2}}, 2, 8
${{OUTDIR}}/${{SAMPLE}}/${{SAMPLE}}_${{DIRECTION}}.fastq, 2, 8
:::, 2, 8
{params.py_script}, 2, 9
fname_marker={input.fname_marker}, 2, 8
fastq_fname=${{fname_marker%.marker}}.fastq, 2, 8
fastq_fname=${{fname_marker%.marker}}_1.fastq, 2, 8
read_len=$bioawk, 2, 8
len_cutoff=$echo, 2, 8
filecount=$ls, 2, 8
case, 2, 8
3, 2, 8
*, 2, 8
esac, 2, 8
prinseq-lite.pl, 2, 8
$input_spec, 2, 8
trimmedfilecount=$shopt, 2, 8
sample={params.samples}, 2, 8
${{aggrcsv}}, 2, 8
{params.postprocess_script_path}, 2, 9
./simulate_genome, 2, 8
{output.qc}, 2, 9
kraken2-inspect, 2, 8
{output.fusions}, 2, 9
{input.DAT_demon_configfile}, 2, 9
{output.DIR_simulations_outdir}/config.dat, 2, 9
{input.BIN_demon}, 2, 9
{output.DIR_simulations_outdir}, 2, 9
config.dat, 2, 8
scripts/read_count_bam.pl, 2, 8
gemma, 2, 8
bzip2, 2, 8
{wildcards.sample}_assembly.log, 2, 9
{output.merge1}, 2, 9
{output.merge2}, 2, 9
in1={input.fq1}, 2, 8
out1={output.fq1P}, 2, 8
ref=data/00adapters/truseq.fa.gz, 2, 8
{log.logs}, 2, 9
{input.i7}, 2, 9
{input.i8}, 2, 9
{input.i2}, 2, 9
{input.i3}, 2, 9
{input.i4}, 2, 9
{input.i5}, 2, 9
{input.i6}, 2, 9
longstitch, 2, 8
bbcountunique.sh, 2, 8
assign_genome_properties.pl, 2, 8
{bwa}, 2, 9
{samtools}, 2, 9
{bcftools}, 2, 9
ShortStack, 2, 8
{SHORTSTACK_PARAMS}, 2, 9
A=$cat, 2, 8
a=$cat, 2, 8
ITSx, 2, 8
{params.cli_opts}, 2, 9
{output.per_read}, 2, 9
{input.refgenome}, 2, 9
shell:#has, 2, 8
file_name=$echo, 2, 8
link=$CONDA_DEFAULT_ENV/bin/$file_name, 2, 8
{output.env}, 2, 9
fasta-splitter, 2, 8
CompEvo=$pwd, 2, 8
{input.decisions}, 2, 9
{input.words}, 2, 9
{params.filtered_sessions}, 2, 9
{input.profiles}, 2, 9
{params.STR_biotype_key}, 2, 9
{params.STR_biotype_values}, 2, 9
{input.BED_pas_atlas}, 2, 9
{output.TSV_tandem_pas}, 2, 9
{output.counts_intervals}, 2, 9
{params.temp}, 2, 9
{params.sample}, 2, 9
{params.melt_results_dir}/{params.temp_header}, 2, 9
metaphlan_hclust_heatmap.py, 2, 8
{output.final_parsed}, 2, 9
{output.gene_only}, 2, 9
summarise_alg_shellmylib_myalg, 2, 8
summarise_alg_shellparallelDG, 2, 8
summarise_alg_shellbnlearn_tabu, 2, 8
summarise_alg_shellbnlearn_rsmax2, 2, 8
summarise_alg_shellbnlearn_mmhc, 2, 8
summarise_alg_shellbidag_partition_mcmc, 2, 8
alg_shelltrilearn_pgibbs, 2, 8
summarise_alg_shelltrilearn_pgibbs, 2, 8
alg_shellgt13_multipair, 2, 8
summarise_alg_shellgt13_multipair, 2, 8
alg_shellgg99_singlepair, 2, 8
summarise_alg_shelltetrad_ftfc, 2, 8
srst2, 2, 8
ariba, 2, 8
kmerresistance, 2, 8
hmmbuild, 2, 8
$var.bin., 2, 8
concoct_bins.stats;, 2, 8
metabat_bins.stats;, 2, 8
maxbin_bins.stats;, 2, 8
refined_bins.stats;, 2, 8
concoct.checkm, 2, 8
metabat.checkm, 2, 8
maxbin.checkm, 2, 8
refined.checkm, 2, 8
reassembled_bins.stats;, 2, 8
reassembled.checkm, 2, 8
abundance.stats, 2, 8
_*.xml, 2, 8
samples.txt, 2, 8
update_database, 2, 8
metaWRAP, 2, 8
memote, 2, 8
config[paths][dependencies][medestrand_path], 2, 8
{output.consensus_with_ref}, 2, 9
{output.aligned_consensus}, 2, 9
{input.masked_consensus}, 2, 9
{params.ref_name}, 2, 9
{output.ambig_pos}, 2, 9
{input.ambig_nucs}, 2, 9
{output.ambig_pos_count}, 2, 9
{params.demixed_dir}, 2, 9
{input.amp_dep}, 2, 9
cas_data, 2, 8
{output.insert_paf}, 2, 9
{output.chopped_fasta}, 2, 9
{output.ava_paf}, 2, 9
spoa, 2, 8
plink2, 2, 8
{python_path}, 2, 9
svdb, 2, 8
read_analysis.py, 2, 8
simulator.py, 2, 8
{output.genes}, 2, 9
bin/singleCellPipe, 2, 8
{output.tab}, 2, 9
/{{print}}else{{chomp;print, 2, 8
{output.fna}, 2, 9
nnUNet_plan_and_preprocess, 2, 8
{params.rsync_to_tmp}, 2, 9
nnUNet_train, 2, 8
nnUNet_predict, 2, 8
fslmerge, 2, 8
antsRegistration, 2, 8
{params.deform_model}, 2, 9
UNKNOWN, 2, 8
{output.tbl_out}, 2, 9
bamToFastq, 2, 8
{output.combined_summarised_genes}, 2, 9
c3d, 2, 8
MetaboliteAdductDecharger, 2, 8
IDMapper, 2, 8
FeatureLinkerUnlabeledKD, 2, 8
FileConverter, 2, 8
HighResPrecursorMassCorrector, 2, 8
MERIDA_ILP, 2, 8
{params.ks}, 2, 9
analyticsFile=$grep, 2, 8
qcExitCode=$?, 2, 8
{workflow.basedir}/atlas-analysis/norm/quantile_normalize.sh, 2, 9
get_methods_from_irap, 2, 8
{output.methods}, 2, 9
decoratedFile={output.decoexpression}, 2, 8
{workflow.basedir}/atlas-analysis/differential/round_log2_fold_changes.R, 2, 9
decoratedFile=`echo, 2, 8
ae_dir=$perl, 2, 8
mirbase_dir=$perl, 2, 8
expPath=$pwd, 2, 8
organism={params.organism}, 2, 8
arrayDesignFile=$get_arraydesign_file, 2, 8
geneNameFile=${{expPath}}/mature.accession.tsv.aux, 2, 8
$geneNameFile, 2, 8
geneNameFile=$get_geneNameFile_given_organism, 2, 8
{script_path}/gff3_to_gtf, 2, 9
$tdir/gencode.v38.annotation.gtf, 2, 8
$tdir/genome.fa, 2, 8
telescope, 2, 8
log/{wildcards.sample}_polish.err, 2, 8
log/{wildcards.sample}_gunzip.err, 2, 8
log/{wildcards.sample}_gunzip2.err, 2, 8
log/{wildcards.sample}_cluter_report.err, 2, 8
log/{wildcards.sample}_sqanti.err, 2, 8
log/{wildcards.sample}_sort.err, 2, 8
log/sqanti.err, 2, 8
log/sort.err, 2, 8
./interproscan.sh, 2, 8
e, 2, 1
{output.qua_id}, 2, 9
{params.outdir}/note.txt, 2, 9
{output.family_hmm}, 2, 9
{log.wget};, 2, 9
{log.gunzip}, 2, 9
{input.sequences}, 2, 9
./bin/transform-string-fields, 2, 8
RTG_MEM={resources.mem_gb}g, 2, 8
vcfeval, 2, 8
{params.squash_ploidy}, 2, 9
{params.decompose}, 2, 9
sccaller, 2, 8
{params.min_qual}, 2, 9
{output.asv}, 2, 9
{params.mask}, 2, 9
{params.bam}, 2, 9
logs/rseqc/rseqc_junction_annotation, 2, 8
{output.filteredTranscriptAnno}, 2, 9
{output.body}, 2, 9
set.seedseed={wildcards.seed};, 2, 8
set.currentprocessors={resources.procs};, 2, 8
R_LIBS=;, 2, 8
sha{params.checksum_alg}sum, 2, 8
{params.genes_dir}, 2, 9
\t-O, 2, 8
\t-R, 2, 8
\t--output, 2, 8
{output.cropseq_ref_gtf}, 2, 9
{output.cropseq_ref_fasta}, 2, 9
ANNOTATIONS_FILE={input.annot}, 2, 8
TagBamWithReadSequenceExtended, 2, 8
SUMMARY={output.summary}, 2, 8
BASE_QUALITY={params.base_qual}, 2, 8
NUM_BASES_BELOW_QUALITY={params.bases_below_qual}, 2, 8
BASE_RANGE={params.base_range}, 2, 8
BARCODED_READ=1, 2, 8
OUTPUT_SUMMARY={output.summary}, 2, 8
MISMATCHES={params.mismatches}, 2, 8
NUM_BASES={params.num_bases}, 2, 8
data/{wildcards.sample}/logs, 2, 8
BAMTagHistogram, 2, 8
TAG=XC, 2, 8
READ_QUALITY={params.read_quality}, 2, 8
EukRep, 2, 8
{input.intersect}, 2, 9
{input.seg_cnvkit},, 2, 9
reference={params.reference_name},, 2, 8
seqz={params.seqz},, 2, 8
outputdir={params.hrd_dir}, 2, 8
{TRINOTATE}/chunks/assembly_, 2, 9
{TRINOTATE}/chunks/proteome_, 2, 9
{input.blastp}, 2, 9
{input.blastx}, 2, 9
{TRANSDECODER}/chunks/longest_orfs_, 2, 9
obo_to_tab.pl, 2, 8
print.pl, 2, 8
PFAM_dat_parser.pl, 2, 8
&2;, 2, 8
{params.shuffle}, 2, 9
{input.results}, 2, 9
{output.results}, 2, 9
hicFindTADs, 2, 8
results/{config[PROJECT]}/runs/{config[RUN]}/, 2, 8
+config_path+, 2, 8
{input.f1}, 2, 9
{output.o1};, 2, 9
{input.blast_results}, 2, 9
{output.basta_results}, 2, 9
gb, 2, 8
{input.make_prg_exec}, 2, 9
{params.technology_param}, 2, 9
{input.read_index}, 2, 9
RGID=1, 2, 8
RGLB=lib1, 2, 8
RGPL=illumina, 2, 8
RGPU=unit1, 2, 8
RGSM={wildcards.sample}, 2, 8
novoindex, 2, 8
{params.gq}, 2, 9
+scripts_dir+/jaspar2motif.py, 2, 8
t/;, 2, 8
{output.motifs}, 2, 9
brew, 2, 8
tmpdir=qc/fastqc/.{wildcards.sample_id}.tmp, 2, 8
{wdirpop}/structure/cluster.tmp, 2, 9
burn={config[ldhat.burn]}, 2, 8
coal_sizes=$echo, 2, 8
{input.qual}, 2, 9
guppy_basecaller, 2, 8
{output.temp_dir}/{wildcards.sample}.unsorted.bam, 2, 9
humann_databases, 2, 8
{params.db_loc}, 2, 9
mokapot, 2, 8
{input.pins}, 2, 9
{input.BAM}, 2, 9
run, 2, 8
header=$headert`head, 2, 8
{output.df};, 2, 9
line=$linet`tail, 2, 8
treetime, 2, 8
{params.outdir}/${{attr}}.log;, 2, 9
char=`echo, 2, 8
state=`echo, 2, 8
{params.outdir}/${{attr}}_states.csv, 2, 9
{scripts_dir}/download_sra.sh, 2, 9
{project_dir}, 2, 9
{results_dir}/data/sra/, 2, 9
{wildcards.sample_dir}, 2, 9
CHROM, 2, 8
{output.marker_file}, 2, 9
parent_src_vcf={params.parent_b_vcf}, 2, 8
parent_ref_vcf={params.parent_a_vcf}, 2, 8
INPUT={output.filtered_snps}, 2, 8
INPUT={output.filtered_indels}, 2, 8
OUTPUT={output.filtered_vcf}, 2, 8
shell:gatk, 2, 8
read_fast5_basecaller.py, 2, 8
GENOME.GTF, 2, 8
output/temp/cutadapt/logs/{params.pre}.cutadapt.log, 2, 8
{input.contigs}, 2, 9
{input}.temp, 2, 9
{output.summit}, 2, 9
{output.extend_summit}, 2, 9
scripts/rcbbc, 2, 8
=0.1, 2, 8
{output.mate1}, 2, 9
{output.mate2}, 2, 9
{output.mpileup}, 2, 9
{output.xls}, 2, 9
{output.xls}.temp, 2, 9
metaPlotR/annot_m6a.sorted.bed, 2, 8
workflow/scripts/fasta_to_nexus.py, 2, 8
{output}/$basename, 2, 9
{log.std};, 2, 9
{params.trimal_path}/trimal, 2, 9
{input.samples_gtf}, 2, 9
{input.merged_gtf}, 2, 9
{input.sample_cram}, 2, 9
{log.constraints}, 2, 9
{output.plus};, 2, 9
{output.minus}, 2, 9
{params.unaligned_reads}, 2, 9
{params.bwa_samblaster}, 2, 9
exome={params[1]}, 2, 8
bed={params[3]}, 2, 8
filter_string={params[4]}, 2, 8
debug={params[5]}, 2, 8
variantcalling={params[1]}, 2, 8
expansion={params[0]}, 2, 8
alsgenescanner={params[3]}, 2, 8
SV={params[2]}, 2, 8
{config[MANTA_DIR]}bin/configManta.py, 2, 9
{params.out_dir}{params.sample}/SV_manta/runWorkflow.py, 2, 9
{params.delly_SV}, 2, 9
{params.out_dir}{params.sample}/survivor_sample_files, 2, 9
{output.merged_SV}, 2, 9
alsgenescanner={params[0]}, 2, 8
{params.transposon_list}, 2, 9
{params.out_dir}/{params.sample}/melt/{params.sample}.header.txt, 2, 9
{params.out_dir}/{params.sample}/melt/{params.sample}.sva.vcf, 2, 9
{params.out_dir}/{params.sample}/melt/{params.sample}.line1.vcf, 2, 9
{params.out_dir}/{params.sample}/melt/{params.sample}.alu.vcf, 2, 9
{output.MEI_file}, 2, 9
{params.out_dir}{params.sample}/unaligned_reads.fastq, 2, 9
alignment_report={params.alignmentreport}, 2, 8
sequencing_report={params.sequencingreport}, 2, 8
calls_report={params.callsreport}, 2, 8
expansion={params[1]}, 2, 8
./gffread/gffread, 2, 8
transcripts.fasta, 2, 8
transcripts.gff3, 2, 8
gdaldem, 2, 8
py.test, 2, 8
/usr/bin/time, 2, 8
pid=$!, 2, 8
/dev/null;do, 2, 8
ps, 2, 8
vistasoft_path};, 2, 8
jsonInfo=jsondecodefileread{input.params_file};, 2, 8
BIDS_dir},, 2, 8
preprocessed_reoriented,, 2, 8
{wildcards.rel_mode_obliques}, 2, 9
{wildcards.rel_amplitude_obliques}, 2, 9
{wildcards.abs_mode_obliques}, 2, 9
{wildcards.abs_amplitude_obliques}, 2, 9
https://storage.googleapis.com/google-code-archive-downloads/v2/, 2, 8
code.google.com/phantompeakqualtools/ccQualityControl.v.1.1.tar.gz, 2, 8
{output.coverageuncompr}, 2, 9
{output.mergedBam}, 2, 9
{output.alignmentCalmd}, 2, 9
freebayes-parallel, 2, 8
fasta_generate_regions.py, 2, 8
{output.snpVCF}, 2, 9
virsorter, 2, 8
{params.usearch}, 2, 9
{params.demovir_dir}/trembl_ublast.viral.u.txt, 2, 9
{output.contig_ids}, 2, 9
tools/demovir.R, 2, 8
{java_align}, 2, 9
{assembleEx}, 2, 9
{assemble_f}, 2, 9
{input.runpy}, 2, 9
INPUT={input.vcf}, 2, 8
OUTPUT={output.vcf}, 2, 8
NEW_SAMPLE_NAME={params.sample}\, 2, 8
merge_kallisto.R, 2, 8
zpca-tpm, 2, 8
alfa, 2, 8
{output.dedup_bam}, 2, 9
CollectInsertSizeMetrics, 2, 8
H={output.hist}, 2, 8
{output.CNV_qsea}, 2, 9
{output.beta_qsea}, 2, 9
{output.nrpm_qsea}, 2, 9
{output.rms_medips}, 2, 9
{output.rms_medestrand}, 2, 9
{output.logitbeta_qsea}, 2, 9
{output.FASTA_MotEvo_input}, 2, 9
{output.representative_seqs}, 2, 9
talon_label_reads, 2, 8
pistis, 2, 8
OUTPUT_FILE=`readlink, 2, 8
PHENOTYPE_FILE_CSV=`readlink, 2, 8
PHENOTYPE_FILE_TSV=`echo, 2, 8
options, 2, 8
gtf=--gtf, 2, 8
output=--outfileName, 2, 8
zless, 2, 8
{output.alignment_stats}, 2, 9
strainphlan, 2, 8
scripts/KrakenTools/combine_kreports.py, 2, 8
{params.filter_bracken}, 2, 9
{params.include}, 2, 9
{params.exclude}, 2, 9
in1={input.read1}, 2, 8
in2={input.read2}, 2, 8
out={output}, 2, 8
reads_1.fastq, 2, 8
scripts/preprocessing_summary.py, 2, 8
{input.clinical_annotation}, 2, 9
reg_resample, 2, 8
{output.down}, 2, 9
{output.up}, 2, 9
{params.eagle_mk_env}, 2, 9
{output.o2}, 2, 9
{input.eagle_bin}, 2, 9
sumsamples.origin, 2, 8
RUN_TRIMMING, 2, 8
TRIM_5_ONLY, 2, 8
vep_fp=`which, 2, 8
vep_path=$dirname, 2, 8
vcf2maf.pl, 2, 8
{params.normalid}, 2, 9
{params.isoforms}, 2, 9
align_trim, 2, 8
{input.bamfile}, 2, 9
{output.dropped}, 2, 9
medaka, 2, 8
longshot, 2, 8
abyss-pe, 2, 8
]/s/[^ATGCatgc]/N/g, 2, 8
{output.renamed_assembly}, 2, 9
humann2_databases, 2, 8
mpa2_table-v2.7.7.txt, 2, 8
humann2_renorm_table, 2, 8
{params.group}, 2, 9
{params.phenotype}, 2, 9
{params.bfile}, 2, 9
{input.metal}, 2, 9
={params}, 2, 8
sponge, 2, 8
run_manqq.R, 2, 8
dudes, 2, 8
{params.additional_args}, 2, 9
^#, 2, 8
^20, 2, 8
^21, 2, 8
^22, 2, 8
gedi, 2, 8
RiboReport/scripts/concatGFF.py, 2, 8
sc=$, 2, 8
sp=$, 2, 8
add_to_dbs, 2, 8
align_fa, 2, 8
results/AMOEBAE_Data, 2, 8
results, 2, 8
{output.csv_out_path}, 2, 9
{input.fwd_srch_csv}, 2, 9
{output.out_dir}, 2, 9
find_redun_seqs, 2, 8
{input.nonredun_seq_csv}, 2, 9
csv_to_fasta, 2, 8
{params.metaplan2stamp}, 2, 9
{output.spf}, 2, 9
{params.path}, 2, 9
{output.bootstrap}, 2, 9
tckmap, 2, 8
{params.vox}, 2, 9
betainput={input.betainput}, 2, 8
pcoainput={input.pcoainput}, 2, 8
len=${{#pcoainput[@]}}, 2, 8
alphainput={input.alphainput}, 2, 8
len=${{#alphainput[@]}}, 2, 8
len=${{#column[@]}}, 2, 8
{output.forward_paired}, 2, 9
HEADCROP:{config[trimmomatic][HEADCROP]}, 2, 8
SLIDINGWINDOW:{config[trimmomatic][SLIDINGWINDOW]}, 2, 8
AVGQUAL:{config[trimmomatic][AVGQUAL]}, 2, 8
MINLEN:{config[trimmomatic][MINLEN]}, 2, 8
CROP:{config[trimmomatic][CROP]}, 2, 8
join_quality_cmd=fastqc, 2, 8
cut_expr=109-112,113-117,129,130,134, 2, 8
cut_expr=94-102,113,114,116, 2, 8
cols=${{, 2, 8
i=0, 2, 8
let, 2, 8
{output.fields}, 2, 9
prefix=, 2, 8
prefix=chr, 2, 8
write-chunk, 2, 8
input=$1, 2, 8
output=$TMPDIR/out.d/$basename, 2, 8
printf{wildcards.genome_build}t%st%dt%dt-1t%st%st[,, 2, 8
x, 2, 8
$i, 2, 8
printf,%s,, 2, 8
printf%s,, 2, 8
printf]\, 2, 8
https://storage.googleapis.com/gcp-public-data--gnomad/legacy/exacv1_downloads/release0.3.1/cnv/$basename, 2, 8
trap, 2, 8
out_dir=$dirname, 2, 8
import_versions=$out_dir/import_versions.tsv, 2, 8
db=$echo, 2, 8
version=$echo, 2, 8
abs=$readlink, 2, 8
$TMPDIR/import_versions, 2, 8
in_dir=$dirname, 2, 8
$for, 2, 8
inStrain, 2, 8
pbsv, 2, 8
{log.sv}, 2, 9
{output.pbmm2_MD}, 2, 9
{log.log_ngmlr}, 2, 9
{log.log_pbmm2}, 2, 9
{params.my_opts}, 2, 9
{log}.import_{params.import_num}, 2, 9
{output.counter}, 2, 9
$i;, 2, 8
{output.bcf};, 2, 9
{input.assembly}, 2, 9
{output.forward}, 2, 9
ILLUMINACLIP:{params.adapter}:2:30:10, 2, 8
{output.unpaired_pe}, 2, 9
\t-threads, 2, 8
\t-{params.phred}, 2, 8
\t{input.single}, 2, 8
\t{output.single}, 2, 8
\tILLUMINACLIP:{params.adapter}:2:30:10, 2, 8
\t{params.trimmomatic_params}, 2, 8
\t2, 2, 8
rad_haplotyper.pl, 2, 8
{params.scripts_dir}/fa_to_bed.sh, 2, 9
{output.FILTERED_VARIANTS_1}, 2, 9
{output.HARDY_WEINGBERG_VARIANTS}, 2, 9
{output.sample_header}, 2, 9
{output.new_sample_header}, 2, 9
{output.new_bam}, 2, 9
{output.MD5_1}, 2, 9
{output.MD5_2}, 2, 9
htsbox, 2, 8
{output.paf}, 2, 9
{params.execdir}/resources/alignment_references/{wildcards.ref}, 2, 9
{output.paired_temp}, 2, 9
{input.S1}, 2, 9
{output.merge_sorted}, 2, 9
45, 2, 8
QUAL, 2, 8
50, 2, 8
{params.snp_cutoff}, 2, 9
=1, 2, 8
{params.execdir}/resources/alignment_references/mabscessus, 2, 9
mpileup, 2, 8
MuSE, 2, 8
SD={params.dict}, 2, 8
workflow/scripts/staticqtl/genotype_reformat.sh, 2, 8
workflow/scripts/saturation, 2, 8
I=/dev/stdin, 2, 8
rose-dt, 2, 8
rose-dt-plot.py, 2, 8
{input.csv}, 2, 9
{input.bg_csv}, 2, 9
TMP_DIR={params.tmp}, 2, 8
ASSUME_SORTED=true, 2, 8
{output.json}, 2, 9
{output.quoted_genes}, 2, 9
{input.mock}, 2, 9
{input.reverse}, 2, 9
INPUT=/dev/stdin, 2, 8
METRICS_FILE={output.dupstats}, 2, 8
ASSUME_SORT_ORDER=coordinate, 2, 8
COMPRESSION_LEVEL=1, 2, 8
QUIET=false, 2, 8
251831106, 2, 8
ref, 2, 8
NC_012920.1, 2, 8
{input.rawData}, 2, 9
{params.fastp_directory}, 2, 9
f=$basename, 2, 8
dnadiff, 2, 8
{input.bestmash}, 2, 9
F24B22, 2, 8
{params.samplingprop}, 2, 9
{params.samplingtotal}, 2, 9
{params.seed}, 2, 9
fwd_length=`zcat, 2, 8
fwd_length=$expr, 2, 8
rev_start=$expr, 2, 8
sort;, 2, 8
LD_LIBRARY_PATH={matlab_path}, 2, 8
{fastGear_exe}run_fastGEAR.sh, 2, 9
{params.db}, 2, 9
\t{BISMARK}, 2, 8
DEDUPLICATE_BISMARK, 2, 8
/biodata/irg/grp_stich/Hv-DRR-pop/bin/bismark_v0.20.1/Bismark/bam2nuc, 2, 8
/biodata/irg/grp_stich/Hv-DRR-pop/bin/bismark_v0.20.1/Bismark/coverage2cytosine, 2, 8
{COVERAGE2CYTOSINE}, 2, 9
1_trimmed_reads/cat, 2, 8
=n;, 2, 8
.join, 2, 8
[fpython, 2, 8
{output.other_info}, 2, 9
{{log.output}}, 2, 9
{{log.error}}, 2, 9
{output.freq}, 2, 9
{output.depth_mean}, 2, 9
{output.qual}, 2, 9
{output.missing_ind}, 2, 9
{output.miss}, 2, 9
tsdate, 2, 8
{output.exported_gene}, 2, 9
{output.exported_pathway}, 2, 9
{output.sai}, 2, 9
get_parent_dir={input.initialized};, 2, 8
biopet-validatefastq, 2, 8
falco, 1, 8
chrM_count=$sambamba, 1, 8
nucl_count=$sambamba, 1, 8
annotatePeaks.pl, 1, 8
{output.annotated}, 1, 9
iu-gen-configs, 1, 8
iu-filter-quality-minoche, 1, 8
{params.get_bed}, 1, 9
{params.intersect_target_regions}, 1, 9
overwrite=t, 1, 8
in1={input.r1}, 1, 8
in2={input.r2}, 1, 8
ktrim=r, 1, 8
ref=/opt/bbtools/bbmap/resources/adapters.fa, 1, 8
out1={output.out1}, 1, 8
out2={output.out2}, 1, 8
{input.file}, 1, 9
{params.larg_index}, 1, 9
{output}/bowtie_DB, 1, 9
HEADER=${{HEADER}}tnum_snvthap, 1, 8
HEADER=$zcat, 1, 8
HEADER=$cat, 1, 8
HEADER=$head, 1, 8
NAME_COL=$NUM_COL+1, 1, 8
BOOL_COL=$NUM_COL+2, 1, 8
OTUs=$grep, 1, 8
size=$grep, 1, 8
${{otu}}, 1, 8
bhits=$grep, 1, 8
bit_best=$grep, 1, 8
bit_low=$grep, 1, 8
bit_thr=$$bit_best, 1, 8
shits=$grep, 1, 8
cons=$grep, 1, 8
{input.lca}, 1, 9
all=$grep, 1, 8
ASV_, 1, 8
nohits=$grep, 1, 8
spec=$grep, 1, 8
gen=$grep, 1, 8
fam=$grep, 1, 8
other=$, 1, 8
nohits_perc=$printf, 1, 8
spec_perc=$printf, 1, 8
gen_perc=$printf, 1, 8
fam_perc=$printf, 1, 8
other_perc=$printf, 1, 8
breakends, 1, 8
gff3sort.pl, 1, 8
count=`ls, 1, 8
{output.pdf_dir}/graph_$basename, 1, 9
{params.outdir_prefix}kmc_canon.1, 1, 9
{params.outdir_prefix}kmc_canon.2, 1, 9
{params.outdir_prefix}kmc_all.1, 1, 9
{params.outdir_prefix}kmc_all.2, 1, 9
{input.kmersGWAS_bin}/filter_kmers, 1, 9
{input.kmersGWAS_bin}/build_kmers_table, 1, 9
{output.merged_r1}, 1, 9
{output.merged_r2}, 1, 9
{output.sorted_r1}, 1, 9
{output.sorted_r2}, 1, 9
{params.input_bam}, 1, 9
{params.output}, 1, 9
{input.configfile}, 1, 9
{input.wcregions}, 1, 9
{input.snppositions}, 1, 9
$pwd/utils/R-packages/, 1, 8
{output.compressed_bcf}, 1, 9
{output.uncompressed_bcf}, 1, 9
{output.compressed_vcf}, 1, 9
{output.ab}, 1, 9
{output.norm}, 1, 9
{output.hg001}, 1, 9
{output.hg002}, 1, 9
{output.hg003}, 1, 9
{output.hg004}, 1, 9
mkgtf, 1, 8
workflow/scripts/move_coordinates.bash, 1, 8
{input.bcl_zip}, 1, 9
{params.introns}, 1, 9
n\, 1, 8
RM2Bed.py, 1, 8
{input.dna_brnn}, 1, 9
{params.dupmasker}, 1, 9
DupMasker, 1, 8
{output.clean_count}, 1, 9
{output.clean_cords}, 1, 9
STAR_init_map1_logfile.log, 1, 8
{params.btexwec}, 1, 9
{output.log_bt}, 1, 9
{output.bed_ci}, 1, 9
{output.reads_ci}, 1, 9
{params.logfile}, 1, 9
resource_file=storm_tracks_{wildcards.STORM_MODEL}.txt, 1, 8
resource_file=storm_fixed_{wildcards.STORM_MODEL}.txt, 1, 8
{wildcards.OUTPUT_DIR}/input/storm-ibtracs/{wildcards.EVENTS_OR_FIXED}/{wildcards.STORM_MODEL}/*.zip, 1, 9
{wildcards.OUTPUT_DIR}/input/storm-ibtracs/{wildcards.EVENTS_OR_FIXED}/{wildcards.STORM_MODEL}/archive.zip, 1, 9
gdalwarp, 1, 8
generic, 1, 8
complementBed, 1, 8
{output.snp}, 1, 9
ff=$find, 1, 8
$ff$, 1, 8
{params.out}/merge_{params.samp}_VCFs.sh, 1, 9
{params.outdir}/snvs, 1, 9
{input.mut1_vcf}, 1, 9
{input.var_vcf}, 1, 9
{input.mut2_vcf}, 1, 9
{input.strelka_vcf}, 1, 9
{output.browser_file}, 1, 9
fasta.gz, 1, 8
fa, 1, 8
fa.gz, 1, 8
fastq.gz, 1, 8
fq.gz$, 1, 8
sam.gz$, 1, 8
extract-from-fastq36.py, 1, 8
{output.include}, 1, 9
GC_control_gen, 1, 8
{input.exclude}, 1, 9
{params.window}, 1, 9
{output.bin}, 1, 9
{output.temp_sat}, 1, 9
{params.sdir}/scripts/wssd_binary.py, 1, 9
{output.wssd_bin}, 1, 9
SAM_GC_correction, 1, 8
perbp-to-windows.py, 1, 8
depth-to-cn.py, 1, 8
{input.fas}, 1, 9
{params.fqz}, 1, 9
mutserve, 1, 8
{output.intervals}, 1, 9
header={output.final_vcf}.header;, 1, 8
vcf_tmp={output.final_vcf}.tmp;, 1, 8
${{header}};, 1, 8
LINE=$, 1, 8
GLIMPSE_phase, 1, 8
list_files={output.ligated_bcf}.list_files;, 1, 8
${{list_files}};, 1, 8
GLIMPSE_ligate, 1, 8
{wildcards.gp}, 1, 9
GLIMPSE_sample, 1, 8
out={output.R};, 1, 8
options={params.collapsed};, 1, 8
out={output.R1};, 1, 8
out={output.fastq};, 1, 8
html={output.html}, 1, 8
symlink=${{html%%_fastqc.html}}.fastq.gz, 1, 8
{params.sex_params}, 1, 9
list_fastq_stats=$echo, 1, 8
nb=$awk, 1, 8
plot_length=$echo, 1, 8
$plot_length, 1, 8
{params.PICARD}, 1, 9
params={params.params}, 1, 8
dedup, 1, 8
meth5, 1, 8
$TMPDIR/scatteritem.fastq, 1, 8
{output.query_fasta}, 1, 9
{params.one}, 1, 9
{input.tbl}, 1, 9
{output.contacts}, 1, 9
{input.fai}:{wildcards.CW}, 1, 9
{input.contacts}, 1, 9
{input.subreads}, 1, 9
lima, 1, 8
{params.temp_filename}, 1, 9
{input.genome_index}, 1, 9
{input.transcripts}, 1, 9
{input.css}, 1, 9
{output.gff};, 1, 9
{output.probes}, 1, 9
{output.hsTarget}, 1, 9
BAIT_INTERVALS={input.probes}, 1, 8
TARGET_INTERVALS={input.hsTarget}, 1, 8
COVERAGE_CAP=null, 1, 8
FNR==1, 1, 8
{output.qc};, 1, 9
{output.coordsorted}, 1, 9
.{{6}}.+?P, 1, 8
umi_2, 1, 8
.{{6}}$, 1, 8
0.75, 1, 8
mosaicatcher, 1, 8
\tcp, 1, 8
\tCodes/generate_bootstrap_alignments.py, 1, 8
Codes/extract_two_copy_genes.py, 1, 8
\trm, 1, 8
Codes/count_sequence_patterns.py, 1, 8
Codes/make_fate_network.py, 1, 8
Codes/cluster_fates.R, 1, 8
ALL_TCG_GENES=`cat, 1, 8
CHECK_PRESENCE=`grep, 1, 8
Codes/cluster_bootstraps.py, 1, 8
Codes/measure_recurrence_prevalence.py, 1, 8
Codes/find_recurrent_quartets.sh, 1, 8
Codes/measure_recurrence_magnitude.sh, 1, 8
check.out, 1, 8
{output.anno}, 1, 9
{params.types}, 1, 9
{params.tr_supp_level_id}, 1, 9
{input.anno}, 1, 9
{output.filtered_anno}, 1, 9
{output.selected_5p}, 1, 9
{output.trimmed_5p}, 1, 9
{params.five_p_adapt}, 1, 9
fastx_reverse_complement, 1, 8
{output.selected_3p}, 1, 9
{input.ends}, 1, 9
{params.signals}, 1, 9
{input.pooled_sites}, 1, 9
{output.sites_with_pas}, 1, 9
{output.clusters_annotated}, 1, 9
{output.clusters_support}, 1, 9
{output.samples_bed}, 1, 9
scripts/cmseq.sh, 1, 8
kneaddata_database, 1, 8
{params.tmp_fwd}, 1, 9
{params.tmp_rev}, 1, 9
kneaddata, 1, 8
{params.basedir}/scripts/NgsRelate/ngsRelate, 1, 9
/dev/stdin, 1, 8
mkfifo, 1, 8
{output.mpileup_gz}, 1, 9
${{TMPDIR}}/sorted.bam, 1, 8
{params.hisat2_command}, 1, 9
{params.hisat2_build_command}, 1, 9
{log.st_sort}, 1, 9
{log.all}, 1, 9
{params.ids}, 1, 9
{params.tmp_dir}/R1.fastq, 1, 9
{params.tmp_dir}/R2.fastq, 1, 9
{params.tmp_log}, 1, 9
prerapsearch, 1, 8
$TMPDIR/fasta/tm.map, 1, 8
files=$cat, 1, 8
genome_id=$echo, 1, 8
new_id=$grep, 1, 8
$TMPDIR/fasta/jgi.map, 1, 8
$TMPDIR/fasta/refseq.map, 1, 8
$TMPDIR/fasta/taxonmap.1, 1, 8
$TMPDIR/fasta/taxonmap.2, 1, 8
gff2bed, 1, 8
{input.pin}, 1, 9
{output.hnm}, 1, 9
#, 1, 8
{input.ref_idx}, 1, 9
{params.blastn}, 1, 9
{output.eggnog}, 1, 9
{output.cazy}, 1, 9
{output.kofam}, 1, 9
{params.YML_pipeline_config}, 1, 9
{output.DIR_pipeline_summary}/pipeline-config.yml, 1, 9
{params.BED_3ss_list}, 1, 9
{output.DIR_pipeline_summary}/results/coordinates-3ss.bed, 1, 9
{params.BED_5ss_list}, 1, 9
{output.DIR_pipeline_summary}/results/coordinates-5ss.bed, 1, 9
{params.BED_pas_list}, 1, 9
{output.DIR_pipeline_summary}/results/coordinates-pas.bed, 1, 9
{params.DIR_PAQ_module_outdir}/filtered_pas_expression.tsv, 1, 9
{output.DIR_pipeline_summary}/results/pas-expression-table.tsv, 1, 9
{params.DIR_PAQ_module_outdir}/relative_pas_positions.tsv, 1, 9
{output.DIR_pipeline_summary}/results/pas-relative-positions.tsv, 1, 9
{params.DIR_QEI_module_outdir}/filtered_merged_quantification_genes.tsv, 1, 9
{output.DIR_pipeline_summary}/results/quantification-genes.tsv, 1, 9
{params.DIR_QEI_module_outdir}/filtered_merged_quantification_transcripts.tsv, 1, 9
{output.DIR_pipeline_summary}/results/quantification-transcripts.tsv, 1, 9
{params.DIR_QEI_module_outdir}/inclusion_table.tsv, 1, 9
{output.DIR_pipeline_summary}/results/exon-inclusion-table.tsv, 1, 9
{params.DIR_RES_module_outdir}/results_updated_3ss.tsv, 1, 9
{output.DIR_pipeline_summary}/results/results-3ss.tsv, 1, 9
{params.DIR_RES_module_outdir}/results_updated_5ss.tsv, 1, 9
{output.DIR_pipeline_summary}/results/results-5ss.tsv, 1, 9
{params.DIR_RES_module_outdir}/results_updated_pas.tsv, 1, 9
{output.DIR_pipeline_summary}/results/results-pas.tsv, 1, 9
{params.DIR_RES_module_outdir}/motifs_3ss.txt, 1, 9
{output.DIR_pipeline_summary}/results/motifs-list-3ss.txt, 1, 9
{params.DIR_RES_module_outdir}/motifs_5ss.txt, 1, 9
{output.DIR_pipeline_summary}/results/motifs-list-5ss.txt, 1, 9
{params.DIR_RES_module_outdir}/motifs_pas.txt, 1, 9
{output.DIR_pipeline_summary}/results/motifs-list-pas.txt, 1, 9
{params.DIR_RES_module_outdir}/Zscores_heatmaps, 1, 9
{output.DIR_pipeline_summary}/results/heatmaps, 1, 9
{params.STR_pwm_seqlogos_copy_command}, 1, 9
{output.TARGZ_summary}, 1, 9
summary, 1, 8
{output.thresholds}, 1, 9
CITE-seq-Count, 1, 8
{output.features_file};, 1, 9
{output.matrix_file};, 1, 9
{output.barcodes_file}, 1, 9
{params.cr_out}{params.sample}/outs/filtered_feature_bc_matrix/features.tsv, 1, 9
{params.cr_out}{params.sample}/outs/filtered_feature_bc_matrix/barcodes.tsv, 1, 9
{params.cr_out}{params.sample}/outs/filtered_feature_bc_matrix/matrix.mtx, 1, 9
{input.fq2}, 1, 9
{params.outdir}/{params.prefix}.mylog, 1, 9
{input.nc1_fna}, 1, 9
{input.nc2_fna}, 1, 9
{output.merge_fna}, 1, 9
{input.nc1_faa}, 1, 9
{input.nc2_faa}, 1, 9
{output.merge_faa}, 1, 9
{output.mapped_filtered}, 1, 9
{params.query_argument}, 1, 9
{params.progress}, 1, 9
/usr/local/bin/HiC-Pro_3.1.0/bin/utils/digest_genome.py, 1, 8
LC_ALL=C;, 1, 8
{output.commun}, 1, 9
{output.uniquezero}, 1, 9
{output.onlyV}, 1, 9
{log.R1}, 1, 9
{log.R2}, 1, 9
envs/ecc_caller/generate_bam_file.sh, 1, 8
envs/ecc_caller/call_ecc_regions.sh, 1, 8
envs/ecc_caller/assign_confidence.sh, 1, 8
{output.filtered_tsv}, 1, 9
{output.filtered_bed}, 1, 9
{output.temp1_2}, 1, 9
{output.temp2_3}, 1, 9
{output.temp1_3}, 1, 9
$FILE.new, 1, 8
$1==track, 1, 8
{output.chrRemoved}, 1, 9
wigToBigWig, 1, 8
plotProfile, 1, 8
\xe2\x80\x93regionsLabel, 1, 8
{output.centromere_bed}, 1, 9
{output.centromere_bdg}, 1, 9
{output.centromere_bdg_sorted}, 1, 9
{output.centromere_bdg_sorted_merged}, 1, 9
{output.TE_bed}, 1, 9
{output.TE_bdg}, 1, 9
{output.TE_bdg_sorted}, 1, 9
{output.TE_bdg_sorted_merged}, 1, 9
\t-g, 1, 8
\t-w, 1, 8
{output.width_bed}, 1, 9
{output.dir}, 1, 9
/,, 1, 8
{output.ARS_bed}, 1, 9
{output.ARS_conf}, 1, 9
{output.cat_tmp}, 1, 9
WC=`wc, 1, 8
N_LINES=`echo, 1, 8
{params.out}${{i}}, 1, 9
{output.shuf_bed}, 1, 9
bamToPsl, 1, 8
pslToChain, 1, 8
{input.out}, 1, 9
{output.cm}, 1, 9
CL0011[123], 1, 8
{output.clanin}, 1, 9
cmpress, 1, 8
cmscan, 1, 8
{input.fastafile}, 1, 9
https://card.mcmaster.ca/latest/data, 1, 8
{params.reads}, 1, 9
s=$echo, 1, 8
{params.samplenames}, 1, 9
{output.cov}, 1, 9
{params.rank}, 1, 9
{params.indir}, 1, 9
{input.ms}, 1, 9
{input.idmap}, 1, 9
{input.tsv}, 1, 9
{params.rehead_bam}, 1, 9
mem=-Xmx$6, 1, 8
I={params.rehead_bam}, 1, 8
USE_JDK_DEFLATER=TRUE, 1, 8
PROGRAM_RECORD_ID=null, 1, 8
samtools_threads=${threads}, 1, 8
hashfile=$find, 1, 8
hashdir=$dirname, 1, 8
{log.clean}, 1, 9
centrifuge-kreport, 1, 8
{input[0]},{wildcards.sample}_{wildcards.unit}, 1, 9
indexdb_rna, 1, 8
{params.R1_unzipped}, 1, 9
{params.R2_unzipped}, 1, 9
merge-paired-reads.sh, 1, 8
{params.merged}, 1, 9
{params.score_params}, 1, 9
{output.R1P}, 1, 9
{output.R2P}, 1, 9
s/{wildcards.sample}_{wildcards.unit}_R1/{wildcards.sample}_{wildcards.unit}_R2/g, 1, 8
{log.R2log}, 1, 9
{params.url_base}/GCF_000819615.1_ViralProj14015_genomic.fna.gz, 1, 9
{params.tmp_out}/{wildcards.sample}_{wildcards.unit}_R%.filtered.fastq.gz, 1, 9
{params.tmp_out}/{wildcards.sample}_{wildcards.unit}_se.filtered.fastq.gz, 1, 9
img=$readlink, 1, 8
IMAGEPATH, 1, 8
:${{img}}:, 1, 8
https://ndownloader.figshare.com/files/2194841, 1, 8
pattern=$echo, 1, 8
url=ftp://ftp.sra.ebi.ac.uk/vol1/fastq, 1, 8
sample={wildcards.sample}, 1, 8
odir=01qc/{wildcards.sample}_fastqc, 1, 8
{output.ie}, 1, 9
bam2wig.py, 1, 8
{input.vep}, 1, 9
{log.out_VEP}, 1, 9
{params.recal_tables}, 1, 9
{log.out_GatherBQSRReports}, 1, 9
{log.out_GatherRecalBamFiles}, 1, 9
{input.samtools}, 1, 9
{log.out_SortBam}, 1, 9
{input.sambamba}, 1, 9
{log.out_IndexBam}, 1, 9
{log.VQSR_indel}, 1, 9
{log.VQSR_snp}, 1, 9
{log.ApplyVQSR_indel}, 1, 9
{log.ApplyVQSR_snp}, 1, 9
{input.bcftools}, 1, 9
{log.err_SelectVariants}, 1, 9
parallel_jobs=$, 1, 8
{log.MergeHaplotypeCaller}, 1, 9
{log.MergeCohortVCFs_log}, 1, 9
RepeatModeler, 1, 8
{output.ugz}, 1, 9
INPUT={input.interval_list}, 1, 8
OUTPUT={output.bed}, 1, 8
{params.regions}, 1, 9
$samtools, 1, 8
{output.nsc}, 1, 9
{output.rsc}, 1, 9
F1={input.r1}, 1, 8
F2={input.r2}, 1, 8
SM={wildcards.sample}, 1, 8
RG=null, 1, 8
ExtractUmisFromBam, 1, 8
CorrectUmis, 1, 8
CallDuplexConsensusReads, 1, 8
FilterConsensusReads, 1, 8
BARCODE_TAG=RX, 1, 8
MAX_RECORDS_IN_RAM={params.max_records_in_ram}, 1, 8
results/QC/fastQC/, 1, 8
results/QC/fastqScreen/, 1, 8
results/QC/qualimap/, 1, 8
results/QC/samtools/, 1, 8
results/QC/mark_duplicates, 1, 8
results/QC/consensus/qualimap/, 1, 8
results/QC/consensus/samtools/, 1, 8
bit-summarize-assembly, 1, 8
eukcc, 1, 8
{output.est_tab}, 1, 9
{output.AA_seqs}, 1, 9
working_dir=$pwd, 1, 8
${{CONDA_PREFIX}}/etc/conda/activate.d/set_env_vars.sh, 1, 8
GTDBTK_DATA_PATH={params.gtdbtk_db_dir}, 1, 8
${{working_dir}}/{log}, 1, 8
={params.min_unk}, 1, 8
amrfinder_update, 1, 8
download-antismash-databases, 1, 8
antismash, 1, 8
run]}/6hrPlevPt/, 1, 8
{config[cmip_name]}/gn/v20190710/, 1, 9
{config[cmip_name]}_6hrPlevPt_MPI-ESM1-2-HR_historical_{config[run]}_gn_{wildcards.year_str}.nc, 1, 9
genomeCoverageBed, 1, 8
ascp, 1, 8
AssemblePairs.py, 1, 8
CollapseSeq.py, 1, 8
SplitSeq.py, 1, 8
{input.genes}.tmp, 1, 9
{input.fasta}.tmp, 1, 9
ratio=$grep, 1, 8
{log.sam};, 1, 9
{input.r1_raw_fq}, 1, 9
meRanT, 1, 8
///, 1, 8
prepare_receptor4.py, 1, 8
obabel, 1, 8
fcd, 1, 8
germlinew, 1, 8
gzvcf2plink, 1, 8
maskSegments, 1, 8
59, 1, 8
100, 1, 8
15, 1, 8
jvarkit/gradlew, 1, 8
{output.samples_fastq_1_gz}, 1, 9
{output.samples_fastq_2_gz}, 1, 9
rgid=`echo, 1, 8
{output.bamout}, 1, 9
{params.samplestats}, 1, 9
muscle, 1, 8
{params.muscle_diags}, 1, 9
{output.outliers};, 1, 9
unassigned, 1, 8
{output.unassigned}, 1, 9
{params.pairwise}, 1, 9
pandoc, 1, 8
html, 1, 8
link, 1, 8
/head, 1, 8
body, 1, 8
/body, 1, 8
/html, 1, 8
shred, 1, 8
dag.svg;, 1, 8
rulegraph.svg, 1, 8
{params.ANNOVAR}/table_annovar.pl, 1, 9
{params.qd}, 1, 9
{params.sor}, 1, 9
{params.fs}, 1, 9
{params.mq}, 1, 9
{params.mqranksum}, 1, 9
{params.readposranksum}, 1, 9
{output.result}, 1, 9
$ANNOTSV/bin/AnnotSV, 1, 8
samplot, 1, 8
{output}.tmp.gz, 1, 9
outdir=`echo, 1, 8
list.samples, 1, 8
pedsim, 1, 8
ibis, 1, 8
{output.bed_tissue}, 1, 9
.*//, 1, 8
qapa, 1, 8
{params.decoy}, 1, 9
{params.fa}, 1, 9
{input.positions}, 1, 9
{output.barcodes}, 1, 9
{output.taxid_mapper}, 1, 9
{output.listing}, 1, 9
H], 1, 8
{output.primers_rc}, 1, 9
ntaxid=$cut, 1, 8
nbarcode=$wc, 1, 8
ntaxidbarcode=$cut, 1, 8
rdefense-finder, 1, 8
padloc, 1, 8
rmkdir, 1, 8
macsydata, 1, 8
filter_blast_m8.py, 1, 8
{output.domtblU}, 1, 9
{output.gff}.log, 1, 9
vcfutils.pl, 1, 8
./Parsnp-Linux64-v1.2/parsnp, 1, 8
harvesttools-Linux64-v1.2/harvesttools, 1, 8
{params.assembly_option}, 1, 9
http://ftp.ensembl.org/pub/release-{params.release}/gtf/, 1, 8
{params.species}/, 1, 9
{params.species_capital}.{params.build}.{params.release}.gtf.gz, 1, 9
scripts/gtfParser/gtfParser, 1, 8
scripts/colTab/colTab, 1, 8
CIAlign, 1, 8
log/{wildcards.sample}_basic.err, 1, 8
log/{wildcards.sample}_model.err, 1, 8
{out}mbc/basic/{wildcards.sample}/mappings_sorted.bam, 1, 9
log/{wildcards.sample}_basic_bam_sort1.err, 1, 8
log/{wildcards.sample}_basic_bam_index1.err, 1, 8
{out}mbc/basic/{wildcards.sample}/mod_mappings.5mC_sorted.bam, 1, 9
log/{wildcards.sample}_basic_bam_sort3.err, 1, 8
log/{wildcards.sample}_basic_bam_index3.err, 1, 8
{out}mbc/model_based/{wildcards.sample}/mappings_sorted.bam, 1, 9
log/{wildcards.sample}_model_based_bam_sort1.err, 1, 8
log/{wildcards.sample}_model_based_bam_index1.err, 1, 8
{out}mbc/model_based/{wildcards.sample}/mod_mappings.5mC_sorted.bam, 1, 9
log/{wildcards.sample}_model_based_bam_sort3.err, 1, 8
log/{wildcards.sample}_model_based_bam_index3.err, 1, 8
log/{wildcards.sample}_basic_hpv.err, 1, 8
log/{wildcards.sample}_model_hpv.err, 1, 8
{out}mbc_hpv/basic/{wildcards.sample}/mappings_sorted.bam, 1, 9
log/{wildcards.sample}_basic_bam_sort1_hpv.err, 1, 8
log/{wildcards.sample}_basic_bam_index1_hpv.err, 1, 8
{out}mbc_hpv/basic/{wildcards.sample}/mod_mappings.5mC_sorted.bam, 1, 9
log/{wildcards.sample}_basic_bam_sort3_hpv.err, 1, 8
log/{wildcards.sample}_basic_bam_index3_hpv.err, 1, 8
{out}mbc_hpv/model_based/{wildcards.sample}/mappings_sorted.bam, 1, 9
log/{wildcards.sample}_model_based_bam_sort1_hpv.err, 1, 8
log/{wildcards.sample}_model_based_bam_index1_hpv.err, 1, 8
{out}mbc_hpv/model_based/{wildcards.sample}/mod_mappings.5mC_sorted.bam, 1, 9
log/{wildcards.sample}_model_based_bam_sort3_hpv.err, 1, 8
log/{wildcards.sample}_model_based_bam_index3_hpv.err, 1, 8
log/{wildcards.sample}_pmd_hpv.err, 1, 8
{run}log/{wildcards.sample}_snpeff2_hpv.err, 1, 9
log/{wildcards.sample}_pmd.err, 1, 8
{run}log/{wildcards.sample}_snpeff3.err, 1, 9
log/index_lra_hpv.err, 1, 8
log/{wildcards.sample}_lra_map_hpv.err, 1, 8
{out}sv_hpv/{wildcards.sample}/sv_calls/, 1, 9
log/{wildcards.sample}_sv_call_hpv.err, 1, 8
log/{wildcards.sample}_sort_vcf_hpv.err, 1, 8
log/{wildcards.sample}_index_vcf_hpv.err, 1, 8
{run}log/{wildcards.sample}_snpeff_hpv.err, 1, 9
log/index_lra.err, 1, 8
log/{wildcards.sample}_lra_map.err, 1, 8
{out}sv/{wildcards.sample}/sv_calls/, 1, 9
log/{wildcards.sample}_sv_call.err, 1, 8
log/{wildcards.sample}_sort_vcf.err, 1, 8
log/{wildcards.sample}_index_vcf.err, 1, 8
{params.out_dir}/{wildcards.sample}.discarded.fastq, 1, 9
{params.out_dir}/{wildcards.sample}.unassembled.forward.fastq, 1, 9
{params.out_dir}/{wildcards.sample}.unassembled.reverse.fastq, 1, 9
frm, 1, 8
{params.inputs}, 1, 9
sort}, 1, 8
{output.filtered_quants}, 1, 9
OUTPUT={output.out}, 1, 8
ASSUME_SORTED=TRUE, 1, 8
CREATE_INDEX=TRUE, 1, 8
out=`echo, 1, 8
Scripts/init_sample.sh, 1, 8
Scripts/init_sample_SE.sh, 1, 8
Scripts/init_sample_dmx.sh, 1, 8
{config[pear][command]}, 1, 9
{output.fwo}, 1, 9
{output.rvo}, 1, 9
{config[qiime][path]}split_libraries_fastq.py, 1, 9
+strconfig[dada2_taxonomy][db], 1, 8
+strconfig[dada2_taxonomy][add_sps][add], 1, 8
+strconfig[dada2_merge][minOverlap], 1, 8
+strconfig[UNPAIRED_DATA_PIPELINE], 1, 8
=NF;i++{{header=headert$i}};print, 1, 8
p, 1, 8
=p;, 1, 8
=NR;, 1, 8
1{{tax=$2;fori=3;i, 1, 8
=NF;i++{{tax=tax;$i}};h[$1]=tax;}}next;}}, 1, 8
mapp=, 1, 8
{config[align_vs_reference][mothur_cmd]}, 1, 9
degapseq, 1, 8
{config[qiime][path]}identify_chimeric_seqs.py, 1, 9
1{{h[$1]=$2;}}next}}{{ifFNR, 1, 8
{config[derep][vsearch_cmd]}, 1, 9
{config[pickOTU][extra_params]}, 1, 9
{config[qiime][path]}pick_otus.py, 1, 9
{config[qiime][path]}pick_rep_set.py, 1, 9
{config[assignTaxonomy][blast][command]}, 1, 9
{config[assignTaxonomy][blast][extra_params]}, 1, 9
{config[assignTaxonomy][vsearch][command]}, 1, 9
{config[qiime][path]}parallel_assign_taxonomy_{config[assignTaxonomy][qiime][method]}.py, 1, 9
{config[assignTaxonomy][qiime][dbType]}, 1, 9
{config[qiime][path]}make_otu_table.py, 1, 9
{config[qiime][path]}align_seqs.py, 1, 9
{config[qiime][path]}filter_alignment.py, 1, 9
Morphology_main.py, 1, 8
unions_type_4/rest_of_set/k_{wildcards.k}/dataset_{wildcards.num}/dataset_{wildcards.num}.transformed.combined, 1, 8
step_1_type_4/pivot/k_{wildcards.k}/dataset_{wildcards.pivot_num}/pivot_{wildcards.pivot_num}, 1, 8
step_1_type_4/pivot/k_{wildcards.k}/dataset_{wildcards.num}/pivot_{wildcards.num}, 1, 8
ref_lists_type_5/dataset_{wildcards.num}_references.txt, 1, 8
exp6_unions/rest_of_set/k_{wildcards.k}/dataset_{wildcards.num}/dataset_{wildcards.num}.transformed.combined, 1, 8
exp6_intermediate/step_1/pivot/k_{wildcards.k}/{wildcards.read_type}/pivot_{wildcards.pivot_num}, 1, 8
exp6_intermediate/step_1/pivot/k_{wildcards.k}/{wildcards.read_type}/pivot_{wildcards.num}, 1, 8
within_databases_type3/rest_of_set/k_{wildcards.k}/dataset_{wildcards.num}/dataset_{wildcards.num}.transformed.combined, 1, 8
ref_lists_type_8/dataset_{wildcards.num}_references.txt, 1, 8
pivot_genome_path=$ls, 1, 8
pivot_genome_name=$echo, 1, 8
trial_{wildcards.trial}/exp0_pivot_reads/dataset_{wildcards.num}/ont/pivot_{wildcards.num}.fastq, 1, 8
trial_{wildcards.trial}/exp0_pivot_reads/dataset_{wildcards.num}/ont/pivot_{wildcards.num}.fa, 1, 8
within_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/intersect/dataset_{wildcards.num}_pivot_intersect_group, 1, 8
within_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/subtract/dataset_{wildcards.num}_pivot_subtract_group, 1, 8
across_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/intersect/dataset_{wildcards.num}_pivot_intersect_group, 1, 8
across_dataset_results_type_2/k_{wildcards.k}/dataset_{wildcards.num}/subtract/dataset_{wildcards.num}_pivot_subtract_group, 1, 8
{input.splice_sites}, 1, 9
gtf2bed.pl, 1, 8
/c8000xd3/rnaseq-heath/bin/samtools, 1, 8
~/anaconda2/envs/py35/bin/seqtk, 1, 8
miRNA, 1, 8
/exon/, 1, 8
Name, 1, 8
/gene_id/, 1, 8
extractSplitReads_BwaMem, 1, 8
lumpyexpress, 1, 8
0.7, 1, 8
=6;, 1, 8
{input.track}, 1, 9
{output.wt_fasta}, 1, 9
{output.mt_fasta}, 1, 9
{params.bbmap}, 1, 9
{output.compressed}, 1, 9
/home/caspar/miniconda3/bin/truvari, 1, 8
hapdup, 1, 8
medaka_variant, 1, 8
{input.trs}, 1, 9
qc/pycoqc/per_run/, 1, 8
tmp=$mktemp, 1, 8
$tmp, 1, 8
{params.sqanti}, 1, 9
{input.anno_ref}, 1, 9
racon_wrapper, 1, 8
{output.md}, 1, 9
root=${{path%.*}}, 1, 8
ext=${{path#$root}}, 1, 8
raven, 1, 8
wtdbg2, 1, 8
$outf/wtdbg.polishing.bam, 1, 8
multi_to_single_fast5, 1, 8
deepsignal, 1, 8
{input.gtf_ca}, 1, 9
{output.one}, 1, 9
{output.two}, 1, 9
12, 1, 8
{input.ext_motifs}, 1, 9
clstr2txt.pl, 1, 8
{output.pre}, 1, 9
{output.clstr}, 1, 9
scripts/count-circrna.py, 1, 8
{output.pileup}, 1, 9
scripts/parse-pileup.py, 1, 8
{wildcards.outdir}/splicing/counts/{wildcards.sample_id}.path.txt, 1, 9
{params.outdir}/splicing/bam.path.txt, 1, 9
{params.outdir}/bigwig.paths.txt, 1, 9
scripts/infer-apa.py, 1, 8
{output.assignment}, 1, 9
{input.r2}, 1, 9
{output.trim_r1}, 1, 9
{output.trim_r2}, 1, 9
LEADING:20, 1, 8
{output.folder}, 1, 9
header=src_indexttrg_index, 1, 8
CAT=$[[, 1, 8
initial_nolines=$zcat, 1, 8
output={output}, 1, 8
filter_command=cat, 1, 8
{params.paragraphs_file}, 1, 9
para_nolines=$cat, 1, 8
^p-1s-1$, 1, 8
output={params.tmp_translations_file}, 1, 8
filter_command=python3, 1, 8
$output, 1, 8
n_after=$zcat, 1, 8
header=src_urlttrg_urltsrc_docttrg_doc, 1, 8
header=src_urlttrg_urltsrc_textttrg_texttsrc_translated, 1, 8
{BIFIXER_DEFERRED_COLS}, 1, 9
{WORDTOK2}, 1, 9
text_fields=$head, 1, 8
value=/dev/null, 1, 8
first=0, 1, 8
sort_flags=$cat, 1, 8
{params.mix_files}, 1, 9
{params.wordtok}, 1, 9
{SRC_LANG}, 1, 9
plain2snt, 1, 8
dataset, 1, 8
models/smc/bootstrap_input/{params.population}.{params.distind}_rep, 1, 8
{config[trim_qual_window]}, 1, 9
bmtagger.sh, 1, 8
{run}log/{wildcards.sample}_medalt_group.err, 1, 9
{run}log/{wildcards.sample}_node_cyto.err, 1, 9
{run}log/{wildcards.sample}_header_node_cyto.err, 1, 9
{run}log/{wildcards.sample}_group_cytoscape.err, 1, 9
{run}log/{wildcards.sample}_tsne_group.err, 1, 9
{run}log/{wildcards.sample}_tsne_group_link.err, 1, 9
log/{wildcards.patient}_medalt_patient.err, 1, 8
log/{wildcards.patient}_cyto.err, 1, 8
log/{wildcards.patient}_node_cyto.err, 1, 8
log/{wildcards.patient}_header_node_cyto.err, 1, 8
{run}log/{wildcards.patient}_patient_cytoscape.err, 1, 9
{run}log/{wildcards.sample}_cnv.err, 1, 9
{run}log/{wildcards.sample}_link_bam.err, 1, 9
{run}log/{wildcards.sample}_link_bai.err, 1, 9
{run}log/{wildcards.sample}_link_alarm.err, 1, 9
{run}log/{wildcards.sample}_link_loup.err, 1, 9
{run}log/{wildcards.sample}_link_summary.err, 1, 9
{run}log/{wildcards.sample}_filter.err, 1, 9
{run}log/{wildcards.sample}_link_reanalysis_alarm.err, 1, 9
{run}log/{wildcards.sample}_link_reanalysis_loup.err, 1, 9
{run}log/{wildcards.sample}_cnv_matrix.err, 1, 9
{run}log/{wildcards.sample}_medalt.err, 1, 9
{run}log/{flowcell}_rm.err, 1, 9
{run}log/touch_rm.err, 1, 9
{run}log/{wildcards.sample}_cytoscape.err, 1, 9
{run}log/{wildcards.sample}_tsne.err, 1, 9
{run}log/{wildcards.sample}_tsne_link.err, 1, 9
{input.notebook}, 1, 9
src/ensemble_prediction_pipeline/ensemble.sh, 1, 8
/opt/deepvariant/bin/make_examples, 1, 8
/opt/deepvariant/bin/call_variants, 1, 8
/opt/deepvariant/bin/postprocess_variants, 1, 8
{input.query}, 1, 9
fasta, 1, 8
gz, 1, 8
yak, 1, 8
{output.mapped_bam}, 1, 9
mapped/{wildcards.sample}.filtered.bam, 1, 8
{SPADES}, 1, 9
{output.fwd_P}, 1, 9
{output.fwd_U}, 1, 9
{output.rvr_P}, 1, 9
{output.rvr_U}, 1, 9
I={input.aln_a}, 1, 8
O={output.aln_clean}, 1, 8
M={output.aln_clean_txt}, 1, 8
{log.canu};, 1, 9
wtdbg2.pl, 1, 8
{log.wtdbg2};, 1, 9
{log.flye};, 1, 9
{log.miniasm}, 1, 9
{params.output_directory}/reads.paf.gz, 1, 9
miniasm, 1, 8
{params.output_directory}/reads.gfa, 1, 9
{log.miniasm};, 1, 9
results/qc/fastqc, 1, 8
results/hisat2, 1, 8
results/qc/samtools/idxstats, 1, 8
results/qc/samtools/flagstat, 1, 8
results/qc/picard/CollectAlignmentSummaryMetrics, 1, 8
results/qc/picard/CollectInsertSizeMetrics, 1, 8
results/featurecounts, 1, 8
{params.featurecounts}, 1, 9
mirtrace, 1, 8
qc, 1, 8
{params.species}, 1, 9
discard_1, 1, 8
AACTGTAGGCACCATCAAT, 1, 8
{{s, 1, 9
=2}}, 1, 8
?P, 1, 8
.{{12}}?P, 1, 8
discard_2, 1, 8
.*, 1, 8
params, 1, 8
{output.dag[0]}, 1, 9
{output.dag[1]}, 1, 9
{output.rulegraph[0]}, 1, 9
{output.rulegraph[1]}, 1, 9
lftp, 1, 8
URL=http://hgdownload.soe.ucsc.edu/goldenPath/hg19/liftOver/hg19ToHg38.over.chain.gz, 1, 8
CrossMap.py, 1, 8
{params.cellranger_mkref_bin}, 1, 9
{config[shapeit_path]}, 1, 9
{params.phasing_tool}, 1, 9
{params.STR_unstranded_flag}, 1, 9
{output.TSV_pas_relative_usages}, 1, 9
{output.TSV_relative_pas_positions}, 1, 9
{output.TSV_exon_lengths}, 1, 9
biotype, 1, 8
ref/PlasmoDB-52_{wildcards.genome}.2.gff.gz, 1, 8
{workflow.basedir}/scripts/add_allele_frequency_vcf.py, 1, 9
{TF_LIST}, 1, 9
{DATABASE_FILE_PATH}, 1, 9
{PYTHON_PATH}, 1, 9
{params.index_files}, 1, 9
O={output.bam_dedup}, 1, 8
{resources.logs}/{resources.job_id}.MD.log, 1, 9
{output.prefilt_bam}, 1, 9
{output.filt_bam}, 1, 9
{output.merged_bam}, 1, 9
{output.narrow_peak_fw}, 1, 9
{output.comb_sorted}, 1, 9
{output.merged_sorted}, 1, 9
log/{wildcards.sample}_stringtie.err, 1, 8
{run}log/{wildcards.sample}_gffcmp.err, 1, 9
log/{wildcards.sample}_gffread.err, 1, 8
log/{wildcards.sample}_stringtie_hpv.err, 1, 8
{run}log/{wildcards.sample}_gffcmp_hpv.err, 1, 9
log/{wildcards.sample}_gffread_hpv.err, 1, 8
log/{wildcards.sample}_freddie_split.err, 1, 8
log/{wildcards.sample}_freddie_segment.err, 1, 8
log/{wildcards.sample}_freddie_cluster.err, 1, 8
log/{wildcards.sample}_freddie_isoforms.err, 1, 8
{run}log/{wildcards.sample}_gffcmp2.err, 1, 9
log/{wildcards.sample}_gffread2.err, 1, 8
log/{wildcards.sample}_freddie_split_hpv.err, 1, 8
log/{wildcards.sample}_freddie_segment_hpv.err, 1, 8
log/{wildcards.sample}_freddie_cluster_hpv.err, 1, 8
log/{wildcards.sample}_freddie_isoforms_hpv.err, 1, 8
{run}log/{wildcards.sample}_gffcmp2_hpv.err, 1, 9
log/{wildcards.sample}_gffread2_hpv.err, 1, 8
unset, 1, 8
input_accessions={input.baseline_accessions}, 1, 8
{workflow.basedir}/index-bioentities/bin/create_bioentities_jsonl.sh, 1, 9
{workflow.basedir}/index-bioentities/bin/delete_bioentities_species.sh, 1, 9
{workflow.basedir}/index-bioentities/bin/index_organism_annotations.sh, 1, 9
tools/bestMash.py, 1, 8
ref=$grep, 1, 8
{params.perl}, 1, 9
tools/parse_dnadiff.py, 1, 8
skesa, 1, 8
{wildcards.SM}.aln.bam, 1, 9
{wildcards.SM}.sorted.bam, 1, 9
wrk=., 1, 8
{wildcards.SM}.bam, 1, 9
{output.cram}, 1, 9
wrk=$pwd, 1, 8
pm_copy, 1, 8
chrom=$basename, 1, 8
out=$outdir/$chrom.vcf.gz, 1, 8
{wildcards.filename}.md5.tmp, 1, 9
{wildcards.filename}.tbi.md5.tmp, 1, 9
{output.predictions_tsv}, 1, 9
vHULK.py, 1, 8
{output.vhulk_tsv}, 1, 9
{output.rafah_tsv}, 1, 9
contig_id=$basename, 1, 8
host_score=$tail, 1, 8
{output.vhmnet_tsv}.tmp;, 1, 9
{output.vhmnet_tsv}, 1, 9
{input.bigwig_nbiot}/H3K27ac*.bw, 1, 9
{output.peaks_all};, 1, 9
{output.peaks_all_merge};, 1, 9
output_file, 1, 8
params=listout_prefix, 1, 8
modality, 1, 8
feature, 1, 8
input, 1, 8
integrated, 1, 8
output, 1, 8
{output.csv_per_sample};, 1, 9
{output.fragments_merged}, 1, 9
bedToBam, 1, 8
workflow/report/replacement_notice.txt, 1, 8
corMMapMerSize=10, 1, 8
corOverlapper=minimap, 1, 8
corConcurrency={params.concurrency}, 1, 8
cormhapConcurrency={params.concurrency}, 1, 8
cormmapConcurrency={params.concurrency}, 1, 8
obtmmapConcurrency={params.concurrency}, 1, 8
utgmmapConcurrency={params.concurrency}, 1, 8
redConcurrency={params.concurrency}, 1, 8
ovbConcurrency={params.concurrency}, 1, 8
ovsConcurrency={params.concurrency}, 1, 8
oeaConcurrency={params.concurrency}, 1, 8
PAIR=`dirname, 1, 8
WDIR={EXPT_DIR}/$PAIR, 1, 8
SRC=${{PAIR:0:2}}, 1, 8
TGT=${{PAIR:3:2}}, 1, 8
{output}/vars, 1, 9
{SUBWORD_NMT}/learn_bpe.py, 1, 9
{SUBWORD_NMT}/apply_bpe.py, 1, 9
{MOSES_SCRIPTS}/recaser/truecase.perl, 1, 9
{MOSES_SCRIPTS}/recaser/train-truecaser.perl, 1, 9
{MOSES_SCRIPTS}/tokenizer/tokenizer.perl, 1, 9
{MOSES_SCRIPTS}/tokenizer/normalize-punctuation.perl, 1, 9
{output}.err, 1, 9
tgt_file={input[1]}/`basename, 1, 8
align_file={output}/`basename, 1, 8
{HUNALIGN}, 1, 9
$align_file, 1, 8
{VECALIGN}/vecalign.py, 1, 9
{output[0]}/$filename.aln, 1, 9
{sys.path[0]}/vecalign_to_tsv.py, 1, 9
{output[0]}/$filename.tsv, 1, 9
{VECALIGN}/overlap.py, 1, 9
split_file={output[0]}/`basename, 1, 8
{MOSES_SCRIPTS}/ems/support/split-sentences.perl, 1, 9
$txt_file, 1, 8
P, 1, 8
$/d, 1, 8
$split_file;, 1, 8
{log.bowtie2}, 1, 9
{log.picard}, 1, 9
{log.dupstats}, 1, 9
{log.flagstat}, 1, 9
{log.Spike_bowtie2}, 1, 9
{log.Spike_picard}, 1, 9
{log.S_dupstats}, 1, 9
{log.S_flagstat}, 1, 9
{output.constant_sites};, 1, 9
GenotypeGVCFs, 1, 8
{output.nochr}, 1, 9
{output.t1}, 1, 9
%ht%aNt%aI, 1, 8
recipes/*, 1, 8
{params.trim_galore_path}, 1, 9
{params.picard_path}, 1, 9
./{input.bam}, 1, 8
./{params.out_prefix}, 1, 8
./{output.mbias}, 1, 8
OT=$cut, 1, 8
OB=$cut, 1, 8
{params.mosdepth_path}, 1, 9
scripts/mosdepth_to_x_coverage.py, 1, 8
DP, 1, 8
70, 1, 8
Kleb.variants.vcf.gz, 1, 8
{output.calledVcf}, 1, 9
{output.annotatedVcf}, 1, 9
{params.bwa_idx}, 1, 9
{output.samblaster_err}, 1, 9
{params.flags_to_include}, 1, 9
={params.maxFragmentSize}, 1, 8
scale-regions, 1, 8
{output.bedpe}, 1, 9
bedClip, 1, 8
plotEnrichment, 1, 8
{params.dirs}, 1, 9
genomes/sizes.genome, 1, 8
tracks/annotation-woGenes.gtf;, 1, 8
tracks/annotation-woGenes.gtf, 1, 8
tracks/annotation.bed, 1, 8
tracks/annotation.bed6;, 1, 8
tracks/annotationScore.bed6;, 1, 8
logs/python_script.log, 1, 8
CreateSequenceDictionary, 1, 8
REFERENCE={input.genome_fa}, 1, 8
OUTPUT={output.dict}, 1, 8
{params.decoys_txt}, 1, 9
{output.gentrome_fa}, 1, 9
kb, 1, 8
{input.genes_gtf}, 1, 9
{params.pref}_/, 1, 9
{output.unsorted}, 1, 9
{output.sorted}, 1, 9
{config[ARRIBA]}, 1, 9
graphmap, 1, 8
scripts/Chunk_dataframe.sh, 1, 8
CPC2/bin/CPC2.py, 1, 8
REPORT=assembly_report.txt, 1, 8
{output.mat}, 1, 9
/dev/null;, 1, 8
{params.input_path}, 1, 9
{params.output_path}, 1, 9
{output.matrix}, 1, 9
{input.pdf}[0], 1, 9
{params.bin}, 1, 9
FrameBot, 1, 8
raxmlHPC, 1, 8
fchromosight, 1, 8
ftail, 1, 8
f-d, 1, 8
{params.mills}, 1, 9
{params.dbsnp}, 1, 9
{params.axiom}, 1, 9
{log.apply_vqsr_snp}, 1, 9
{log.apply_vqsr_indel}, 1, 9
{log.apply_vqsr_select}, 1, 9
10.0, 1, 8
{log.filter}, 1, 9
{log.merge}, 1, 9
gaas_fasta_splitter.pl, 1, 8
transposonPSI.pl, 1, 8
{output.allTopHits}, 1, 9
{output.prot_list}, 1, 9
gaas_fasta_removeSeqFromIDlist.pl, 1, 8
ProtExcluder.pl, 1, 8
{params.minMQ}, 1, 9
{params.multiallelic}, 1, 9
{params.output_type2}, 1, 9
{output.fsnp}, 1, 9
{output.vsnp}, 1, 9
{output.fsnp_vcf_ann}, 1, 9
{output.vsnp_vcf_ann}, 1, 9
{output.indel_vcf_ann}, 1, 9
{output.fsnp_vcf_gz}, 1, 9
{output.vsnp_vcf_gz}, 1, 9
{output.indel_vcf_gz}, 1, 9
{output.fsnp_vcf_merge_ann}, 1, 9
{output.vsnp_vcf_merge_ann}, 1, 9
{output.indel_vcf_merge_ann}, 1, 9
{params.outdir}/tmp.vcf.gz, 1, 9
{params.show_colnames}, 1, 9
tophat2, 1, 8
{params.idx_path}/{basename}, 1, 9
{output.list};, 1, 9
output/surfmorph/labels/participants.tsv, 1, 8
{input.program}, 1, 9
cellranger-atac, 1, 8
src/preprocess_{wildcards.sample}.sh, 1, 8
src/labelpermutation.sh, 1, 8
src/labelpermutation2.sh, 1, 8
src/halpern.sh, 1, 8
src/cabelloaguilar.sh, 1, 8
src/report.sh, 1, 8
src/cellcellsimulate.sh, 1, 8
src/{wildcards.othermethod}.sh, 1, 8
src/plot_tr_eachcci.sh, 1, 8
merged.fna, 1, 8
{output[0]}_save, 1, 9
fgdown, 1, 8
{input.bam_files}, 1, 9
{output.cleaned_counts}, 1, 9
nw_reroot, 1, 8
`, 1, 8
ncov-watch, 1, 8
{params.exec}, 1, 9
SCRIPTDIR, 1, 8
batch={params.batch}, 1, 8
categorie={params.categorie}, 1, 8
aggrcsv={output.aggrcsv}, 1, 8
outfolder={params.outfolder}, 1, 8
normagrr={params.normagrr}, 1, 8
outaggr={params.outaggr}, 1, 8
outputdir={params.outputdir}, 1, 8
${{outputdir}}03_diffexp/clean.txt, 1, 8
{input.raw_r1}, 1, 9
{params.script_path}, 1, 9
{params.primer_pairs}, 1, 9
{output.trimmed_mapped_bam}, 1, 9
breseq, 1, 8
{params.out}.gvcf, 1, 9
{output.variants}, 1, 9
{params.out}.consensus.norm.vcf, 1, 9
{params.out}.$vt.norm.vcf, 1, 9
{params.out}.ambiguous.fasta, 1, 9
{output.consensus}, 1, 9
../../{input.r1}, 1, 8
../../{log}, 1, 8
all_freebayes_genomes.fa, 1, 8
{params.assignment_script_path}, 1, 9
{output.prescored};, 1, 9
{input}.tmp;, 1, 9
{output.prescored}, 1, 9
{output.distr_file}, 1, 9
{output.error_file}, 1, 9
ciftify_clean_img, 1, 8
trimmed, 1, 8
krakefaction, 1, 8
logs/salmon_path, 1, 8
{params.extra_options}, 1, 9
$2, 1, 8
{params.unique_read_limit}, 1, 9
STAR-Fusion, 1, 8
arriba, 1, 8
draw_fusions.R, 1, 8
fusioncatcher, 1, 8
scripts/extract_RGI_fasta.py, 1, 8
{output.fam}, 1, 9
{params.allow_extra_chr}, 1, 9
{params.family_id_flags}, 1, 9
{output.tree}, 1, 9
{wildcards.sample}_readmapping.log, 1, 9
seed.fasta, 1, 8
TMPNME=$set, 1, 8
/dev/urandom, 1, 8
{output.dedup}, 1, 9
{output.reads1_unmerged}, 1, 9
{output.reads2_unmerged}, 1, 9
{output.zip_contigs}, 1, 9
out/assembly/{wildcards.assembler}/{wildcards.sample}/{wildcards.sample}.binning/scaffolds.1000.bam, 1, 8
metabat, 1, 8
rev;, 1, 8
out/assembly/{wildcards.assembler}/{wildcards.sample}/{wildcards.sample}.binning/contigs_10K.fna, 1, 8
{output.cov_tab}, 1, 9
out/assembly/{wildcards.assembler}/{wildcards.sample}/{wildcards.sample}.binning/clustering_merged.csv, 1, 8
minimumsize=50000, 1, 8
actualsize=$wc, 1, 8
{output.metabat}, 1, 9
{output.maxbin}, 1, 9
{output.concoct}, 1, 9
./src/scripts/BUSCO.sh, 1, 8
out/human/{wildcards.sample}/{wildcards.sample}.mito.sai, 1, 8
out/human/{wildcards.sample}/{wildcards.sample}.mito.bam, 1, 8
out/human/{wildcards.sample}/{wildcards.sample}.auto.sai, 1, 8
out/human/{wildcards.sample}/{wildcards.sample}.auto.bam, 1, 8
{output.skglnd_sex}, 1, 9
out/human/{wildcards.sample}/{wildcards.sample}.auto.idxstats, 1, 8
{output.mtnk_sex}, 1, 9
{output.md_bam}, 1, 9
contDeam.pl, 1, 8
schmutzi.pl, 1, 8
/apps/schmutzi/20171024/alleleFreqMT/eurasian/freqs/, 1, 8
log2fasta, 1, 8
callHaplogroups.py, 1, 8
angsd, 1, 8
{output.angsd_R}, 1, 9
{input.angsd_path}/misc/contamination, 1, 9
{output.angsd_conta}, 1, 9
./src/scripts/haplogrep, 1, 8
blast2rma, 1, 8
{output.reads1}, 1, 9
{output.reads2}, 1, 9
out/taxonomic_classifications/metaphlan/{wildcards.sample}/merged_abundance_table.txt, 1, 8
clade, 1, 8
{output.sp_table}, 1, 9
count=$zgrep, 1, 8
merge=$zgrep, 1, 8
dedup=$zgrep, 1, 8
mito=$samtools, 1, 8
auto=$samtools, 1, 8
interproscan.sh, 1, 8
{output.alignment_bam}, 1, 9
{vcfutils}, 1, 9
{output.final_vcf_file}, 1, 9
{params.input_directory}, 1, 9
{output.fwd_rc}, 1, 9
{output.rev_rc}, 1, 9
{params.dirnames}, 1, 9
{params.swarm_in}, 1, 9
{params.dir}/unite, 1, 9
pairtools, 1, 8
{params.uncomp_file}, 1, 9
pairix, 1, 8
refgenome, 1, 8
{output.split_pos}, 1, 9
merger, 1, 8
classifier, 1, 8
lib_embl_symlink=$CONDA_DEFAULT_ENV/share/RepeatMasker/Libraries/RepeatMaskerLib.embl, 1, 8
lib_embl=$pwd/{input.lib_embl}, 1, 8
rmOutToGFF3.pl, 1, 8
maker, 1, 8
BIN_DIR=$CONDA_DEFAULT_ENV/bin, 1, 8
{output.busco_lineages}, 1, 9
{output.infos}, 1, 9
{params.script_reformat}, 1, 9
orthomclAdjustFasta, 1, 8
orthomclFilterFasta, 1, 8
orthomclBlastParser, 1, 8
{output.blast_mysql}, 1, 9
orthomclPairs, 1, 8
orthomclDumpPairsFiles, 1, 8
orthomclMclToGroups, 1, 8
{output.ortholog_groups}, 1, 9
{output.named_groups}, 1, 9
{params.CopyNumberGen}, 1, 9
{output.named_groups_freq}, 1, 9
{params.ExtractSCOs}, 1, 9
{output.sco_list}, 1, 9
{output.sco_groups}, 1, 9
{output.named_sco_groups}, 1, 9
{params.ExtractSeq}, 1, 9
{output.list}, 1, 9
{input.GTF_annotation}, 1, 9
{output.BED_tandem_pas_terminal_exons_clean}, 1, 9
{output.unzipped}, 1, 9
{output.delly_vcf}, 1, 9
/usr/local/bin/manta/bin/configManta.py, 1, 8
{params.manta_run_dir}/runWorkflow.py, 1, 9
{params.manta_run_dir}/results/variants/diploidSV.vcf, 1, 9
{output.manta_vcf}, 1, 9
whamg, 1, 8
{output.whamg_bad_tags}, 1, 9
OLD_HEADER=$bcftools, 1, 8
CONTIGS_HEADER=$grep, 1, 8
ID=, 1, 8
{output.whamg_vcf}, 1, 9
{params.melt_results_dir}/transposon_reference_list, 1, 9
{params.melt_results_dir}/{params.sample}.header.txt, 1, 9
{params.melt_results_dir}/{params.sample}.sva.vcf, 1, 9
{params.melt_results_dir}/{params.sample}.line1.vcf, 1, 9
{params.melt_results_dir}/{params.sample}.alu.vcf, 1, 9
{output.melt_fix_vcf}, 1, 9
vcf_text=$bgzip, 1, 8
{{basename{input.bam_file},, 1, 9
FILEDATE=$grep, 1, 8
{input.melt_fix_vcf}, 1, 9
{output.melt_vcf}, 1, 9
sum=$grep, 1, 8
^ID, 1, 8
{output.merge_species}, 1, 9
kraken-biom, 1, 8
{config[FLASHdir]}/FLASH-1.2.11/flash, 1, 9
{output.final_gtf}, 1, 9
{input.blockbuster_gtf}, 1, 9
{output.or1}, 1, 9
{output.or2}, 1, 9
{output.maxscaf}, 1, 9
scripts/Fasta_to_Scaffolds2Bin.sh, 1, 8
{output.metscaf}, 1, 9
{output.sample}, 1, 9
{output.tmpfile}, 1, 9
script=$realpath, 1, 8
MagicLamp.py, 1, 8
alg_shellnotears, 1, 8
alg_shellrblip_asobs, 1, 8
alg_shellgobnilp, 1, 8
fcurl, 1, 8
regtools, 1, 8
{params.output_prefix_tmp}/{wildcards.sample}.sam, 1, 9
{input.resistome_tool}, 1, 9
{input.rarefaction_tool}, 1, 9
{input.snp_tool}, 1, 9
{output.fasta_reads}, 1, 9
{params.output_folder}/temp_all_reads.fq, 1, 9
resfinder.py, 1, 8
./helper_scripts/download_known_PETases.py, 1, 8
./helper_scripts/run_hmm_search_iteratively.py, 1, 8
focal=$echo, 1, 8
mapping=$echo, 1, 8
$find, 1, 8
GTDBTk.stats, 1, 8
binID=$echo, 1, 8
smetana.all, 1, 8
less, 1, 8
media.txt, 1, 8
ll, 1, 8
media.txt;, 1, 8
sampleMedia.stats, 1, 8
gemID=$echo, 1, 8
id=$echo, 1, 8
roary, 1, 8
create_pan_genome_plots.R, 1, 8
carve, 1, 8
smetana, 1, 8
motus, 1, 8
PLEK, 1, 8
nslices=`fslval, 1, 8
{params.trimgalore_settings}, 1, 9
{params.bwa_index}, 1, 9
sample_array={input.consensus_files}, 1, 8
{params.mask_regions}, 1, 9
{input.aligned_ind_consensus}, 1, 9
{output.masked_consensus}, 1, 9
{output.unaligned_consensus}, 1, 9
sample_array={input.masked_consensus_files}, 1, 8
bam_array={input.sample_bams}, 1, 8
newName=$echo, 1, 8
/{{print, 1, 8
newName;}}, 1, 8
{params.climb_dir}/$newName/$newName.fa, 1, 9
30nt,, 1, 8
{output.sum_stats};, 1, 9
sample_array={input.all_stats}, 1, 8
sample_array={input.all_amp_cov}, 1, 8
amp_dep_array={input.amp_dep_plots}, 1, 8
cov_array={input.cov_plots}, 1, 8
all_plots=${{amp_dep_array[@]}}, 1, 8
{input.aligned_consensus}, 1, 9
{output.ambig_nucs}, 1, 9
{output.N_counts}, 1, 9
demixed_array={input.all_demixed}, 1, 8
{input.variants}, 1, 9
{input.depth}, 1, 9
{params.amp_dep_script}, 1, 9
{params.PE_primer}, 1, 9
{output.amp_dep}, 1, 9
{params.stats_script}, 1, 9
bcl-convert, 1, 8
prinseq++, 1, 8
{input.prin_trim1}, 1, 9
{input.prin_trim2}, 1, 9
{input.ivar_trimmed}, 1, 9
{input.ivar_bam}, 1, 9
evaluate, 1, 8
{output.insert_fastq}, 1, 9
{output.masked_fasta}, 1, 9
{input.calls}, 1, 9
{output.out_calls}, 1, 9
ts, 1, 8
{output.vcflist}, 1, 9
NR==2, 1, 8
{output.thrs}, 1, 9
{output.out_list}, 1, 9
AF=1, 1, 8
results/{wildcards.file}.out.vcf.gz, 1, 8
slim, 1, 8
$_$_, 1, 8
,++$j,\, 1, 8
{output.bk_barcode}, 1, 9
/;print, 1, 8
={params.num}, 1, 8
/{{$id=$_}}else{{@t=split/_/,$id;$s=$_;$d=$t[5];if, 1, 8
/;$_=substr$_,1;@t=split/_/;$d=$t[1]+$L-$t[1]%$L;print, 1, 8
{input.sim}.bed, 1, 9
{input.sim}.fa, 1, 9
{output.barcode}, 1, 9
{params.cutoff}, 1, 9
DB=`echo, 1, 8
last-train, 1, 8
last-split, 1, 8
{params.init_translation}, 1, 9
MultiplyImages, 1, 8
AverageAffineTransformNoRigid, 1, 8
fbowtie2-build, 1, 8
jellyfish, 1, 8
fbowtie2, 1, 8
sam2pairwise, 1, 8
{output.letters}, 1, 9
{output.numbers}, 1, 9
$each;, 1, 8
{input.lineage}, 1, 9
{output.map_stat}, 1, 9
{input.bam_idx}, 1, 9
extract_kraken_reads.py, 1, 8
{output.classified_summaries}, 1, 9
{output.concat_tbl}, 1, 9
{output.fastq1gz}, 1, 9
{output.fastq2gz}, 1, 9
{output.concat_reads}, 1, 9
humann3, 1, 8
../results/megahit_assm/{wildcards.sample}_assm/, 1, 8
{input.megahit_out}, 1, 9
TextExporter, 1, 8
FeatureFinderMetaboIdent, 1, 8
MetaboliteSpectralMatcher, 1, 8
FeatureFinderMetabo, 1, 8
{log.general}, 1, 9
MapAlignerPoseClustering, 1, 8
{log.job}, 1, 9
MapRTTransformer, 1, 8
polca.sh, 1, 8
smoove, 1, 8
{workflow.basedir}/atlas-analysis/calculate_percentile_ranks.R, 1, 9
percentile_ranks=, 1, 8
{workflow.basedir}/atlas-analysis/merge_by_gene_id.R, 1, 9
generate_differential_tracks, 1, 8
annotationFile=$find_properties_file_gsea, 1, 8
pvalColNum=$get_contrast_colnum, 1, 8
log2foldchangeColNum=$get_contrast_colnum, 1, 8
plotTitle=, 1, 8
Top, 1, 8
{params.contrast_label}, 1, 9
Fisher-exact,, 1, 8
0.1, 1, 8
{workflow.basedir}/bin/gxa_calculate_gsea.sh, 1, 9
generate_baseline_tracks, 1, 8
{workflow.basedir}/atlas-analysis/run_coexpression_for_experiment.R, 1, 9
{workflow.basedir}/atlas-analysis/generateBaselineHeatmap.R, 1, 9
{workflow.basedir}/atlas-analysis/atlasExperimentInR/createAtlasExperimentSummary.R, 1, 9
metrictype=tpm, 1, 8
metrictype=fpkm, 1, 8
{workflow.basedir}/atlas-analysis/qc/rnaseqQC.sh, 1, 9
{input.qn_expression}, 1, 9
{output.sum_expression}, 1, 9
{workflow.basedir}/atlas-analysis/transcripts_expr_values_check.R, 1, 9
{params.qn_transcripts}, 1, 9
{params.agg_transcripts}, 1, 9
deseq2version=none, 1, 8
transcriptFile=$, 1, 8
decoratedFile={params.decotranscripts}, 1, 8
deseq2version=`cat, 1, 8
{workflow.basedir}/atlas-analysis/arrays/arrayQC.sh, 1, 9
target=, 1, 8
arrayDataType=$perl, 1, 8
target=../../affymetrix-differential-analytics-methods.tsv, 1, 8
target=../../onecolour-microarray-differential-analytics-methods.tsv, 1, 8
target=../../twocolour-microarray-differential-analytics-methods.tsv, 1, 8
target=../../onecolour-mirna-microarray-differential-analytics-methods.tsv, 1, 8
target=../../twocolour-mirna-microarray-differential-analytics-methods.tsv, 1, 8
decorate_if_exists_norm, 1, 8
{workflow.basedir}/atlas-analysis/arrays/highestMeanProbeIdsPerGene.R, 1, 9
{workflow.basedir}/atlas-analysis/differential/check_na_pvals.R, 1, 9
copy_experiment_from_analysis_to_atlas_exps, 1, 8
get_magetab_for_experiment, 1, 8
rename_files_baseline, 1, 8
{workflow.basedir}/proteomics-import/bin/removeGeneNamesInDataMatrix.R, 1, 9
{wildcards.accession}.tsv.undecorated, 1, 9
{wildcards.accession}.tsv.undecorated.aggregated, 1, 9
{workflow.basedir}/proteomics-import/bin/appendColnamesInDataMatrix.R, 1, 9
rename_files_differential, 1, 8
{params.ref_rsem}.g2t, 1, 9
{RSEM_prepare}, 1, 9
{script_path}/replace_chromosome_name_for_TAIR10, 1, 9
{script_path}/gen_mouse_remove_list, 1, 9
{log.align}, 1, 9
FACTOR=$samtools, 1, 8
{output.reducedBam}, 1, 9
results/vcfs/sampleVCF.{wildcards.chrom}.list, 1, 8
workflow/scripts/GLIMPSE/static_bins/GLIMPSE_chunk_static, 1, 8
workflow/scripts/glimpsePhaseLigate.sh, 1, 8
workflow/scripts/GLIMPSE/static_bins/GLIMPSE_sample_static, 1, 8
log/{wildcards.sample}_ccs.err, 1, 8
log/{wildcards.sample}_cluter.err, 1, 8
log/{wildcards.sample}_collapsed.err, 1, 8
log/{wildcards.sample}_fastq_tofasta2.err, 1, 8
log/{wildcards.sample}_count.err, 1, 8
log/{wildcards.sample}_filter.err, 1, 8
log/{wildcards.sample}_fastq_tofasta3.err, 1, 8
log/{wildcards.sample}_sqanti_r2.err, 1, 8
log/{wildcards.sample}_sort2.err, 1, 8
log/{wildcards.sample}_sqanti_r2_filter.err, 1, 8
log/merge_ccs.err, 1, 8
log/merge_subread.err, 1, 8
log/cluter.err, 1, 8
log/polish.err, 1, 8
log/gunzip.err, 1, 8
log/gunzip2.err, 1, 8
log/cluter_report.err, 1, 8
log/collapsed.err, 1, 8
log/fastq_tofasta2.err, 1, 8
log/count.err, 1, 8
log/filter.err, 1, 8
log/fastq_tofasta3.err, 1, 8
log/sqanti_r2.err, 1, 8
log/sort2.err, 1, 8
log/kallisto_index.err, 1, 8
{output.qua_fa}, 1, 9
{output.hmm_id}, 1, 9
family_interproscan={input.family_interproscan}, 1, 8
interproscan_id={output.interproscan_id}, 1, 8
${{interproscan_id}}, 1, 8
{output.gene_id}, 1, 9
{output.gene_pep}, 1, 9
./paircoil2, 1, 8
{output.cc_fa}, 1, 9
{run}log/{wildcards.sample}_count_matrix.err, 1, 9
log/{wildcards.sample}_link_bam.err, 1, 8
log/{wildcards.sample}_link_bai.err, 1, 8
log/{wildcards.sample}_link_loup.err, 1, 8
log/{wildcards.sample}_link_summary.err, 1, 8
log/{wildcards.sample}_link_count.err, 1, 8
{run}log/{wildcards.sample}_diem.err, 1, 9
log/{wildcards.sample}_link_reanalysis_summary.err, 1, 8
log/{wildcards.sample}_link_reanalysis_loup.err, 1, 8
{output.temp_dir}/{wildcards.sample}.alignment.sam, 1, 9
{output.temp_dir}/{wildcards.sample}.unsorted.unmapped.bam, 1, 9
{output.temp_dir}/{wildcards.sample}.unsorted.mapped.bam, 1, 9
{output.temp_dir}/{wildcards.sample}.R1.trimmed.host.fastq.gz, 1, 9
{output.temp_dir}/{wildcards.sample}.R2.trimmed.host.fastq.gz, 1, 9
{output.filtered_R1}, 1, 9
{output.filtered_R2}, 1, 9
{output.host_R1}, 1, 9
{output.host_R2}, 1, 9
tsv-filter, 1, 8
tsv-select, 1, 8
{output.include_strains}, 1, 9
{params.group_by}, 1, 9
{params.sequences_per_group}, 1, 9
{params.other_filters}, 1, 9
{params.clock_rate}, 1, 9
{params.clock_std_dev}, 1, 9
./bin/notify-on-record-change, 1, 8
./bin/notify-on-diff, 1, 8
./bin/fetch-from-genbank, 1, 8
{output.genbank_ndjson}, 1, 9
{output.sequences_ndjson}, 1, 9
xz, 1, 8
nextstrain, 1, 8
./bin/notify-on-deploy, 1, 8
{output.general_geolocation_rules}, 1, 9
{output.all_geolocation_rules}, 1, 9
./bin/transform-field-names, 1, 8
./bin/transform-strain-names, 1, 8
./bin/transform-date-fields, 1, 8
./bin/transform-genbank-location, 1, 8
./bin/transform-authors, 1, 8
./bin/apply-geolocation-rules, 1, 8
./bin/merge-user-metadata, 1, 8
./bin/ndjson-to-tsv-and-fasta, 1, 8
sciphi, 1, 8
{input.mpileup}, 1, 9
monovar, 1, 8
{params.normals}, 1, 9
{params.sample_dropouts}, 1, 9
control.txt, 1, 8
=3, 1, 8
{{ifNF==10&&substr$1,0,6!=#CHROM{{$8=.;$9=GT;$10=0/1}}}}1, 1, 9
{input.filt_end1}, 1, 9
{input.asv}, 1, 9
{output.seqtab_filt}, 1, 9
{output.plot_seqlength}, 1, 9
{input.seqtab}, 1, 9
{output.filt}, 1, 9
{output.merg}, 1, 9
{output.nreads}, 1, 9
{input.filt}, 1, 9
{output.standard}, 1, 9
{output.taxa}, 1, 9
usearch, 1, 8
clipping_profile.py, 1, 8
pbrun, 1, 8
rgzip, 1, 8
NUMBERBATCH_PATH=, 1, 8
{input.evkd1}, 1, 9
pjoinIRTNN,, 1, 8
{params.pred_mean}, 1, 9
{input.pred_irt}, 1, 9
factor=$tail, 1, 8
{output.normalizedBAM}, 1, 9
get.seqsaccnos={input.accnos},, 1, 8
get.seqsaccnos=current,, 1, 8
get.distsaccnos=current,, 1, 8
clustercolumn={input.dist},, 1, 8
cluster.fitreflist={input.reflist},, 1, 8
run-bwamem, 1, 8
{params.samples}, 1, 9
{params.samplename}, 1, 9
{params.revcomp_i5}, 1, 9
{params.revcomp_i7}, 1, 9
fname=${{R1%.R1.fastq}}, 1, 8
R2=$fname.R2.fastq, 1, 8
{output}/$i/$fname.bam, 1, 9
fname=${{bam%.bam}}, 1, 8
sinto, 1, 8
{output}/$i/$fname.tsv, 1, 9
scripts/trim_bcs.sh, 1, 8
run_busco, 1, 8
qc/busco;, 1, 8
samclip, 1, 8
slide_to_ometiff, 1, 8
slide_to_thumbnail, 1, 8
{input.pvogs_all_profiles}, 1, 9
{input.transeq_genomes}, 1, 9
{params.genomes_dir}, 1, 9
{input.query_genes_faa}, 1, 9
{params.aai_dir}, 1, 9
{output.filtered_master_tsv}, 1, 9
{output.ncbi_positives_tsv}, 1, 9
{input.all_pvogs_profiles}, 1, 9
{input.proteins_fasta}, 1, 9
{output.total_depth}, 1, 9
{output.amplicon_depth}, 1, 9
{output.mapping_summary}, 1, 9
{output.sample_mean_depth}, 1, 9
scripts/unique_variants.R, 1, 8
{input.readouts}, 1, 9
\t-V, 1, 8
\t{params.extra}, 1, 8
{params.covizu_tree}, 1, 9
{params.description}, 1, 9
{params.variants}, 1, 9
{params.temporally_even}, 1, 9
REFERENCE={input}, 1, 8
ConvertToRefFlat, 1, 8
SEQUENCE_DICTIONARY={input.seq_dict}, 1, 8
FASTQ={input.fastq1}, 1, 8
FASTQ2={input.fastq2}, 1, 8
SAMPLE_NAME={wildcards.sample}, 1, 8
DISCARD_READ=false, 1, 8
TAG_NAME=XC, 1, 8
DISCARD_READ=true, 1, 8
TAG_NAME=XM, 1, 8
FilterBAM, 1, 8
TAG_REJECT=XQ, 1, 8
TrimStartingSequence, 1, 8
SEQUENCE={params.adapter_sequence}, 1, 8
PolyATrimmer, 1, 8
FASTQ={output}, 1, 8
ALIGNED_BAM={input.aligned}, 1, 8
UNMAPPED_BAM={input.unaligned}, 1, 8
REFERENCE_SEQUENCE={input.reference}, 1, 8
INCLUDE_SECONDARY_ALIGNMENTS=false, 1, 8
PAIRED_RUN=false, 1, 8
TagReadWithGeneExon, 1, 8
TAG=GE, 1, 8
GatherMolecularBarcodeDistributionByGene, 1, 8
NUM_CORE_BARCODES={params.ncells}, 1, 8
EDIT_DISTANCE={params.edit_distance}, 1, 8
READ_MQ={params.read_mq}, 1, 8
MIN_BC_READ_THRESHOLD={params.min_umi_reads}, 1, 8
RARE_UMI_FILTER_THRESHOLD={params.rare_umi_filter}, 1, 8
shell:rm, 1, 8
{output.out1}, 1, 9
{output.nanoout}.log, 1, 9
{output.fastaout};, 1, 9
erp, 1, 8
erp_properties, 1, 8
dspm, 1, 8
lcmv, 1, 8
OptiTypePipeline.py, 1, 8
{params.sample_type}, 1, 9
hicup, 1, 8
bam2pairs, 1, 8
merge-pairs.sh, 1, 8
{output.fwd}, 1, 9
ILLUMINACLIP:{params.trim_dir}/adapters/TruSeq3-PE-2.fa:2:{params.minqual}:10:3:true, 1, 8
{params.prefix}.sam, 1, 9
config[PROJECT]+, 1, 8
MAXINFO:{config[trimmomatic][MAXINFO]}, 1, 8
{config[trimmomatic][extra_params]}, 1, 9
{input.p1}, 1, 9
{input.u1}, 1, 9
{log.f1};, 1, 9
{input.u2}, 1, 9
{log.f2}, 1, 9
{input.FiltF}, 1, 9
config[DATABASE][name]+/+config[DATABASE][name], 1, 8
{output.o2};, 1, 9
{config[BLAST][database]}, 1, 9
p__, 1, 8
c__, 1, 8
o__, 1, 8
f__, 1, 8
g__, 1, 8
s__, 1, 8
column, 1, 8
results/{wildcards.PROJECT}/runs/{wildcards.RUN}/05-dwca/, 1, 8
{input.f2}, 1, 9
{config[meta][sampling][sample_data_file]}, 1, 9
{config[meta][sequencing][target_gene]}, 1, 9
{config[meta][sequencing][subfragment]}, 1, 9
{config[meta][sequencing][pcr_primer_forward]}, 1, 9
{config[meta][sequencing][pcr_primer_reverse]}, 1, 9
{config[meta][sequencing][pcr_primer_name_forw]}, 1, 9
{config[meta][sequencing][pcr_primer_name_reverse]}, 1, 9
{config[meta][sequencing][pcr_primer_reference]}, 1, 9
{config[meta][sequencing][lib_layout]}, 1, 9
{config[meta][sequencing][seq_meth]}, 1, 9
{config[meta][sequencing][sop]}, 1, 9
{config[DATABASE][name]}, 1, 9
{config[meta][sequencing][extra_fields]}, 1, 9
anvi-gen-contigs-database, 1, 8
anvi-profile, 1, 8
anvi-merge, 1, 8
anvi-import-collection, 1, 8
anvi-interactive, 1, 8
\t./scripts/trim_reads.sh, 1, 8
filename=$basename, 1, 8
sample_name=${{filename/.fastq}}, 1, 8
{output.read_index}, 1, 9
novoalign, 1, 8
novoalign-license-register, 1, 8
{params.sep}, 1, 9
prepare_counts-rna.r, 1, 8
find_imbalance-rna.r, 1, 8
{input.rna}, 1, 9
prepare_counts.r, 1, 8
find_imbalance.r, 1, 8
{input.dna}, 1, 9
0&&F2R1[0:1], 1, 8
9&&$4, 1, 8
9, 1, 8
2&&F2R1[0:1], 1, 8
daa={output.daa}, 1, 8
vcf-consensus, 1, 8
{input.vcf}_filteredAF.vcf, 1, 9
reg_aladin, 1, 8
c3d_affine_tool, 1, 8
N4BiasFieldCorrection, 1, 8
{params.init_transform}, 1, 9
scripts_dir+/center_and_widen.py, 1, 8
{wildcards.concat_chr}, 1, 9
scripts_dir+/center_and_widen_bed.py, 1, 8
{output.wider}, 1, 9
$awk, 1, 8
{wildcards.pval}, 1, 9
{output.pwm}, 1, 9
scanMotifGenomeWide.pl, 1, 8
{output.all_motifs}, 1, 9
scripts_dir+/fix_bed.bash, 1, 8
scripts_dir+/statistics.py, 1, 8
{params.thresh};}}, 1, 9
scripts_dir+/metrics.py, 1, 8
tac, 1, 8
TMP_DIR=./tmp, 1, 8
log/ping12.err, 1, 8
log/ping3.err, 1, 8
{params.strand}, 1, 9
{params.fqs}, 1, 9
overlap={config[cut_overlap]}, 1, 8
chunk={config[cut_size]}, 1, 8
bigchunk=$echo, 1, 8
smalloverlap=$echo, 1, 8
n_batch=$ls, 1, 8
error.txt, 1, 8
{wdir}/structure/cluster.tmp, 1, 9
{wdirpop}/subsetpop, 1, 9
dist=$echo, 1, 8
individuals=$cat, 1, 8
N0=$, 1, 8
coal_sizes=$, 1, 8
lengthtemp+1;, 1, 8
coal_sizes=${{coal_sizes%?}}, 1, 8
coal_sizes=$N0,$coal_sizes, 1, 8
coal_times=$, 1, 8
n=$zcat, 1, 8
n=$2*$n, 1, 8
nsim={config[ldhot.nsim]}, 1, 8
bammarkduplicates, 1, 8
{output.bam_header}, 1, 9
{output.bam_C1}, 1, 9
{output.bam_C2}, 1, 9
{output.bam_W1}, 1, 9
{output.bam_W2}, 1, 9
invest, 1, 8
{params.threshold},0,1, 1, 9
gdal_proximity.py, 1, 8
=350,350,{params.slope_length}, 1, 8
{input.R1}2;, 1, 9
{input.R2}2;, 1, 9
{params.sample_option}, 1, 9
{params.runtime_options}, 1, 9
{output.bai}, 1, 9
isONclust2, 1, 8
basename, 1, 8
{output.temp_dir}/{wildcards.sample}.fastq.gz, 1, 9
humann, 1, 8
{params.humann3}, 1, 9
pdftoppm, 1, 8
ppx, 1, 8
taxonomy:559292, 1, 8
&format=fasta, 1, 8
thermorawfileparser, 1, 8
comet, 1, 8
{params.bwa}, 1, 9
sample_sex={params.sample_sex}, 1, 8
current_chr={params.current_chr}, 1, 8
chr_mode={params.chr_mode}, 1, 8
54.69, 1, 8
{config[usearch_path]}, 1, 9
{output.draft}, 1, 9
./medaka_polish.sh, 1, 8
{output.cat}, 1, 9
pgap.py, 1, 8
{results_dir}/snippy_multi/{wildcards.reads_origin}/mask.bed;, 1, 9
{output.cov_full};, 1, 9
{output.dep_full};, 1, 9
loci=`cut, 1, 8
{output.cov_df}, 1, 9
{output.cov_df};, 1, 9
{output.dep_df}, 1, 9
{output.dep_df};, 1, 9
{scripts_dir}/dnds.sh, 1, 9
header=`grep, 1, 8
locus_sites=`grep, 1, 8
snpsift=`ls, 1, 8
{output.tstv}.raw;, 1, 9
{scripts_dir}/vcf_tstv.sh, 1, 9
{output.tstv}, 1, 9
{scripts_dir}/heterozygosity.sh, 1, 9
header=samplettstv;, 1, 8
tstv_file=$file;, 1, 8
sample=`head, 1, 8
dnds_file=`echo, 1, 8
het_file=`echo, 1, 8
line=`head, 1, 8
lines=`cut, 1, 8
constraints=`wc, 1, 8
num_dates=`expr, 1, 8
{output.dates}, 1, 9
outgroups=`echo, 1, 8
{output.latlon};, 1, 9
{scripts_dir}/locus_bed.sh, 1, 9
./make-acc-taxid-mapping.py, 1, 8
INPUT={input.bam_files}, 1, 8
OUTPUT={output.sorted_bam_files}, 1, 8
INPUT={input.sorted_bam_files}, 1, 8
FASTQ={output.fq1}, 1, 8
SECOND_END_FASTQ={output.fq2}, 1, 8
{output.plot}, 1, 9
{params.rough_co}, 1, 9
{input.rough_co_breaks}, 1, 9
{input.breaks_refined_corrected}, 1, 9
{input.frequencies}, 1, 9
{input.sliding_window_breaks}, 1, 9
{params.tiger_scripts_dir}/plot_genotyping.R, 1, 9
SAMPLE=$basename, 1, 8
{output.breaks_summary}, 1, 9
workflow/scripts/map_to_reference.sh, 1, 8
a_snp_count=$cat, 1, 8
b_snp_count=$cat, 1, 8
parent_src_vcf={params.parent_a_vcf}, 1, 8
parent_ref_vcf={params.parent_b_vcf}, 1, 8
{output.bgzip_parent_ref_vcf}, 1, 9
{output.bgzip_parent_src_vcf}, 1, 9
SRC_PARENT=$cat, 1, 8
INPUTARGS=$echo, 1, 8
$INPUTARGS, 1, 8
{output.filter_file}, 1, 9
montage, 1, 8
file, 1, 8
./{input.bigBedToBed}, 1, 8
trimal, 1, 8
{log.chromhmm_binarize}, 1, 9
{log.chromhmm_learn}, 1, 9
shell:cat, 1, 8
shell:scripts/pipeline2.0/MIPstats.py, 1, 8
vase_reporter, 1, 8
SNPsplit, 1, 8
{output.dag}, 1, 9
{params.bt2b_command}, 1, 9
{params.bt2_command}, 1, 9
{output.contigs_10K}, 1, 9
{input.original_contigs}, 1, 9
{input.clustering_merged}, 1, 9
HRIBO/scripts/riborex.R, 1, 8
HRIBO/scripts/xtail_classic.R, 1, 8
HRIBO/scripts/prepare_deltate_input.py, 1, 8
DTEG.R, 1, 8
cnvnator2VCF.pl, 1, 8
scripts/SrrMunch2.sh, 1, 8
scripts/import-paired.sh, 1, 8
scripts/join_pairs.sh, 1, 8
scripts/derep.sh, 1, 8
scripts/de-novo.sh, 1, 8
scripts/q2_export.sh, 1, 8
scripts/split_scATAC_bam_by_cluster.py, 1, 8
01split_bam/{wildcards.sample}/{wildcards.sample}_{wildcards.cluster_id}.bam, 1, 8
mtxs=, 1, 8
mtxs+=, 1, 8
csvs=, 1, 8
csvs+=, 1, 8
{params.sample_name}.m6aList.sorted.bed, 1, 9
parallel-fastq-dump, 1, 8
workflow/scripts/concat_fasta.py, 1, 8
mpirun, 1, 8
prank, 1, 8
{params.iqtree_path}/iqtree, 1, 9
workflow/scripts/CDs_from_MetaEuk.py, 1, 8
rnanorm, 1, 8
xargs;, 1, 8
docker-compose, 1, 8
SECONDS=0, 1, 8
duration=$SECONDS, 1, 8
{NEO4J_IMPORTDIR}/{NODEDIR}/created.txt, 1, 9
d={NEO4J_IMPORTDIR}/{NODEDIR}/{params.meta_id}, 1, 8
{NEO4J_IMPORTDIR}/{RELDIR}/created.txt, 1, 9
d={NEO4J_IMPORTDIR}/{RELDIR}/{params.meta_id}, 1, 8
ENDL, 1, 8
REViewer, 1, 8
gene_list={input.path_gene_list}, 1, 8
use_list={params[0]}, 1, 8
{output.matched_genes}, 1, 9
{output.unmatched_genes}, 1, 9
{output.matched_genes_codes}, 1, 9
{output.custom_temp}, 1, 9
{output.custom_sorted}, 1, 9
{output.custom_bed}, 1, 9
alignment={params[1]}, 1, 8
variantcalling={params[3]}, 1, 8
SV={params[4]}, 1, 8
MEI={params[5]}, 1, 8
STR={params[6]}, 1, 8
genotype={params[7]}, 1, 8
expansion={params[8]}, 1, 8
debug={params[9]}, 1, 8
$MEI, 1, 8
$STR, 1, 8
$genotypeSTR, 1, 8
$expansion, 1, 8
{output.bam_file}, 1, 9
{config[EXPANSIONHUNTERDENOVO_DIR]}bin/ExpansionHunterDenovo, 1, 9
{output.genotypeSTR_input}, 1, 9
format={params[1]}, 1, 8
paired={params[0]}, 1, 8
use_bed={params[1]}, 1, 8
debug={params[3]}, 1, 8
exome={params[0]}, 1, 8
debug={params[4]}, 1, 8
{params.SV_vcf}, 1, 9
{params.MEI_vcf}, 1, 9
{params.out_dir}{params.sample}survivor_sample_files, 1, 9
{output.merged_SV_MEI}, 1, 9
virus={params[0]}, 1, 8
bacteria={params[1]}, 1, 8
microbes={params[2]}, 1, 8
$bacteria, 1, 8
$microbes, 1, 8
virus={params[0], 1, 8
{output.virus_stats}, 1, 9
bacteria={params[0]}, 1, 8
{output.bacteria_stats}, 1, 9
microbes={params[0]}, 1, 8
{output.microbes_stats}, 1, 9
{output.vcfstats}, 1, 9
$sequencing_report, 1, 8
$calls_report, 1, 8
MEI={params[0]}, 1, 8
variantcalling={params[2]}, 1, 8
STR={params[3]}, 1, 8
genotype={params[4]}, 1, 8
SV={params[5]}, 1, 8
MEI={params[6]}, 1, 8
alsgenescanner={params[1]}, 1, 8
{output.reftxfa}, 1, 9
{output.refgtf}, 1, 9
/tmp/gencodePA_tmp.fa, 1, 8
/tmp/gencodeProtSeq.fa, 1, 8
{output.gencode_gff}, 1, 9
{output.ensbl_gtf}, 1, 9
{output.refseq}, 1, 9
genePredToGtf, 1, 8
ref/gencode_comp_ano_trim.tsv, 1, 8
ref/polyAtlas_gencodechrom_hg38_sorted.bed, 1, 8
ref/hg19_gencode_genome.fa, 1, 8
crossmap, 1, 8
{output.hg19_vcf}, 1, 9
{ref_genome}, 1, 9
{output.hg38_vcf}, 1, 9
bigWigToWig, 1, 8
wig2bed, 1, 8
{output.pp}, 1, 9
snp_tmp/snps.bed, 1, 8
snp_tmp/good_snps.bed, 1, 8
sort-bed, 1, 8
ref/snps/hg38.snps.all.sorted.bed.gz, 1, 8
id={wildcards.id}, 1, 8
sample={wildcards.id}, 1, 8
./util/gtf_genome_to_cdna_fasta.pl, 1, 8
./util/gtf_to_alignment_gff3.pl, 1, 8
./util/cdna_alignment_orf_to_genome_orf.pl, 1, 8
transcripts.fasta.transdecoder.gff3, 1, 8
../data/seqs/transdecoder_results/all_tissues.combined_transdecoderCDS.gff3, 1, 8
agat_sp_add_start_and_stop.pl, 1, 8
id={wildcards.sampleID}, 1, 8
{output.swissprot_results}, 1, 9
{output.nr_results}, 1, 9
stem=${{gtf::-4}}, 1, 8
fasta=${{stem}}.fa, 1, 8
f.properties.DESIG_ENG, 1, 8
{input.class40}, 1, 9
{input.class50}, 1, 9
qc2tsv, 1, 8
croo, 1, 8
gappa, 1, 8
{input.fqs[0]}, 1, 9
{log.bwa_mem_stderr}, 1, 9
{log.samtools_stderr}, 1, 9
{output.filtered_fasta}, 1, 9
{output.contigs_bed}, 1, 9
{output.contig_counts}, 1, 9
{params.cat_exe}, 1, 9
{data_dir}/counts, 1, 9
{data_dir}/indexed-tweets, 1, 9
{data_dir}/plots, 1, 9
bcbio-variation-recall, 1, 8
{wildcards.mat_type}-{wildcards.atlas_type},, 1, 9
quit;;, 1, 8
{wildcards.mat_type}_fixed_hrf_{wildcards.input_mat}-{wildcards.atlas_type},, 1, 9
{input.opts_json},, 1, 9
{params.stim_type}, 1, 9
{params.benson_names}, 1, 9
{wildcards.plot_name}, 1, 9
{params.hue}, 1, 9
tmp_sicer=$mktemp, 1, 8
$pwd, 1, 8
{params.fragment}, 1, 9
{wildcards.gap}, 1, 9
{params.control_arg}, 1, 9
rsync://hgdownload.cse.ucsc.edu/goldenPath/{config[genome]}/chromosomes/, 1, 8
{output}.filtered, 1, 9
{params.macs2_params}, 1, 9
{output.watsonVCF}, 1, 9
{output.crickVCF}, 1, 9
{output.filtered_fastq}, 1, 9
GraphAligner, 1, 8
{input.filtered_fastq}, 1, 9
{input.SMN_list}, 1, 9
{output.SMN_fastq}, 1, 9
{params.reference}, 1, 9
{input.SMN_fastq}, 1, 9
NanoCaller, 1, 8
tools/DeepVirFinder/dvf.py, 1, 8
0.9, 1, 8
0.01print$1}}, 1, 8
{params.contigs}, 1, 9
tools/select_seqs_by_IDs.py, 1, 8
VIBRANT_run.py, 1, 8
checkv, 1, 8
scripts/gtdbtk-to-lineages-csv.py, 1, 8
scripts/find-oddities.py, 1, 8
scripts/find-oddities-examine.py, 1, 8
{params.input_vcf_string}, 1, 9
{params.input_stat_string}, 1, 9
{params.seg_string}, 1, 9
{params.contam_string}, 1, 9
metaphlan2.py, 1, 8
{input.AnnotSV}/bin/AnnotSV, 1, 9
{output.reads}, 1, 9
{output.genome_transcriptome}, 1, 9
gtf2bed12, 1, 8
calculate-tin.py, 1, 8
{output.TIN_score};, 1, 9
{params.results_dir}, 1, 9
{params.log_dir};, 1, 9
{output.sorted_bg};, 1, 9
{input.sorted_bg}, 1, 9
{output.bigWig};, 1, 9
{input.map_file}, 1, 9
{output.sam_out}, 1, 9
{params.outfile}_R1.fastq, 1, 9
{params.outfile}_R2.fastq, 1, 9
{output.mb1}, 1, 9
{output.mb5}, 1, 9
autos_bfilt/tmp_header.bed, 1, 8
chrX, 1, 8
chrY, 1, 8
autos_bfilt/tmp_1.bed, 1, 8
intersectBed, 1, 8
autos_bfilt/tmp_2.bed, 1, 8
autos_bfilt/tmp_3.bed, 1, 8
{params.scr_dir}/workflow/dependencies/MeDEStrand, 1, 9
{params.bsgenome}, 1, 9
motevo, 1, 8
{params.FASTA_MotEvo_input_abspath}, 1, 9
{params.TXT_MotEvo_parameters_abspath}, 1, 9
{input.DIR_pwm}, 1, 9
http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2/, 1, 8
matUtils, 1, 8
bbmerge.sh, 1, 8
ecctadpole=t, 1, 8
prefilter=10, 1, 8
loose=t, 1, 8
{params.adapters}, 1, 9
outu={output.R1}, 1, 8
refstats={output.stats}, 1, 8
maxindel={params.maxindel}, 1, 8
minhits={params.minhits}, 1, 8
local=t, 1, 8
readlength.sh, 1, 8
{output.db}, 1, 9
{output.hits}, 1, 9
kaiju, 1, 8
addTaxonNames, 1, 8
{input.kaiju}, 1, 9
gene_catalog/diamond/*.tsv, 1, 8
{input.ec_file}, 1, 9
{CONDAENV}, 1, 9
{output.sam_files}, 1, 9
get_SJs_from_gtf, 1, 8
TranscriptClean, 1, 8
talon_initialize_database, 1, 8
talon, 1, 8
talon_filter_transcripts, 1, 8
talon_abundance, 1, 8
talon_create_GTF, 1, 8
{params.scriptpath}, 1, 9
{output.bed12}, 1, 9
{output.bed_concatenated}, 1, 9
declare, 1, 8
numb=$awk, 1, 8
${{line}};, 1, 8
calc+=$${{numb}};, 1, 8
words=$echo, 1, 8
avg_len=$${{calc}}, 1, 8
prepDE.py, 1, 8
sqanti3_qc.py, 1, 8
{input.gtf_input}, 1, 9
{input.annotation}, 1, 9
{params.nanoplot_dir}, 1, 9
{params.samtools_subread_dir}, 1, 9
scripts/tolca.py, 1, 8
spingo, 1, 8
queryf=$basename, 1, 8
alnf=$basename, 1, 8
processors={threads},, 1, 8
{output.dir}/mothur.cmd, 1, 9
{output.dir}/{params.file}, 1, 9
scripts/toconsensus.py, 1, 8
gs://genetics-portal-raw/uk_biobank_sumstats/neale_v2/output/neale_v2_sumstats/*.neale2.gwas.imputed_v3.both_sexes.tsv.gz, 1, 8
gs://{params.output_dir}/, 1, 8
tools/map2ref.sh, 1, 8
tools/parse_bwa-cov.py, 1, 8
tools/parse_bwa-expcov.py, 1, 8
tools/parse_bwa-counts.py, 1, 8
config[canu_args], 1, 8
genomeSize={wildcards.genome_size}, 1, 8
useGrid={grid}, 1, 8
opts, 1, 8
merge_wrapper.py, 1, 8
{params.min_contig_size}, 1, 9
polya_database=--polya_db, 1, 8
outfile=--outfileNamePrefix, 1, 8
breakpoints=--breakpoints, 1, 8
outfile=--outfileName, 1, 8
featurecounts=--table, 1, 8
samplesheet=--samplesheet, 1, 8
annotation=--gtf, 1, 8
dexseq=--dexseq.table, 1, 8
width_min={params.width_min},, 1, 8
options=, 1, 8
ddrage, 1, 8
\t--maxSpan, 1, 8
{output.samgzAligned}, 1, 9
ALIGNED_COUNT=$zcat, 1, 8
UNALIGNED_COUNT=$cat, 1, 8
UNALIGNED_COUNT=$, 1, 8
{output.count}, 1, 9
{params.downsample}, 1, 9
indir={input.demux_dir}/pass/{params.barcode_dir}, 1, 8
indir={input.demux_dir}/{params.barcode_dir}, 1, 8
fasterq-dump.2.11.0, 1, 8
sample2markers.py, 1, 8
extract_markers.py, 1, 8
out1={output.read1}, 1, 8
out2={output.read2}, 1, 8
minlength={params.minlength}, 1, 8
maxlength={params.maxlength}, 1, 8
tossbrokenreads, 1, 8
{log.reformat}, 1, 9
{params.lowcov}, 1, 9
sketch.sh, 1, 8
name0={wildcards.sample}, 1, 8
comparesketch.sh, 1, 8
format=3, 1, 8
alltoall, 1, 8
scripts/plot_sketch_comparison_heatmap.py, 1, 8
scripts/plot_bbcountunique.py, 1, 8
reads_2.fastq, 1, 8
{params.universal}, 1, 9
{params.megares_db}, 1, 9
{input.R2}, 1, 9
{params.primary}, 1, 9
{params.gtag}, 1, 9
{input.stranded_junctions}, 1, 9
msigdb_v5.2_files_to_download_locally/msigdb_v5.2_GMTs/, 1, 8
{wildcards.gene_set}.v5.2.{wildcards.gene_ids}.gmt, 1, 9
{output}\, 1, 9
{input.gene_annot}, 1, 9
{input.clinical}, 1, 9
{input.gene_sets}, 1, 9
{config[pweave]}, 1, 9
{input.pmd}, 1, 9
{config[pandoc]}, 1, 9
{input.md}, 1, 9
{config[nbconvert]}, 1, 9
{input.cad_factors}, 1, 9
{input.mri_features}, 1, 9
{wildcards.factor}, 1, 9
ipython3, 1, 8
mri_convert, 1, 8
tmp={wildcards.read_length}, 1, 8
source={wildcards.read_length}, 1, 8
subsample_frac=${wildcards.coverage}, 1, 8
sample={wildcards.genome_size}, 1, 8
fname_cram=resources/experimental_data/SARS-CoV-2-2-strain-mix/$sample/$sample.cram, 1, 8
fname_expected_variants=resources/experimental_data/SARS-CoV-2-2-strain-mix/$sample/$sample_expected_variants.csv, 1, 8
fname_reference=resources/experimental_data/SARS-CoV-2-2-strain-mix/reference.fasta, 1, 8
fname_insert_bed=resources/experimental_data/SARS-CoV-2-2-strain-mix/nCoV-2019.insert.bed, 1, 8
{input.fname_fastq_R1}, 1, 9
{input.fname_fastq_R2}, 1, 9
workflow/plantRNAconcat.pl, 1, 8
adaptaters={params.adaptaters}, 1, 8
leading={params.leading}, 1, 8
trailing={params.trailing}, 1, 8
minlen={params.minlen}, 1, 8
nonrrnapath={params.nonrrnapath}, 1, 8
rrnapath={params.rrnapath}, 1, 8
flag=$flag+1, 1, 8
{params.normal_input}, 1, 9
{params.pon}, 1, 9
{params.matched}, 1, 9
{output.pool1Bam};, 1, 9
{output.pool2Bam};, 1, 9
artic_vcf_merge, 1, 8
{output.primerMutationVcf}, 1, 9
artic_make_depth_mask, 1, 8
artic_plot_amplicon_depth, 1, 8
artic_mask, 1, 8
artic_fasta_header, 1, 8
../../scripts/ref/bwa_index.py, 1, 8
../../scripts/ref/get_vep_cache.py, 1, 8
../../scripts/ref/get_vep_plugins.py, 1, 8
{log.faidx};, 1, 9
{log.bwaidx};, 1, 9
{log.faidx_output}, 1, 9
\ttrimmomatic, 1, 8
out1={output[0]}, 1, 8
out2={output[1]}, 1, 8
OD_bwa_index/{wildcards.sample}, 1, 8
{input[2]}, 1, 9
config[base_path]+kraken2_config[kraken2_path]+kraken2, 1, 8
concat_input_reads.fq.gz, 1, 8
humann2, 1, 8
workflow/scripts/make_cojofile.sh, 1, 8
workflow/scripts/run_cojo.sh, 1, 8
{input.cojofile}, 1, 9
{params.threshold}, 1, 9
{params.chrom}, 1, 9
{params.start}, 1, 9
{params.end}, 1, 9
{resources.mem_mb}, 1, 9
peakplotter-region, 1, 8
pheno_file={params.outprefix}.pheno, 1, 8
mlma={params.outprefix}.mlma, 1, 8
mlma_bgz={params.outprefix}.mlma.gz, 1, 8
$pheno_file, 1, 8
gcta64, 1, 8
$mlma_bgz, 1, 8
metal, 1, 8
{output.metal}, 1, 9
mergelist=$mktemp, 1, 8
$mergelist, 1, 8
{output.frq2}, 1, 9
mac_threshold=$awk, 1, 8
=mac_threshold{{print, 1, 8
{output.excludelist}, 1, 9
{output.gz}, 1, 9
{wildcards.instance}, 1, 9
f{{wildcards.rfile}}, 1, 8
f{{wildcards.cell_line}}, 1, 8
f{{wildcards.drug}}, 1, 8
=20, 1, 8
=2{{print, 1, 8
{log.zcat}, 1, 9
{log.bgzip}, 1, 9
dudes-parse-peptides, 1, 8
dudesdb, 1, 8
UNIPROT_VERSION=$curl, 1, 8
{output.speclist}, 1, 9
{output.swissprot_fasta}, 1, 9
{output.trembl_fasta}, 1, 9
screen.seqsfasta=current,, 1, 8
gdown, 1, 8
{params.sjoptions}, 1, 9
rsem-prepare-reference, 1, 8
{input.efa},{input.gfa}, 1, 9
{params.quant}/{wildcards.sra}, 1, 9
{output.gfa}, 1, 9
{output.gff3}, 1, 9
{output.pfa}, 1, 9
SPECtre.py, 1, 8
{output.covfwd}, 1, 9
{output.covrev}, 1, 9
DataParser.py, 1, 8
DeepRibo.py, 1, 8
predict.py, 1, 8
get_redun_hits, 1, 8
results/Ref_seqs_1, 1, 8
results/Ref_seqs_1/0_ref_seqs.csv, 1, 8
results/Ref_seqs_1_auto_predictions.csv, 1, 8
setup_fwd_srch, 1, 8
{input.query_list_file}, 1, 9
{input.db_list_file}, 1, 9
run_fwd_srch, 1, 8
{output.outdir}, 1, 9
sum_fwd_srch, 1, 8
{input.fwd_srch_out}, 1, 9
setup_rev_srch, 1, 8
{input.reverse_srch_db_file}, 1, 9
run_rev_srch, 1, 8
sum_rev_srch, 1, 8
{input.rev_srch_dir}, 1, 9
interp_srchs, 1, 8
{input.rev_srch_csv}, 1, 9
{input.interp_csv}, 1, 9
{output.interp_csv_with_ali_col}, 1, 9
{input.fwd_hit_seq_csv}, 1, 9
{input.fasta_dir}/$, 1, 9
images/example_workflow_diagram.png, 1, 8
shapeit, 1, 8
{input}.gz, 1, 9
{output.admix}, 1, 9
rfmix, 1, 8
scripts/cmrna_count.sh, 1, 8
scripts/cmrna_splicing.sh, 1, 8
../results/star/{wildcards.sample}/{wildcards.sample}_stats.txt, 1, 8
{params.indir}/{wildcards.sample}_sorted_Q20_stats.txt, 1, 9
{output.flag_stat}, 1, 9
{params.program_kraken}, 1, 9
{params.program_biom}, 1, 9
TAXON_INDICES=$seq, 1, 8
TAXON_LEVELS=kingdom, 1, 8
ZIP_FILES=$echo, 1, 8
{params.out_dir}/${{TAXON_LEVELS[$i-1]}}.log, 1, 9
{params.program_tax}, 1, 9
{params.program_report}, 1, 9
FORWARD=$echo, 1, 8
REVERSE=$echo, 1, 8
SINGLE=$echo, 1, 8
{output.expression}, 1, 9
{output.tissues}, 1, 9
{output.groups}, 1, 9
{input.tissues}, 1, 9
{input.expressions}, 1, 9
{output.stage}, 1, 9
{input.db_name}, 1, 9
models/smc_estimate_bootstrap_input/{params.population}_{params.distind}_rep, 1, 8
{output.smc}, 1, 9
{input.smc_bootstrap_out}, 1, 9
models/smc_split_bootstrap_input/{params.pop_pair}_12.{params.distind1}_rep, 1, 8
models/smc_split_bootstrap_input/{params.pop_pair}_21.{params.distind1}_rep, 1, 8
{output.split}, 1, 9
{input.smc_split}, 1, 9
{input.smc_split_bootstrap}, 1, 9
out1={output.file1}, 1, 8
out2={output.file2}, 1, 8
gchist={output.gchist}, 1, 8
reads=5, 1, 8
{input.gchist}, 1, 9
outpairwisedist={output.output_pairwise_distance}, 1, 8
len=${{#betainput[@]}}, 1, 8
alphadiv={input.d4}, 1, 8
output={output.alphavolatility}, 1, 8
len=${{#alphadiv[@]}}, 1, 8
pcoaoutput={output.pcoaoutput}, 1, 8
heatmap={HEATMAP}, 1, 8
len=${{#heatmap[@]}}, 1, 8
feature_heatmap={output.feature_heatmap}, 1, 8
important_feature_table_top={output.important_feature_table_top}, 1, 8
alphasigni={output.alphasigni}, 1, 8
coroutput={output.coroutput}, 1, 8
column={CONDITION}, 1, 8
site={output.site}, 1, 8
leninput=${{#betainput[@]}}, 1, 8
x=0, 1, 8
$leninput;, 1, 8
x=$leninput, 1, 8
output={output.pcoaoutput}, 1, 8
conditions={output.ancom}, 1, 8
column={params.column}, 1, 8
intersect.out, 1, 8
subtract.out, 1, 8
INTERVALS={input.interval}, 1, 8
.formatMETAXCAN_HASH, 1, 8
ORS=, 1, 8
?$/, 1, 8
stranger, 1, 8
tmp, 1, 8
{output.subdb}/{params.prefix}, 1, 9
{input[1]}/{params.prefix}, 1, 9
{output.BAM_sorted}, 1, 9
{output.BAI_index}, 1, 9
computeGCBias, 1, 8
initial_data_quality_cmd=fastqc, 1, 8
join_cmd=join_paired_ends.py, 1, 8
cluster_otus_cmd=pick_otus.py, 1, 8
pick_representatives_cmd=pick_rep_set.py, 1, 8
check_chimeric_seqs_cmd=parallel_identify_chimeric_seqs.py, 1, 8
classify_cmd=parallel_assign_taxonomy_rdp.py, 1, 8
make_otu_cmd=make_otu_table.py, 1, 8
convert_otu_table_cmd=biom, 1, 8
https://kircherlab.bihealth.org/download/CADD/v1.6/{wildcards.genome_build}/whole_genome_SNVs_inclAnno.tsv.gz, 1, 8
https://kircherlab.bihealth.org/download/CADD/v1.6/{wildcards.genome_build}/whole_genome_SNVs_inclAnno.tsv.gz.tbi, 1, 8
clinvar_tsv, 1, 8
main, 1, 8
http://ftp.ebi.ac.uk/pub/databases/genenames/hgnc/tsv/hgnc_complete_set.txt, 1, 8
http://ftp.ncbi.nlm.nih.gov/genomes/archive/old_refseq/H_sapiens/ARCHIVE/ANNOTATION_RELEASE.105/GFF/ref_GRCh37.p13_top_level.gff3.gz, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/legacy/exac_browser/ExAC.r1.sites.vep.vcf.gz, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/legacy/exac_browser/ExAC.r1.sites.vep.vcf.gz.tbi, 1, 8
chr=, 1, 8
chr=chr, 1, 8
varfish-server-background-db-{config[release_name]}-grch37, 1, 8
varfish-server-background-db-{config[release_name]}-grch38, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/release/2.1.1/liftover_grch38/vcf/exomes/gnomad.exomes.r2.1.1.sites.{wildcards.chrom}.liftover_grch38.vcf.bgz, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/release/2.1.1/liftover_grch38/vcf/exomes/gnomad.exomes.r2.1.1.sites.{wildcards.chrom}.liftover_grch38.vcf.bgz.tbi, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/release/3.1.1/vcf/genomes/gnomad.genomes.v3.1.1.sites.chr{wildcards.chrom}.vcf.bgz, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/release/3.1.1/vcf/genomes/gnomad.genomes.v3.1.1.sites.chr{wildcards.chrom}.vcf.bgz.tbi, 1, 8
https://storage.googleapis.com/gcp-public-data--gnomad/release/2.1.1/constraint/gnomad.v2.1.1.lof_metrics.by_gene.txt.bgz, 1, 8
_out={output}, 1, 8
out=$PWD/${{_out%.h2.db}}, 1, 8
varfish-annotator, 1, 8
BEGIN, 1, 8
dRep, 1, 8
{output.faa_cat}, 1, 9
{output.fna_cat}, 1, 9
addsnv.py, 1, 8
addindel.py, 1, 8
1.0, 1, 8
6.0, 1, 8
{config[cellranger]}, 1, 9
{config[bamtofastq]}, 1, 9
inkscape, 1, 8
{output.aligned}, 1, 9
{output.deduped}, 1, 9
nucmer, 1, 8
{log.tdm}, 1, 9
scripts/Assemblytics, 1, 8
syri, 1, 8
sample_files_ins, 1, 8
{params.maf}, 1, 9
{params.conf_pars}, 1, 9
{output.interval_list};, 1, 9
{params.pextra}, 1, 9
FMT/PL[:0]=0, 1, 8
{output.crypt:q}, 1, 9
{output.checksum:q}, 1, 9
{output.sort}, 1, 9
bismark2bedGraph, 1, 8
LC_COLLATE=C, 1, 8
{input.bedGraph}_sorted, 1, 9
[^, 1, 8
fq_lines=$, 1, 8
n_reads=$fq_lines, 1, 8
genome_len=$, 1, 8
hicstuff, 1, 8
instagraal, 1, 8
fq={output}, 1, 8
trim=${{fq%_[12].fastq.gz}}, 1, 8
numLines=$fastq-dump, 1, 8
fname=${{trim}}_1.fastq, 1, 8
islandpath, 1, 8
DownloadLog.txt, 1, 8
DownloadLog1.txt, 1, 8
Rlog.txt, 1, 8
dipcall-aux.js, 1, 8
{output.tbed}, 1, 9
{output.acceptor}, 1, 9
{output.interact}, 1, 9
{params.taxid}, 1, 9
htsfile, 1, 8
rgrep, 1, 8
{params.execdir}/scripts/reheader_gubbins.py, 1, 9
{wildcards.ref}, 1, 9
{params.execdir}/scripts/make_bed_from_gubbins.py, 1, 9
{params.execdir}/resources/alignment_references/{wildcards.ref}.fasta, 1, 9
{input.sentinel}, 1, 9
{params.execdir}/scripts/make_SNP_alignment.py, 1, 9
{params.execdir}/scripts/sclips.py, 1, 9
{params.execdir}/resources/alignment_references/, 1, 9
30, 1, 8
10, 1, 8
=45, 1, 8
MQ, 1, 8
=30, 1, 8
FORMAT/DP, 1, 8
=50, 1, 8
ADR[0:1], 1, 8
{params.execdir}/scripts/make_vcf_density_bed.py, 1, 9
{params.execdir}/scripts/make_PE_PPE_BED.py, 1, 9
{params.execdir}/scripts/smart_merge.py, 1, 9
{output.tR1}, 1, 9
ILLUMINACLIP:{params.adapters}:2:30:10, 1, 8
{params.min_len}, 1, 9
shovill, 1, 8
tblastn, 1, 8
{params.execdir}/resources/alignment_references/mabcessus.fasta, 1, 9
mashtree, 1, 8
mlst, 1, 8
{params.execdir}/scripts/make_sample_QC_csv.py, 1, 9
{input.trim}, 1, 9
{input.mabs_bam}, 1, 9
{params.execdir}/scripts/merge_QC_csv.py, 1, 9
PolyAAnalysis.jl/scripts/annotate_polyA.jl, 1, 8
{params.q}, 1, 9
{params.aligner}, 1, 9
{params.postprocess}, 1, 9
UmiAwareMarkDuplicatesWithMateCigar, 1, 8
OUTPUT={output.hs}, 1, 8
BAIT_INTERVALS={params.probes}, 1, 8
CLIP_OVERLAPPING_READS=true, 1, 8
REFERENCE_SEQUENCE={params.genome}, 1, 8
CollectAlignmentSummaryMetrics, 1, 8
vardict, 1, 8
{params.intervals}, 1, 9
testsomatic.R, 1, 8
var2vcf_paired.pl, 1, 8
{params.cbam}, 1, 9
somaticseq_parallel.py, 1, 8
paired, 1, 8
I={input.snv}, 1, 8
O={output.snv}, 1, 8
I={input.indel}, 1, 8
O={output.indel}, 1, 8
{output.snv}, 1, 9
{input.snv}, 1, 9
{input.indel}, 1, 9
{output.manifest}, 1, 9
workflow/scripts/spatial-rds.R, 1, 8
workflow/scripts/clusteringTree.R, 1, 8
workflow/scripts/spatial-qc.R, 1, 8
workflow/scripts/spatial-umap.R, 1, 8
workflow/scripts/spatial-metrics.R, 1, 8
workflow/scripts/spatial-cluster-markers.R, 1, 8
workflow/scripts/spatial-cluster-markerplots.R, 1, 8
workflow/scripts/spatial-spatial-markers.R, 1, 8
workflow/scripts/spatial-selected-markers.R, 1, 8
workflow/scripts/spatial-sc-cluster.R, 1, 8
workflow/scripts/spatial-spotlight.R, 1, 8
workflow/scripts/spatial-rctd.R, 1, 8
workflow/scripts/spatial-rctd-pdf.R, 1, 8
workflow/scripts/spatial-spotlight-pdf.R, 1, 8
workflow/scripts/spatial-seurat-decon.R, 1, 8
workflow/scripts/spatial-giotto.R, 1, 8
workflow/scripts/spatial-convert.R, 1, 8
workflow/scripts/spatial-tangram.py, 1, 8
workflow/scripts/spatial-tangram-pdf.R, 1, 8
workflow/scripts/spatial-tangram-gene.py, 1, 8
workflow/scripts/spatial-giotto-pdf.R, 1, 8
workflow/scripts/spatial-gbmtest.R, 1, 8
{input.flt3_csv}, 1, 9
{input.flt3_plot}, 1, 9
{input.kmt2a_csv}, 1, 9
{input.kmt2a_plot}, 1, 9
{input.idm}, 1, 9
{output.js}, 1, 9
{input.summary}, 1, 9
{output.pdf}, 1, 9
gmap_build, 1, 8
gsnap, 1, 8
I={input.sam}, 1, 8
lengthstarts;, 1, 8
t0/0, 1, 8
H={output.histo}, 1, 8
REF_FLAT={input.annot}, 1, 8
RIBOSOMAL_INTERVALS={input.ref_rrna}, 1, 8
STRAND_SPECIFICITY=NONE, 1, 8
CHART_OUTPUT={output.histo}, 1, 8
{params.online}, 1, 9
{params.offline}, 1, 9
{input.ref_id_mapping}, 1, 9
{input.id_mappings_path}, 1, 9
{input.var_plot_dir}, 1, 9
{input.var_csv}, 1, 9
{input.aln_stats}, 1, 9
{input.rna_stats}, 1, 9
{input.insert_stats}, 1, 9
{input.exon_cov_stats}, 1, 9
{input.vep_stats}, 1, 9
CREATE_INDEX=false, 1, 8
{output.fragments_per_gene}, 1, 9
{output.raw_base_count}, 1, 9
{input.table}, 1, 9
{params.exon_ratio_names}, 1, 9
{output.comm}, 1, 9
size=$stat, 1, 8
342, 1, 8
num_sig_variants_rep_A=$grep, 1, 8
{input.rawData}.temp_one, 1, 9
{input.rawData}.temp_two, 1, 9
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl, 1, 8
$TRINITY_HOME/util/misc/blast_outfmt6_group_segments.pl, 1, 8
$TRINITY_HOME/util/misc/blast_outfmt6_group_segments.tophit_coverage.pl, 1, 8
$TRINITY_HOME/util/align_and_estimate_abundance.pl, 1, 8
$TRINITY_HOME/util/abundance_estimates_to_matrix.pl, 1, 8
{{params.barcodes}}, 1, 9
.formatextract_barcodes, 1, 8
{output.full_qc}, 1, 9
{log.mem}, 1, 9
{params.minl}, 1, 9
{output.bam};, 1, 9
{output.metrics}, 1, 9
{params.tmp}/{wildcards.root}.mgf, 1, 9
{params.input}, 1, 9
{params.tables}, 1, 9
fastqsplitter, 1, 8
count+=1;, 1, 8
}};, 1, 8
count=0, 1, 8
{output.ref};, 1, 9
split$NF,a,:;, 1, 8
splita[3],a,,;, 1, 8
umi_length=`zcat, 1, 8
umi_length=$expr, 1, 8
minoverlap=`echo, 1, 8
11, 1, 8
}}}}, 1, 8
bc={params.bc_length};, 1, 8
{params.downsampling}, 1, 9
{params.filtermincounts}, 1, 9
zero={params.zero};, 1, 8
snippy-core{params.mask}, 1, 8
snippy-clean_full_aln, 1, 8
{snippy_dir}clean.full.aln, 1, 9
resources/{params.chainfile}, 1, 8
{params.fq_to_compress}, 1, 9
SOAPnuke, 1, 8
{output.bwa1}, 1, 9
{log.stderr1}, 1, 9
{output.bwa2}, 1, 9
{log.stderr2}, 1, 9
{input.bwa1}, 1, 9
{output.L178}, 1, 9
{output.L180}, 1, 9
MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000, 1, 8
OUTPUT={output.L183a}, 1, 8
METRICS_FILE={output.L183b}, 1, 8
{DEDUPLICATE_BISMARK}, 1, 9
{BAM2NUC}, 1, 9
workflow/scripts/gatk_parallel.py, 1, 8
VariantFiltration, 1, 8
dos2unix, 1, 8
1.bed, 1, 8
2.bed, 1, 8
3.bed, 1, 8
4.bed, 1, 8
frags.bed, 1, 8
fragments.bed, 1, 8
atropos, 1, 8
{output.vcf_file}, 1, 9
{SCRIPTS}/vcf2phylip.py, 1, 9
{SCRIPTS}/vcf2geno.py, 1, 9
raxmlHPC-PTHREADS, 1, 8
raxml-ng, 1, 8
{input.read}, 1, 9
{params.base_dir}/temp.fastq, 1, 9
{params.base_dir}/{wildcards.sample}.ribosomes.fastq, 1, 9
INDIR=$dirname, 1, 8
{params.export_dir}/without_names/humann2_${{group}}_unstratified.spf, 1, 9
{params.export_dir}/with_names/humann2_${{group}}_named_unstratified.spf, 1, 9
{params.export_dir}/without_names/humann2_${{group}}_relab_unstratified.spf, 1, 9
{params.export_dir}/with_names/humann2_${{group}}_named_relab_unstratified.spf, 1, 9
{input.isoforms}, 1, 9
{params.database}, 1, 9
{params.parallel}, 1, 9
init, 1, 8
{input.swissprot_blastp}, 1, 9
{input.swissprot_blastx}, 1, 9
LOAD_rnammer, 1, 8
{input.rRNA}, 1, 9
report, 1, 8
{output.annotation_table}, 1, 9
rwc, 1, 8
sizes.txt, 1, 8
get_parent_dir={input.sa};, 1, 8
drop, 1, 8
{output.done}, 1, 9
format1=$echo, 1, 8
format2=$echo, 1, 8
tmpdir=$mktemp, 1, 8
{input.star_aln}, 1, 9
